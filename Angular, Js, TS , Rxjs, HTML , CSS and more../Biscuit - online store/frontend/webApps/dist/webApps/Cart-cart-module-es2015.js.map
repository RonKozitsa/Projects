{"version":3,"sources":["./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js","./src/app/Cart/components/cart-page/cart-page.component.html","./src/app/Cart/cart.module.ts","./src/app/Cart/components/cart-page/cart-page.component.css","./src/app/Cart/components/cart-page/cart-page.component.ts"],"names":[],"mappingske;AAChT;AACnG;AACkC;AAC4B;;AAE7I;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wDAAwD,MAAM;AAC9D;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,gCAAgC;AAChC;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,wDAAwD,wEAAkB,EAAE,iDAAiD,iCAAiC,EAAE,iDAAiD;;AAEjN;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,0CAA0C;AACzE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,yCAAyC;AACxE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,2CAA2C;AAC1E;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2DAA2D,mBAAmB;AAC9E,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,wBAAwB;AACvD;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,UAAU,OAAO,mDAAK,EAAE;AACxB,aAAa,OAAO,mDAAK,EAAE;AAC3B,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,6DAAe,yBAAyB,qBAAqB,IAAI;AACzF,kBAAkB,OAAO,6DAAe,0BAA0B,qBAAqB,IAAI;AAC3F,mBAAmB,OAAO,6DAAe,2BAA2B,qBAAqB,IAAI;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,6CAA6C;AACtE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB,2DAA2D;AAChF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uBAAuB,4DAA4D;AACnF;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,oBAAoB,qCAAqC,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,mCAAmC;AACnC,4BAA4B;AAC5B;AACA,uBAAuB,yBAAyB,EAAE,GAAG;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4BAA4B;AAC5B;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,uBAAuB,8FAA8F;AACrH;AACA;AACA;AACA,UAAU,aAAa;AACvB;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC;AACA,mDAAmD,uCAAuC;AAC1F;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc,OAAO,6DAAe,qBAAqB;AACzD,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,wBAAwB,OAAO,mDAAK,0BAA0B;AAC9D,qBAAqB,OAAO,mDAAK,EAAE;AACnC,YAAY,OAAO,mDAAK,EAAE;AAC1B,mBAAmB,OAAO,oDAAM,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,qBAAqB;AAC1B,KAAK,+BAA+B,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE;AACrE;AACA;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,sFAAsF,4DAAY,GAAG;AACnI;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,oDAAoD,wEAAkB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;;AAEjM;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6EAA6E,yBAAyB;AACtG,0EAA0E,wBAAwB;AAClG;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,+DAA+D,UAAU,GAAG;AAC5F;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,uBAAuB,gFAAgF;AACvG;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,oCAAoC,cAAc;AAClD,aAAa;AACb;AACA;AACA;AACA,KAAK,uBAAuB;AAC5B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,oDAAM,EAAE;AAC5B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,0DAA0D,4DAAY,gCAAgC;AACpI;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB;AACvB,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,oBAAoB;AAC9C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,qBAAqB;AAChD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,uBAAuB;AAC5B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,8BAA8B,mCAAmC;AACjE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0BAA0B,2BAA2B;AACrD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB,yBAAyB;AAC9C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,oBAAoB;AAC9C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,qBAAqB;AAChD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uBAAuB,4BAA4B;AACnD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0BAA0B;AAC1B,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,gDAAgD;AAChD;AACA;AACA,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wCAAwC;AACxC;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,qCAAqC,uBAAuB,yCAAyC;AACpI;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,gBAAgB;AAChB;AACA,oBAAoB,+CAA+C;AACnE;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,gBAAgB;AAChB;AACA,oBAAoB,sCAAsC;AAC1D;AACA,gBAAgB;AAChB;AACA,mBAAmB,8BAA8B;AACjD;AACA,gBAAgB;AAChB;AACA,gBAAgB,iCAAiC;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,sCAAsC;AAC5D;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,sBAAsB;AAC3B,KAAK,uBAAuB;AAC5B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,oBAAoB;AAC7C,gBAAgB,OAAO,mDAAK,uBAAuB;AACnD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,sEAAsE;AACpG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,uDAAuD,wEAAkB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;;AAE7M;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,oCAAoC;AACnE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC,8BAA8B,oDAAe;AAC7C,gCAAgC,oDAAe;AAC/C,kCAAkC,oDAAe;AACjD,2BAA2B,oDAAe;AAC1C,0BAA0B,oDAAe;AACzC;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,0BAA0B;AAC1C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,kCAAkC;AAC1D;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,YAAY,yEAAiB;AAC7B;AACA,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,sCAAsC,0DAAa,iBAAiB,0DAAG;AACvE,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,oDAAoD,gEAAS,wDAAwD,gEAAS;AAC9H,0BAA0B,0DAAG;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,iBAAiB,IAAI,2EAAoB;AACzC,gBAAgB,0DAAa;AAC7B,0BAA0B,0DAAG;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,4JAA4J,2EAAoB,IAAI,gEAAS;AAC7L,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,2CAA2C,kDAAK,uBAAuB,0CAAK,IAAI,gEAAS;AACzF;AACA,4BAA4B;AAC5B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,aAAa;AACb;AACA,iCAAiC,gEAAS;AAC1C,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,aAAa,yBAAyB;AACtC;AACA;AACA,gBAAgB;AAChB;AACA,aAAa,0BAA0B;AACvC;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6BAA6B,2GAA2G;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4BAA4B;AAC5B,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,oCAAoC;AACpC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,0BAA0B;AAC/B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG;AAC7E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,cAAc,OAAO,6DAAe,qBAAqB;AACzD,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,gCAAgC,OAAO,mDAAK,EAAE;AAC9C,aAAa,OAAO,oDAAM,EAAE;AAC5B,kBAAkB,OAAO,0DAAY,yBAAyB;AAC9D,kBAAkB,OAAO,0DAAY,yBAAyB;AAC9D;AACA,WAAW,OAAO;AAClB;AACA,sBAAsB,EAAE;AACxB,uBAAuB,EAAE;AACzB;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,oFAAoF,4DAAY,GAAG;AACjI;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA,iBAAiB,OAAO,mDAAK,0BAA0B;AACvD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,sDAAsD;AACpF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6BAA6B;AACvD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,kEAAkE;AAClG;AACA,iDAAiD,wEAAkB,EAAE,mFAAmF;AACxJ;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,UAAU;AAChC;AACA,gBAAgB;AAChB;AACA,iBAAiB,gDAAgD;AACjE;AACA,gBAAgB;AAChB;AACA,wBAAwB,UAAU;AAClC;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6CAA6C,4CAA4C;AACzF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,sEAAsE;AACtE;AACA,mBAAmB,EAAE;AACrB;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,+BAA+B;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,qCAAqC,QAAQ,oCAAoC,QAAQ;AACzF;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;AACA;AACA,6CAA6C,qCAAqC;AAClF;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,uBAAuB,0BAA0B;AACjD,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB,mCAAmC,wBAAwB;AAC3D,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,0GAA0G,EAAE,OAAO;AACnH;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA,qEAAqE,EAAE,OAAO;AAC9E,WAAW,+EAA+E;AAC1F,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D,mBAAmB,EAAE;AACrB;AACA;AACA,8CAA8C;AAC9C;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,yBAAyB,iCAAiC;AAC1D;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,kDAAkD,wCAAwC;AAC1F;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,8EAA8E,wCAAwC;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,oDAAoD,EAAE,OAAO;AAC7D;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,WAAW,SAAS,EAAE;AAChD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,iCAAiC,WAAW,WAAW,EAAE;AACzD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,WAAW,KAAK,EAAE;AAC7C;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,oEAAoE,uDAAS,GAAG;AAChH;AACA,uDAAuD,wEAAkB,EAAE,gDAAgD,mCAAmC,8DAAQ,CAAC,uDAAS,GAAG,EAAE,gDAAgD;AACrO;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,yCAAyC,yEAAiB,UAAU,yDAAS,aAAa,gEAAgB;AAC1G;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,4BAA4B,2EAAmB,UAAU,yDAAS,aAAa,gEAAgB;AAC/F,2BAA2B,2EAAmB,UAAU,yDAAS,aAAa,gEAAgB;AAC9F;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kCAAkC,yCAAyC;AAC3E;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,8BAA8B,qCAAqC;AACnE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,6BAA6B,oCAAoC;AACjE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,eAAe,kEAAU;AACzB;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,0BAA0B,6DAAM;AAClD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wCAAwC;AACxC;AACA,gBAAgB;AAChB;AACA,mBAAmB,2BAA2B,6DAAM;AACpD,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gDAAgD,kBAAkB;AAClE;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,sFAAsF;AACrG;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sCAAsC;AACtC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,oBAAoB;AACzB,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,yDAAyD,wEAAkB,EAAE,kDAAkD,kCAAkC,EAAE,kDAAkD;;AAErN;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,sEAAsE;AACtG;AACA,oDAAoD,wEAAkB,EAAE,0FAA0F;AAClK;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,oDAAoD;AACjE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,oDAAoD;AACjE;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8BAA8B,gEAAS;AACvC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,iBAAiB,wBAAwB,EAAE;AAC3C,6BAA6B,gEAAS;AACtC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,wCAAwC,2CAA2C;AACnF,2BAA2B,2CAA2C;AACtE;AACA,gCAAgC;AAChC;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,kDAAkD,2DAAI;AACtD,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,sEAAsE,EAAE,8BAA8B,SAAS,SAAS;AACxH;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB,8BAA8B,sDAAS;AACvC,uBAAuB,EAAE;AACzB,+BAA+B,sDAAS;AACxC;AACA;AACA,YAAY,kDAAK;AACjB,sBAAsB,6DAAM;AAC5B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,cAAc,wBAAwB,2FAA2F,gEAAS;AAC1I;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,cAAc,OAAO;AACrB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,yBAAyB;AAC5C;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sBAAsB,uCAAuC;AAC7D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,gCAAgC,0BAA0B;AAC1D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,oBAAoB;AAC9C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,qBAAqB;AAChD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kCAAkC,qCAAqC;AACvE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,mDAAmD,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,yBAAyB,qBAAqB,qBAAqB,0BAA0B,oBAAoB,6BAA6B,UAAU,aAAa,aAAa,eAAe,gBAAgB,gCAAgC,mBAAmB,yBAAyB,eAAe,oBAAoB,aAAa,cAAc,oBAAoB,mBAAmB,iBAAiB,YAAY,iBAAiB,kBAAkB,yBAAyB,wFAAwF,kBAAkB,sCAAsC,qBAAqB,uCAAuC,oBAAoB,sCAAsC,sBAAsB;AAChyB,aAAa;AACb;AACA;AACA;AACA,KAAK,mCAAmC;AACxC,KAAK,6BAA6B;AAClC,KAAK,oBAAoB;AACzB,KAAK,0BAA0B;AAC/B,KAAK,4BAA4B;AACjC,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,uBAAuB;AAC5B,KAAK,OAAO,oDAAM;AAClB;AACA;AACA,iBAAiB,OAAO,uDAAS,oBAAoB,eAAe,IAAI;AACxE,mBAAmB,OAAO,mDAAK,EAAE;AACjC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,cAAc,OAAO,oDAAM,EAAE;AAC7B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB,iBAAiB;AACxC,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,mFAAmF,qCAAqC;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,cAAc,oCAAoC,iBAAiB,kBAAkB,kBAAkB,gBAAgB,cAAc,kBAAkB,aAAa,qBAAqB,oBAAoB,aAAa,iBAAiB,yCAAyC,gBAAgB,gDAAgD,WAAW,YAAY,YAAY,eAAe,wCAAwC,eAAe;AACjf,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,aAAa,OAAO,mDAAK,EAAE;AAC3B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,cAAc,OAAO,oDAAM,EAAE;AAC7B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,mDAAmD,GAAG;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,oBAAoB,aAAa,sBAAsB,mBAAmB,2BAA2B,mBAAmB,2BAA2B,qBAAqB,YAAY,aAAa,kBAAkB,mBAAmB,kCAAkC,0BAA0B,kCAAkC,gCAAgC,wBAAwB,kBAAkB,mBAAmB,cAAc,oBAAoB,aAAa,kBAAkB,cAAc,gBAAgB,eAAe,SAAS,WAAW,YAAY,oBAAoB,kBAAkB,yBAAyB,kBAAkB,iBAAiB,eAAe,YAAY,6BAA6B,UAAU,wBAAwB,kBAAkB,mBAAmB,mEAAmE,wBAAwB,qBAAqB,mBAAmB,iBAAiB,YAAY,iBAAiB,kBAAkB,0BAA0B,oBAAoB,aAAa,kBAAkB,cAAc;AAClmC,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,cAAc,OAAO,oDAAM,EAAE;AAC7B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,uBAAuB,EAAE;AACzB,6BAA6B,sDAAS;AACtC,sBAAsB,gEAAS;AAC/B;AACA,YAAY,6DAAM;AAClB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,gCAAgC,sDAAS;AACzC,sBAAsB,0DAAG,sBAAsB,gEAAS;AACxD,uBAAuB,EAAE;AACzB,iDAAiD,EAAE,KAAK,sDAAS;AACjE,sBAAsB,qEAAc,eAAe,6DAAM;AACzD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,iDAAiD,4DAAK,gBAAgB,gEAAS;AAC/E,YAAY,iDAAI;AAChB,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,wCAAwC,EAAE;AAC1C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gCAAgC,sDAAS,0BAA0B,gEAAS,kBAAkB,0DAAG;AACjG,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,IAAI,sDAAS;AACb,cAAc,gEAAS;AACvB;AACA,IAAI,6DAAM;AACV,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,IAAI,qEAAc;AAClB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,QAAQ,sDAAS;AACjB,kBAAkB,gEAAS,kBAAkB,qEAAc,uBAAuB,0DAAG;AACrF,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2BAA2B,EAAE;AAC7B;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,yCAAyC;AACpE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yCAAyC,EAAE;AAC3C;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,yBAAyB,MAAM,wBAAwB;AACjH,qDAAqD,yBAAyB,MAAM,wBAAwB;AAC5G;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,2EAA2E,EAAE;AAC7E,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,4BAA4B,UAAU,GAAG,QAAQ;AACjD;AACA,gCAAgC,UAAU,GAAG,QAAQ,GAAG,UAAU;AAClE;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,4BAA4B,0BAA0B,EAAE;AACxD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gCAAgC,qBAAqB,UAAU,GAAG,kBAAkB,GAAG,EAAE;AACzF;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,+DAA+D,EAAE;AACjE;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,4BAA4B,6BAA6B,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,0EAA0E;AAC1G;AACA,4DAA4D,wEAAkB,EAAE,sGAAsG;AACtL;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,UAAU,GAAG,kDAAkD,GAAG,8CAA8C;AAC/H;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,qBAAqB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,sBAAsB;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,mCAAmC,4BAA4B;AAC/D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kCAAkC,4BAA4B;AAC9D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB,aAAa,mBAAmB;AACpD;AACA;AACA,oBAAoB,aAAa,+BAA+B;AAChE;AACA;AACA,oBAAoB,aAAa,8BAA8B;AAC/D;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,mBAAmB;AACjC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,+BAA+B;AACpC,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,6BAA6B;AAClC,KAAK,oBAAoB;AACzB,KAAK,uBAAuB;AAC5B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,eAAe,OAAO,mDAAK,EAAE;AAC7B,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,gBAAgB,OAAO,oDAAM,EAAE;AAC/B,cAAc,OAAO,oDAAM,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,eAAe,mFAAmF;AAClG;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,6BAA6B;AAC1D,iDAAiD,kBAAkB,WAAW,YAAY,iBAAiB,qBAAqB,eAAe,+BAA+B,WAAW;AACzL,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wBAAwB,oEAAoE;AAC5F;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,sBAAsB,oEAAoE;AAC1F;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yCAAyC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,2BAA2B;AACjF;AACA;AACA,0EAA0E,kBAAkB,cAAc,gBAAgB,kBAAkB,eAAe;AAC3J,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,aAAa,OAAO,mDAAK,EAAE;AAC3B,cAAc,OAAO,oDAAM,EAAE;AAC7B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,UAAU;AAChC;AACA,gBAAgB;AAChB;AACA,iBAAiB,gDAAgD;AACjE;AACA,gBAAgB;AAChB;AACA,wBAAwB,UAAU;AAClC;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6CAA6C,4CAA4C;AACzF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,sEAAsE;AACtE;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,uCAAuC;AACvD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,2BAA2B,yBAAyB;AACpD,+BAA+B,QAAQ;AACvC,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,yBAAyB;AACpD,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,kBAAkB;AACrC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,UAAU;AAChC;AACA,gBAAgB;AAChB;AACA,iBAAiB,gDAAgD;AACjE;AACA,gBAAgB;AAChB;AACA,wBAAwB,UAAU;AAClC;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6CAA6C,4CAA4C;AACzF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,sEAAsE;AACtE;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,kCAAkC;AAClD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,UAAU;AAChC;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,UAAU;AAClC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6CAA6C,4CAA4C;AACzF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,oCAAoC;AACpD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,uBAAuB,wCAAwC;AAC/D;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,wCAAwC;AACjE;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,oCAAoC,2CAA2C;AAC/E;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kCAAkC,8BAA8B;AAChE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,kBAAkB,yBAAyB,GAAG,6CAA6C,GAAG,0BAA0B;AACxH;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,iCAAiC;AAC3D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,iCAAiC,mCAAmC;AACpE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,6BAA6B;AACxD;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAY,EAAE,0DAAW;AACnD;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,uDAAuD,wEAAkB,EAAE,gDAAgD,gCAAgC,EAAE,gDAAgD;;AAE7M;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qCAAqC,EAAE,sCAAsC;AAC7E;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,uCAAuC,2DAA2D,EAAE;AACnI;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,gEAAU;AACrE,gCAAgC;AAChC;AACA,2CAA2C;AAC3C;AACA;AACA,iBAAiB,OAAO,6DAAe,4BAA4B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,uCAAuC;AAC/D;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,gEAAU;AACrE,gCAAgC;AAChC;AACA,2CAA2C,GAAG;AAC9C,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,0CAA0C,gEAAU;AACjF,oCAAoC;AACpC;AACA,mDAAmD;AACnD,aAAa;AACb;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,gEAAU;AACrE,gCAAgC;AAChC;AACA,2CAA2C,GAAG;AAC9C,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,sBAAsB,EAAE;AACvC;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mCAAmC,2DAAI;AACvC,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,mBAAmB;AACjC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oEAAoE;AACrF;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oEAAoE,EAAE;AACtE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,qEAAqE,EAAE;AACvE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,4DAA4D,6BAA6B,EAAE;AAC1H;AACA;AACA;AACA,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,0BAA0B;AAC/B,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE;AACtD;AACA;AACA,aAAa,OAAO,0DAAY,2BAA2B,gBAAgB,IAAI;AAC/E,oBAAoB,OAAO,0DAAY,2BAA2B,OAAO,wDAAU,iBAAiB,IAAI;AACxG,eAAe,OAAO,0DAAY,6BAA6B,gBAAgB,IAAI;AACnF,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,aAAa,OAAO,mDAAK,mBAAmB;AAC5C,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,eAAe,OAAO,mDAAK,EAAE;AAC7B,kBAAkB,OAAO,oDAAM,EAAE;AACjC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,0EAA0E;AACxG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,oDAAoD,wEAAkB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;;AAEjM;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oCAAoC,yDAAW;AAC/C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,iEAAiE,QAAQ;AACzE;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,YAAY;AACZ;AACA,OAAO,EAAE;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,kBAAkB,uEAAuE;AACzF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,yCAAyC,sBAAsB;AAC/D;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,+CAA+C,wEAAkB,EAAE,wCAAwC,sBAAsB,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,wCAAwC;;AAE/L;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,gCAAgC;AAChC;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,qBAAqB,gCAAgC;AACrD;AACA,gBAAgB;AAChB;AACA,gBAAgB,kDAAkD;AAClE;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,8CAA8C,EAAE;AAChD,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAAiB;AAChD,sEAAsE,oBAAoB,aAAa,0BAA0B,sBAAsB,gBAAgB;AACvK,aAAa;AACb;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,wDAAU;AACtB;AACA;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,YAAY,OAAO,mDAAK,EAAE;AAC1B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,oBAAoB,OAAO,oDAAM,sBAAsB;AACvD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,4CAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8DAA8D,4BAA4B;AAC1F;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,qBAAqB,2BAA2B,EAAE;AAClD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,qBAAqB,6BAA6B,EAAE;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,wBAAwB;AACxB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,iDAAiD;AACjD;AACA,gBAAgB;AAChB;AACA,qBAAqB,mCAAmC;AACxD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oCAAoC,yDAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,2BAA2B,2BAA2B,EAAE;AACxD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6BAA6B,6BAA6B;AAC1D;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,2DAA2D,QAAQ;AACnE;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,qCAAqC,sDAAQ,SAAS,cAAc,6CAA6C,4BAA4B;AAC7I,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA;AACA;AACA,KAAK,OAAO,4DAAc,EAAE;AAC5B,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,kBAAkB;AACvB,KAAK,OAAO,8DAAgB;AAC5B;AACA,mDAAmD,wEAAkB,EAAE,4CAA4C,0BAA0B,8DAAQ,CAAC,4DAAc,GAAG,8DAAQ,CAAC,sDAAQ,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,aAAa,8DAAQ,CAAC,8DAAgB,GAAG,EAAE,4CAA4C;;AAE9S;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,8BAA8B;AAC9B,mBAAmB,EAAE;AACrB,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,wBAAwB,qCAAqC;AAC7D;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,yCAAyC;AAC9D;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA;AACA;AACA,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,sBAAsB;AAC3B,KAAK;AACL;AACA,8CAA8C,wEAAkB,EAAE,uCAAuC,qBAAqB,8DAAQ,CAAC,sEAAwB,GAAG,8DAAQ,CAAC,sDAAQ,GAAG,8DAAQ,iBAAiB,8DAAQ,kBAAkB,EAAE,uCAAuC;;AAElR;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,yDAAyD,wEAAkB,EAAE,kDAAkD,kCAAkC,EAAE,kDAAkD;;AAErN;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,iDAAiD;AAChF;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,8CAA8C;AAC7E;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,6CAA6C;AAC5E;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,6CAA6C;AAC5E;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,+CAA+C;AAC9E;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,iDAAiD;AAChF;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,gBAAgB;AAChB;AACA,eAAe,mCAAmC;AAClD;AACA,gBAAgB;AAChB;AACA,oBAAoB,yCAAyC;AAC7D;AACA,gBAAgB;AAChB;AACA,wBAAwB,6CAA6C;AACrE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4BAA4B,+BAA+B;AAC3D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,8BAA8B;AACxD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD,uBAAuB,uBAAuB;AAC9C;AACA,sFAAsF,OAAO;AAC7F,4FAA4F;AAC5F,oFAAoF;AACpF,oFAAoF,OAAO;AAC3F;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,mDAAmD,gDAAgD;AACnG;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,mDAAmD,6BAA6B;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,kCAAkC;AACrF;AACA,kGAAkG;AAClG;AACA,mDAAmD,6DAA6D;AAChH;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,mDAAmD,4CAA4C;AAC/F;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC;AACA,mDAAmD,4CAA4C;AAC/F;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,OAAO,0DAAY,iCAAiC,gBAAgB,IAAI;AAC3F,gBAAgB,OAAO,0DAAY,8BAA8B,gBAAgB,IAAI;AACrF,eAAe,OAAO,0DAAY,6BAA6B,gBAAgB,IAAI;AACnF,eAAe,OAAO,0DAAY,6BAA6B,gBAAgB,IAAI;AACnF,iBAAiB,OAAO,0DAAY,+BAA+B,gBAAgB,IAAI;AACvF,mBAAmB,OAAO,0DAAY,iCAAiC,gBAAgB,IAAI;AAC3F,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,oDAAM,EAAE;AACjC,YAAY,OAAO,mDAAK,EAAE;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,0DAA0D,4DAAY,GAAG;AACvG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,0DAA0D;AAC1E;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,KAAK;AACL,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,+CAAU;AACzB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA,eAAe;AACf,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2CAA2C,EAAE;AAC7C,KAAK;AACL;AACA,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA,qBAAqB,4DAAK;AAC1B,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,2CAA2C,0DAAG;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,kBAAkB,OAAO,KAAK,6DAAM;AACpC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,4DAAK;AAClB,mBAAmB,EAAE;AACrB,iDAAiD,6DAAM;AACvD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,kDAAkD,6DAAM;AACxD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,eAAe,kDAAK;AACpB,kBAAkB,6DAAM;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,0DAAG;AAChB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,sDAAsD,wEAAkB,EAAE,+CAA+C,+BAA+B,EAAE,+CAA+C;;AAEzM;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,8BAA8B,yDAAW,CAAC;AACjE;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,uBAAuB,qGAAqG;AAC5H;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA,+GAA+G,SAAS,mBAAmB,+FAA+F,SAAS,iGAAiG,UAAU,UAAU,qFAAqF,QAAQ,kBAAkB,6FAA6F,SAAS,mGAAmG,SAAS,YAAY;AACrrB,aAAa;AACb;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,UAAU,OAAO,mDAAK,EAAE;AACxB,oBAAoB,OAAO,mDAAK,EAAE;AAClC,eAAe,OAAO,mDAAK,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,0CAA0C;AAC5F;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,gCAAgC;AAC9C;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,mDAAmD;AAClF;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,yBAAyB;AAC9B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,4DAAc;AAC1B;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,aAAa,OAAO,oDAAM,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,0BAA0B,4DAAY;AACtC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,0DAA0D,wEAAkB,EAAE,mDAAmD,mCAAmC,EAAE,mDAAmD;;AAEzN;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,8CAA8C;AAC9D;AACA,gBAAgB;AAChB;AACA,uBAAuB,yCAAyC;AAChE;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA,gCAAgC,6BAA6B,4CAA4C;AACzG,kCAAkC;AAClC;AACA,iEAAiE,mBAAmB;AACpF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,WAAW,OAAO,mDAAK,EAAE;AACzB,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,eAAe,OAAO,mDAAK,EAAE;AAC7B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,YAAY,OAAO,mDAAK,EAAE;AAC1B,aAAa,OAAO,mDAAK,EAAE;AAC3B,cAAc,OAAO,mDAAK,EAAE;AAC5B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,sEAAsE,4DAAY,GAAG;AACnH;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,qDAAqD,wEAAkB,EAAE,8CAA8C,8BAA8B,EAAE,8CAA8C;;AAErM;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB,WAAW,cAAc,UAAU,SAAS,EAAE;AACnE;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB,kBAAkB;AACpC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wBAAwB,iEAAiE;AACzF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,oCAAoC,mBAAmB;AACvD,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,oBAAoB;AAC9C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,qBAAqB;AAChD;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kCAAkC,4BAA4B;AAC9D;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sCAAsC,wBAAwB,YAAY,IAAI;AAC9E;AACA,+BAA+B,gCAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,wBAAwB;AAC7B,KAAK,OAAO,+DAAiB;AAC7B;AACA;AACA,WAAW,OAAO,mDAAK,EAAE;AACzB,YAAY,OAAO,mDAAK,EAAE;AAC1B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,+BAA+B,OAAO,0DAAY,SAAS,yDAAW,GAAG,gBAAgB,IAAI;AAC7F,aAAa,OAAO,oDAAM,EAAE;AAC5B,aAAa,OAAO,oDAAM,EAAE;AAC5B,kBAAkB,OAAO,oDAAM,EAAE;AACjC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,4DAA4D,4DAAY,GAAG;AACzG;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,qDAAqD,wEAAkB,EAAE,8CAA8C,8BAA8B,EAAE,8CAA8C;;AAErM;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,uCAAuC;AACtE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,yCAAyC;AACxE;AACA;AACA;AACA,KAAK,OAAO,yDAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2DAA2D,mBAAmB;AAC9E,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,sBAAsB;AACrD;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,6DAAe,uBAAuB,qBAAqB,IAAI;AACvF,mBAAmB,OAAO,6DAAe,yBAAyB,qBAAqB,IAAI;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA,mDAAmD,UAAU;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,iCAAiC;AACjC,4BAA4B;AAC5B;AACA,uBAAuB,yBAAyB,EAAE,GAAG;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uCAAuC;AACnE;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY,OAAO,6DAAe,mBAAmB;AACrD,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,eAAe,OAAO,mDAAK,EAAE;AAC7B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,oDAAM,EAAE;AAChC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,gFAAgF,4DAAY,GAAG;AAC7H;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,0BAA0B,4DAA4D;AACtF;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,4BAA4B,kEAAkE;AAC9F;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,4BAA4B,kEAAkE;AAC9F;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB,WAAW,eAAe,GAAG,iBAAiB,GAAG,iBAAiB,EAAE;AACpF;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,yDAAyD,wEAAkB,EAAE,kDAAkD,kCAAkC,EAAE,kDAAkD;;AAErN;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,sEAAsE;AACtG;AACA,oDAAoD,wEAAkB,EAAE,0FAA0F;AAClK;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,4FAA4F;AACzG;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,aAAa,4FAA4F;AACzG;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qEAAqE,uDAAS,GAAG;AACjH;AACA,uDAAuD,wEAAkB,EAAE,gDAAgD,oCAAoC,8DAAQ,CAAC,uDAAS,GAAG,EAAE,gDAAgD;AACtO;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,wBAAwB,2EAAmB,SAAS,yDAAS,aAAa,gEAAgB;AAC1F;AACA;AACA,gBAAgB;AAChB;AACA,wBAAwB,yBAAyB;AACjD;AACA,gBAAgB;AAChB;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,oBAAoB;AAC9C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,qBAAqB;AAChD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kCAAkC,4BAA4B;AAC9D;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,yBAAyB;AAClD;AACA,gBAAgB;AAChB;AACA,uBAAuB,8BAA8B;AACrD;AACA,gBAAgB;AAChB;AACA,uBAAuB,8BAA8B;AACrD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,8EAA8E;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,uCAAuC,6BAA6B;AACvH,0DAA0D,2BAA2B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe,QAAQ,oBAAoB,aAAa,sBAAsB,mBAAmB,wBAAwB,UAAU,wBAAwB,mBAAmB,6BAA6B,aAAa,qBAAqB,aAAa,WAAW,kBAAkB,UAAU,iCAAiC,yBAAyB,sBAAsB,YAAY,8BAA8B,UAAU,iCAAiC,yBAAyB,cAAc,kBAAkB,4DAA4D,oBAAoB,aAAa,0BAA0B,sBAAsB,sBAAsB,mBAAmB,yBAAyB,6BAA6B,eAAe,UAAU,kBAAkB;AAC/zB,aAAa;AACb;AACA;AACA;AACA,KAAK,4BAA4B;AACjC,KAAK,uBAAuB;AAC5B,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK;AACL;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,YAAY,OAAO,mDAAK,EAAE;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,oEAAoE,4DAAY,GAAG;AACjH;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,oDAAoD,wEAAkB,EAAE,6CAA6C,6BAA6B,EAAE,6CAA6C;;AAEjM;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,+BAA+B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0BAA0B,cAAc;AACxC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,+BAA+B,+DAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,eAAe,MAAM,QAAQ,YAAY,aAAa,+BAA+B,iBAAiB,qBAAqB;AACjK,aAAa;AACb;AACA;AACA;AACA,KAAK,6BAA6B,OAAO,uDAAS,wBAAwB,GAAG;AAC7E,KAAK;AACL;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,cAAc,OAAO,mDAAK,EAAE;AAC5B,wBAAwB,OAAO,0DAAY,0BAA0B,OAAO,yDAAW,gBAAgB,IAAI;AAC3G,kBAAkB,OAAO,oDAAM,mBAAmB;AAClD;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,qDAAqD,4DAAY,wCAAwC;AACvI;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,sDAAsD,wEAAkB,EAAE,+CAA+C,+BAA+B,EAAE,+CAA+C;;AAEzM;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,uBAAuB,0GAA0G;AACjI;AACA,+GAA+G,uBAAuB,+FAA+F,SAAS,iGAAiG,UAAU,YAAY,qFAAqF,sBAAsB,6FAA6F,UAAU,mGAAmG,SAAS,aAAa;AAChrB,aAAa;AACb;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB,oBAAoB,OAAO,mDAAK,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,kDAAkD,WAAW;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,sBAAsB,yBAAyB;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,0CAA0C;AAC5F;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,gCAAgC;AAC9C;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS,UAAU,mDAAmD;AAClF;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,yBAAyB;AAC9B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,4DAAc;AAC1B;AACA;AACA,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,aAAa,OAAO,oDAAM,EAAE;AAC5B,cAAc,OAAO,oDAAM,EAAE;AAC7B,kBAAkB,OAAO,mDAAK,EAAE;AAChC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,2GAA2G;AACzI;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uEAAuE,uBAAuB;AAC9F;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD;AACA,wCAAwC,uCAAuC,MAAM,4BAA4B,MAAM;AACvH;AACA,yCAAyC,gBAAgB;AACzD,aAAa;AACb;AACA;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,cAAc,OAAO,mDAAK,EAAE;AAC5B,YAAY,OAAO,mDAAK,EAAE;AAC1B;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,qCAAqC,0DAAY;AACjD;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oEAAoE;AACrF;AACA,gBAAgB;AAChB;AACA,iBAAiB,qCAAqC;AACtD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,kBAAkB,6BAA6B;AAC/C;AACA,gBAAgB;AAChB;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA,uBAAuB,2GAA2G;AAClI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iDAAiD;AACvF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU,OAAO,mDAAK,EAAE;AACxB,kBAAkB,OAAO,mDAAK,EAAE;AAChC,eAAe,OAAO,mDAAK,EAAE;AAC7B,YAAY,OAAO,mDAAK,EAAE;AAC1B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,mBAAmB,OAAO,oDAAM,qBAAqB;AACrD,yBAAyB,OAAO,oDAAM,2BAA2B;AACjE;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,4BAA4B,4DAAc,0BAA0B,uDAAuD;AAC3H;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,gCAAgC,OAAO,oDAAM,4BAA4B;AAC9E;AACA,0CAA0C,wEAAkB,EAAE,mCAAmC,iBAAiB,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,mBAAmB,EAAE,mCAAmC;;AAEtM;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA,wDAAwD,wEAAkB,EAAE,iDAAiD,iCAAiC,EAAE,iDAAiD;;AAEjN;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C,wCAAwC,eAAe;AACvD;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,6BAA6B,sDAAS;AACtC,kBAAkB,0DAAG;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,+BAA+B,EAAE;AACjC,yCAAyC,oDAAe;AACxD;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,qDAAqD,0DAAG;AACxD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,gDAAgD,0DAAG;AACnD,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,2DAA2D,gEAAS;AACpE,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,0BAA0B,qBAAqB;AAC/C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,2BAA2B,sBAAsB;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,gCAAgC;AACnD;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,8BAA8B;AAC9B,wBAAwB;AACxB;AACA,mBAAmB,yBAAyB,EAAE,GAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,qEAAqE,MAAM,SAAS,uBAAuB;AAC3G,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,sDAAQ,EAAE;AACtB,KAAK,OAAO,sEAAwB,EAAE;AACtC,KAAK,2BAA2B;AAChC,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,aAAa;AAClB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,4DAAc;AAC1B;AACA;AACA,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,kBAAkB,OAAO,oDAAM,EAAE;AACjC;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA,0BAA0B,4DAAY;AACtC;AACA,aAAa;AACb;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ,UAAU,6CAA6C;AAC3E;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;;AAE++E;AAC/+E;;;;;;;;;;;;ACvgVA,i+CAAi+C,gIAAgI,qBAAqB,mlBAAmlB,+kB;;;;;;;;;;;;;;;;;;;;;;ACAhqE;AACM;AACA;AACW;AAEqB;AACxB;AAavD,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAI;AAAd,UAAU;IAXtB,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,2FAAiB,CAAC;QACjC,OAAO,EAAE;YACT,4DAAY;YACV,kEAAY;YACZ,yEAAc;YACd,4DAAY,CAAC,QAAQ,CAAC;gBACpB,EAAE,IAAI,EAAE,EAAE,EAAG,SAAS,EAAE,2FAAiB,EAAE;aAC5C,CAAC;SACH;KACF,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;ACnBvB,yBAAyB,mCAAmC,0CAA0C,GAAG,iBAAiB,cAAc,iBAAiB,wBAAwB,sBAAsB,GAAG,mBAAmB,qBAAqB,uBAAuB,iBAAiB,kBAAkB,GAAG,eAAe,yBAAyB,GAAG,iBAAiB,oBAAoB,4BAA4B,sBAAsB,qBAAqB,kBAAkB,GAAG,mBAAmB,mBAAmB,GAAG,cAAc,6BAA6B,oCAAoC,mBAAmB,GAAG,+CAA+C,m1C;;;;;;;;;;;;;;;;;;;;;ACA3lB;AACM;AAEC;AACT;AACT;AAOlD,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAQ5B,YAAoB,WAAwB,EAAU,YAAsB,EAAU,IAAgB;QAAlF,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAAU,SAAI,GAAJ,IAAI,CAAY;QAPtG,cAAS,GAAG,EAAE,CAAC;QACf,wBAAmB,GAAG,EAAE,CAAC;QACzB,kBAAa,GAAG,KAAK,CAAC;IAKoF,CAAC;IAE3G,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,2DAAM,CAAC,GAAG,qBAAqB,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;QACnE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACvD,IAAI,QAAQ,CAAC,MAAM,KAAK,gEAAW,CAAC,EAAE,EAAE;gBACtC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;gBAC5B,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YAChD,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,gBAA6B;QACrC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC9C,IAAI,EAAE,IAAI;YACV,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC,MAAM,CAAC;IACZ,CAAC;IAED,eAAe,CAAC,IAAI;QAClB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,SAAS;QACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9C,IAAI,CAAC,SAAS,GAAG,IAAkB,CAAC;YACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACnE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,YAAY;QACd,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;IAC5C,CAAC;CACF;;YA9CkC,yEAAW;YAAwB,mEAAQ;YAAgB,+DAAU;;AAH9C;IAAvD,+DAAS,CAAC,yBAAyB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kEAAsC;AAC1C;IAAlD,+DAAS,CAAC,oBAAoB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;6DAAiC;AANxE,iBAAiB;IAL7B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,6KAAyC;;KAE1C,CAAC;GACW,iBAAiB,CAsD7B;AAtD6B","file":"Cart-cart-module-es2015.js","sourcesContent":["import { Injectable, ɵɵdefineInjectable, Directive, TemplateRef, Input, ContentChildren, EventEmitter, Component, Output, Optional, Host, NgModule, ChangeDetectionStrategy, ViewEncapsulation, Renderer2, ElementRef, forwardRef, ChangeDetectorRef, Inject, PLATFORM_ID, NgZone, HostListener, LOCALE_ID, ɵɵinject, ViewChild, ViewContainerRef, ComponentFactoryResolver, ContentChild, Injector, ApplicationRef, RendererFactory2, INJECTOR, Attribute, InjectionToken } from '@angular/core';\nimport { CommonModule, isPlatformBrowser, getLocaleDayNames, FormStyle, TranslationWidth, getLocaleMonthNames, formatDate, DOCUMENT, getLocaleDayPeriods } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport { Subject, BehaviorSubject, combineLatest, timer, NEVER, fromEvent, merge, race, Observable } from 'rxjs';\nimport { map, startWith, distinctUntilChanged, switchMap, takeUntil, filter, take, withLatestFrom, delay, share, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toInteger(value) {\n    return parseInt(`${value}`, 10);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toString(value) {\n    return (value !== undefined && value !== null) ? `${value}` : '';\n}\n/**\n * @param {?} value\n * @param {?} max\n * @param {?=} min\n * @return {?}\n */\nfunction getValueInRange(value, max, min = 0) {\n    return Math.max(Math.min(value, max), min);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isString(value) {\n    return typeof value === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isNumber(value) {\n    return !isNaN(toInteger(value));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction padNumber(value) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction hasClassName(element, className) {\n    return element && element.className && element.className.split &&\n        element.className.split(/\\s+/).indexOf(className) >= 0;\n}\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n    // Polyfill for ie10+\n    if (!Element.prototype.matches) {\n        // IE uses the non-standard name: msMatchesSelector\n        Element.prototype.matches = ((/** @type {?} */ (Element.prototype))).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n    }\n    Element.prototype.closest = (/**\n     * @param {?} s\n     * @return {?}\n     */\n    function (s) {\n        /** @type {?} */\n        let el = this;\n        if (!document.documentElement.contains(el)) {\n            return null;\n        }\n        do {\n            if (el.matches(s)) {\n                return el;\n            }\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    });\n}\n/**\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction closest(element, selector) {\n    if (!selector) {\n        return null;\n    }\n    return element.closest(selector);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\nclass NgbAccordionConfig {\n    constructor() {\n        this.closeOthers = false;\n    }\n}\nNgbAccordionConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbAccordionConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbAccordionConfig_Factory() { return new NgbAccordionConfig(); }, token: NgbAccordionConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId = 0;\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * \\@since 4.1.0\n */\nclass NgbPanelHeader {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPanelHeader.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbPanelHeader]' },] }\n];\n/** @nocollapse */\nNgbPanelHeader.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\nclass NgbPanelTitle {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPanelTitle.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbPanelTitle]' },] }\n];\n/** @nocollapse */\nNgbPanelTitle.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A directive that wraps the accordion panel content.\n */\nclass NgbPanelContent {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPanelContent.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbPanelContent]' },] }\n];\n/** @nocollapse */\nNgbPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\nclass NgbPanel {\n    constructor() {\n        /**\n         *  If `true`, the panel is disabled an can't be toggled.\n         */\n        this.disabled = false;\n        /**\n         *  An optional id for the panel that must be unique on the page.\n         *\n         *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n         */\n        this.id = `ngb-panel-${nextId++}`;\n        this.isOpen = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.headerTpl = this.headerTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    }\n}\nNgbPanel.decorators = [\n    { type: Directive, args: [{ selector: 'ngb-panel' },] }\n];\nNgbPanel.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    title: [{ type: Input }],\n    type: [{ type: Input }],\n    titleTpls: [{ type: ContentChildren, args: [NgbPanelTitle, { descendants: false },] }],\n    headerTpls: [{ type: ContentChildren, args: [NgbPanelHeader, { descendants: false },] }],\n    contentTpls: [{ type: ContentChildren, args: [NgbPanelContent, { descendants: false },] }]\n};\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\nclass NgbAccordion {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        /**\n         * An array or comma separated strings of panel ids that should be opened **initially**.\n         *\n         * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n         * the `(panelChange)` event.\n         */\n        this.activeIds = [];\n        /**\n         * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n         */\n        this.destroyOnHide = true;\n        /**\n         * Event emitted right before the panel toggle happens.\n         *\n         * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n         */\n        this.panelChange = new EventEmitter();\n        this.type = config.type;\n        this.closeOtherPanels = config.closeOthers;\n    }\n    /**\n     * Checks if a panel with a given id is expanded.\n     * @param {?} panelId\n     * @return {?}\n     */\n    isExpanded(panelId) { return this.activeIds.indexOf(panelId) > -1; }\n    /**\n     * Expands a panel with a given id.\n     *\n     * Has no effect if the panel is already expanded or disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    expand(panelId) { this._changeOpenState(this._findPanelById(panelId), true); }\n    /**\n     * Expands all panels, if `[closeOthers]` is `false`.\n     *\n     * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n     * @return {?}\n     */\n    expandAll() {\n        if (this.closeOtherPanels) {\n            if (this.activeIds.length === 0 && this.panels.length) {\n                this._changeOpenState(this.panels.first, true);\n            }\n        }\n        else {\n            this.panels.forEach((/**\n             * @param {?} panel\n             * @return {?}\n             */\n            panel => this._changeOpenState(panel, true)));\n        }\n    }\n    /**\n     * Collapses a panel with the given id.\n     *\n     * Has no effect if the panel is already collapsed or disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    collapse(panelId) { this._changeOpenState(this._findPanelById(panelId), false); }\n    /**\n     * Collapses all opened panels.\n     * @return {?}\n     */\n    collapseAll() {\n        this.panels.forEach((/**\n         * @param {?} panel\n         * @return {?}\n         */\n        (panel) => { this._changeOpenState(panel, false); }));\n    }\n    /**\n     * Toggles a panel with the given id.\n     *\n     * Has no effect if the panel is disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    toggle(panelId) {\n        /** @type {?} */\n        const panel = this._findPanelById(panelId);\n        if (panel) {\n            this._changeOpenState(panel, !panel.isOpen);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // active id updates\n        if (isString(this.activeIds)) {\n            this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n        }\n        // update panels open states\n        this.panels.forEach((/**\n         * @param {?} panel\n         * @return {?}\n         */\n        panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1));\n        // closeOthers updates\n        if (this.activeIds.length > 1 && this.closeOtherPanels) {\n            this._closeOthers(this.activeIds[0]);\n            this._updateActiveIds();\n        }\n    }\n    /**\n     * @private\n     * @param {?} panel\n     * @param {?} nextState\n     * @return {?}\n     */\n    _changeOpenState(panel, nextState) {\n        if (panel && !panel.disabled && panel.isOpen !== nextState) {\n            /** @type {?} */\n            let defaultPrevented = false;\n            this.panelChange.emit({ panelId: panel.id, nextState: nextState, preventDefault: (/**\n                 * @return {?}\n                 */\n                () => { defaultPrevented = true; }) });\n            if (!defaultPrevented) {\n                panel.isOpen = nextState;\n                if (nextState && this.closeOtherPanels) {\n                    this._closeOthers(panel.id);\n                }\n                this._updateActiveIds();\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} panelId\n     * @return {?}\n     */\n    _closeOthers(panelId) {\n        this.panels.forEach((/**\n         * @param {?} panel\n         * @return {?}\n         */\n        panel => {\n            if (panel.id !== panelId) {\n                panel.isOpen = false;\n            }\n        }));\n    }\n    /**\n     * @private\n     * @param {?} panelId\n     * @return {?}\n     */\n    _findPanelById(panelId) { return this.panels.find((/**\n     * @param {?} p\n     * @return {?}\n     */\n    p => p.id === panelId)); }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateActiveIds() {\n        this.activeIds = this.panels.filter((/**\n         * @param {?} panel\n         * @return {?}\n         */\n        panel => panel.isOpen && !panel.disabled)).map((/**\n         * @param {?} panel\n         * @return {?}\n         */\n        panel => panel.id));\n    }\n}\nNgbAccordion.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-accordion',\n                exportAs: 'ngbAccordion',\n                host: { 'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels' },\n                template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n            }] }\n];\n/** @nocollapse */\nNgbAccordion.ctorParameters = () => [\n    { type: NgbAccordionConfig }\n];\nNgbAccordion.propDecorators = {\n    panels: [{ type: ContentChildren, args: [NgbPanel,] }],\n    activeIds: [{ type: Input }],\n    closeOtherPanels: [{ type: Input, args: ['closeOthers',] }],\n    destroyOnHide: [{ type: Input }],\n    type: [{ type: Input }],\n    panelChange: [{ type: Output }]\n};\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * \\@since 4.1.0\n */\nclass NgbPanelToggle {\n    /**\n     * @param {?} accordion\n     * @param {?} panel\n     */\n    constructor(accordion, panel) {\n        this.accordion = accordion;\n        this.panel = panel;\n    }\n    /**\n     * @param {?} panel\n     * @return {?}\n     */\n    set ngbPanelToggle(panel) {\n        if (panel) {\n            this.panel = panel;\n        }\n    }\n}\nNgbPanelToggle.decorators = [\n    { type: Directive, args: [{\n                selector: 'button[ngbPanelToggle]',\n                host: {\n                    'type': 'button',\n                    '[disabled]': 'panel.disabled',\n                    '[class.collapsed]': '!panel.isOpen',\n                    '[attr.aria-expanded]': 'panel.isOpen',\n                    '[attr.aria-controls]': 'panel.id',\n                    '(click)': 'accordion.toggle(panel.id)'\n                }\n            },] }\n];\n/** @nocollapse */\nNgbPanelToggle.ctorParameters = () => [\n    { type: NgbAccordion },\n    { type: NgbPanel, decorators: [{ type: Optional }, { type: Host }] }\n];\nNgbPanelToggle.propDecorators = {\n    ngbPanelToggle: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\nclass NgbAccordionModule {\n}\nNgbAccordionModule.decorators = [\n    { type: NgModule, args: [{ declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\nclass NgbAlertConfig {\n    constructor() {\n        this.dismissible = true;\n        this.type = 'warning';\n    }\n}\nNgbAlertConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbAlertConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbAlertConfig_Factory() { return new NgbAlertConfig(); }, token: NgbAlertConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\nclass NgbAlert {\n    /**\n     * @param {?} config\n     * @param {?} _renderer\n     * @param {?} _element\n     */\n    constructor(config, _renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n        /**\n         * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n         */\n        this.close = new EventEmitter();\n        this.dismissible = config.dismissible;\n        this.type = config.type;\n    }\n    /**\n     * @return {?}\n     */\n    closeHandler() { this.close.emit(null); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const typeChange = changes['type'];\n        if (typeChange && !typeChange.firstChange) {\n            this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n            this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\nNgbAlert.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-alert',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: { 'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible' },\n                template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n                styles: [\"ngb-alert{display:block}\"]\n            }] }\n];\n/** @nocollapse */\nNgbAlert.ctorParameters = () => [\n    { type: NgbAlertConfig },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nNgbAlert.propDecorators = {\n    dismissible: [{ type: Input }],\n    type: [{ type: Input }],\n    close: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbAlertModule {\n}\nNgbAlertModule.decorators = [\n    { type: NgModule, args: [{ declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbButtonLabel {\n}\nNgbButtonLabel.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngbButtonLabel]',\n                host: { '[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused' }\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgbCheckBox)),\n    multi: true\n};\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\nclass NgbCheckBox {\n    /**\n     * @param {?} _label\n     * @param {?} _cd\n     */\n    constructor(_label, _cd) {\n        this._label = _label;\n        this._cd = _cd;\n        /**\n         * If `true`, the checkbox button will be disabled\n         */\n        this.disabled = false;\n        /**\n         * The form control value when the checkbox is checked.\n         */\n        this.valueChecked = true;\n        /**\n         * The form control value when the checkbox is unchecked.\n         */\n        this.valueUnChecked = false;\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @param {?} isFocused\n     * @return {?}\n     */\n    set focused(isFocused) {\n        this._label.focused = isFocused;\n        if (!isFocused) {\n            this.onTouched();\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onInputChange($event) {\n        /** @type {?} */\n        const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n        this.onChange(modelToPropagate);\n        this.onTouched();\n        this.writeValue(modelToPropagate);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._label.disabled = isDisabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = value === this.valueChecked;\n        this._label.active = this.checked;\n        // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n        this._cd.markForCheck();\n    }\n}\nNgbCheckBox.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngbButton][type=checkbox]',\n                host: {\n                    'autocomplete': 'off',\n                    '[checked]': 'checked',\n                    '[disabled]': 'disabled',\n                    '(change)': 'onInputChange($event)',\n                    '(focus)': 'focused = true',\n                    '(blur)': 'focused = false'\n                },\n                providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nNgbCheckBox.ctorParameters = () => [\n    { type: NgbButtonLabel },\n    { type: ChangeDetectorRef }\n];\nNgbCheckBox.propDecorators = {\n    disabled: [{ type: Input }],\n    valueChecked: [{ type: Input }],\n    valueUnChecked: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgbRadioGroup)),\n    multi: true\n};\n/** @type {?} */\nlet nextId$1 = 0;\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\nclass NgbRadioGroup {\n    constructor() {\n        this._radios = new Set();\n        this._value = null;\n        /**\n         * Name of the radio group applied to radio input elements.\n         *\n         * Will be applied to all radio input elements inside the group,\n         * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n         *\n         * If not provided, will be generated in the `ngb-radio-xx` format.\n         */\n        this.name = `ngb-radio-${nextId$1++}`;\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    set disabled(isDisabled) { this.setDisabledState(isDisabled); }\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    onRadioChange(radio) {\n        this.writeValue(radio.value);\n        this.onChange(radio.value);\n    }\n    /**\n     * @return {?}\n     */\n    onRadioValueUpdate() { this._updateRadiosValue(); }\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    register(radio) { this._radios.add(radio); }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._disabled = isDisabled;\n        this._updateRadiosDisabled();\n    }\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    unregister(radio) { this._radios.delete(radio); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._value = value;\n        this._updateRadiosValue();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRadiosValue() { this._radios.forEach((/**\n     * @param {?} radio\n     * @return {?}\n     */\n    (radio) => radio.updateValue(this._value))); }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRadiosDisabled() { this._radios.forEach((/**\n     * @param {?} radio\n     * @return {?}\n     */\n    (radio) => radio.updateDisabled())); }\n}\nNgbRadioGroup.decorators = [\n    { type: Directive, args: [{ selector: '[ngbRadioGroup]', host: { 'role': 'radiogroup' }, providers: [NGB_RADIO_VALUE_ACCESSOR] },] }\n];\nNgbRadioGroup.propDecorators = {\n    name: [{ type: Input }]\n};\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\nclass NgbRadio {\n    /**\n     * @param {?} _group\n     * @param {?} _label\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _cd\n     */\n    constructor(_group, _label, _renderer, _element, _cd) {\n        this._group = _group;\n        this._label = _label;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._cd = _cd;\n        this._value = null;\n        this._group.register(this);\n        this.updateDisabled();\n    }\n    /**\n     * The form control value when current radio button is checked.\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this._value = value;\n        /** @type {?} */\n        const stringValue = value ? value.toString() : '';\n        this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n        this._group.onRadioValueUpdate();\n    }\n    /**\n     * If `true`, current radio button will be disabled.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    set disabled(isDisabled) {\n        this._disabled = isDisabled !== false;\n        this.updateDisabled();\n    }\n    /**\n     * @param {?} isFocused\n     * @return {?}\n     */\n    set focused(isFocused) {\n        if (this._label) {\n            this._label.focused = isFocused;\n        }\n        if (!isFocused) {\n            this._group.onTouched();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @return {?}\n     */\n    get disabled() { return this._group.disabled || this._disabled; }\n    /**\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @return {?}\n     */\n    get nameAttr() { return this.name || this._group.name; }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this._group.unregister(this); }\n    /**\n     * @return {?}\n     */\n    onChange() { this._group.onRadioChange(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    updateValue(value) {\n        // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n        if (this.value !== value) {\n            this._cd.markForCheck();\n        }\n        this._checked = this.value === value;\n        this._label.active = this._checked;\n    }\n    /**\n     * @return {?}\n     */\n    updateDisabled() { this._label.disabled = this.disabled; }\n}\nNgbRadio.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngbButton][type=radio]',\n                host: {\n                    '[checked]': 'checked',\n                    '[disabled]': 'disabled',\n                    '[name]': 'nameAttr',\n                    '(change)': 'onChange()',\n                    '(focus)': 'focused = true',\n                    '(blur)': 'focused = false'\n                }\n            },] }\n];\n/** @nocollapse */\nNgbRadio.ctorParameters = () => [\n    { type: NgbRadioGroup },\n    { type: NgbButtonLabel },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nNgbRadio.propDecorators = {\n    name: [{ type: Input }],\n    value: [{ type: Input, args: ['value',] }],\n    disabled: [{ type: Input, args: ['disabled',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\nclass NgbButtonsModule {\n}\nNgbButtonsModule.decorators = [\n    { type: NgModule, args: [{ declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\nclass NgbCarouselConfig {\n    constructor() {\n        this.interval = 5000;\n        this.wrap = true;\n        this.keyboard = true;\n        this.pauseOnHover = true;\n        this.showNavigationArrows = true;\n        this.showNavigationIndicators = true;\n    }\n}\nNgbCarouselConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbCarouselConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbCarouselConfig_Factory() { return new NgbCarouselConfig(); }, token: NgbCarouselConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$2 = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\nclass NgbSlide {\n    /**\n     * @param {?} tplRef\n     */\n    constructor(tplRef) {\n        this.tplRef = tplRef;\n        /**\n         * Slide id that must be unique for the entire document.\n         *\n         * If not provided, will be generated in the `ngb-slide-xx` format.\n         */\n        this.id = `ngb-slide-${nextId$2++}`;\n    }\n}\nNgbSlide.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbSlide]' },] }\n];\n/** @nocollapse */\nNgbSlide.ctorParameters = () => [\n    { type: TemplateRef }\n];\nNgbSlide.propDecorators = {\n    id: [{ type: Input }]\n};\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\nclass NgbCarousel {\n    /**\n     * @param {?} config\n     * @param {?} _platformId\n     * @param {?} _ngZone\n     * @param {?} _cd\n     */\n    constructor(config, _platformId, _ngZone, _cd) {\n        this._platformId = _platformId;\n        this._ngZone = _ngZone;\n        this._cd = _cd;\n        this.NgbSlideEventSource = NgbSlideEventSource;\n        this._destroy$ = new Subject();\n        this._interval$ = new BehaviorSubject(0);\n        this._mouseHover$ = new BehaviorSubject(false);\n        this._pauseOnHover$ = new BehaviorSubject(false);\n        this._pause$ = new BehaviorSubject(false);\n        this._wrap$ = new BehaviorSubject(false);\n        /**\n         * An event emitted right after the slide transition is completed.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         */\n        this.slide = new EventEmitter();\n        this.interval = config.interval;\n        this.wrap = config.wrap;\n        this.keyboard = config.keyboard;\n        this.pauseOnHover = config.pauseOnHover;\n        this.showNavigationArrows = config.showNavigationArrows;\n        this.showNavigationIndicators = config.showNavigationIndicators;\n    }\n    /**\n     * Time in milliseconds before the next slide is shown.\n     * @param {?} value\n     * @return {?}\n     */\n    set interval(value) {\n        this._interval$.next(value);\n    }\n    /**\n     * @return {?}\n     */\n    get interval() { return this._interval$.value; }\n    /**\n     * If `true`, will 'wrap' the carousel by switching from the last slide back to the first.\n     * @param {?} value\n     * @return {?}\n     */\n    set wrap(value) {\n        this._wrap$.next(value);\n    }\n    /**\n     * @return {?}\n     */\n    get wrap() { return this._wrap$.value; }\n    /**\n     * If `true`, will pause slide switching when mouse cursor hovers the slide.\n     *\n     * \\@since 2.2.0\n     * @param {?} value\n     * @return {?}\n     */\n    set pauseOnHover(value) {\n        this._pauseOnHover$.next(value);\n    }\n    /**\n     * @return {?}\n     */\n    get pauseOnHover() { return this._pauseOnHover$.value; }\n    /**\n     * @return {?}\n     */\n    mouseEnter() {\n        this._mouseHover$.next(true);\n    }\n    /**\n     * @return {?}\n     */\n    mouseLeave() {\n        this._mouseHover$.next(false);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // setInterval() doesn't play well with SSR and protractor,\n        // so we should run it in the browser and outside Angular\n        if (isPlatformBrowser(this._platformId)) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const hasNextSlide$ = combineLatest(this.slide.pipe(map((/**\n                 * @param {?} slideEvent\n                 * @return {?}\n                 */\n                slideEvent => slideEvent.current)), startWith(this.activeId)), this._wrap$, this.slides.changes.pipe(startWith(null)))\n                    .pipe(map((/**\n                 * @param {?} __0\n                 * @return {?}\n                 */\n                ([currentSlideId, wrap]) => {\n                    /** @type {?} */\n                    const slideArr = this.slides.toArray();\n                    /** @type {?} */\n                    const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n                    return wrap ? slideArr.length > 1 : currentSlideIdx < slideArr.length - 1;\n                })), distinctUntilChanged());\n                combineLatest(this._pause$, this._pauseOnHover$, this._mouseHover$, this._interval$, hasNextSlide$)\n                    .pipe(map((/**\n                 * @param {?} __0\n                 * @return {?}\n                 */\n                ([pause, pauseOnHover, mouseHover, interval, hasNextSlide]) => ((pause || (pauseOnHover && mouseHover) || !hasNextSlide) ? 0 : interval))), distinctUntilChanged(), switchMap((/**\n                 * @param {?} interval\n                 * @return {?}\n                 */\n                interval => interval > 0 ? timer(interval, interval) : NEVER)), takeUntil(this._destroy$))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.next(NgbSlideEventSource.TIMER)))));\n            }));\n        }\n        this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe((/**\n         * @return {?}\n         */\n        () => this._cd.markForCheck()));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        /** @type {?} */\n        let activeSlide = this._getSlideById(this.activeId);\n        this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this._destroy$.next(); }\n    /**\n     * Navigates to a slide with the specified identifier.\n     * @param {?} slideId\n     * @param {?=} source\n     * @return {?}\n     */\n    select(slideId, source) {\n        this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId), source);\n    }\n    /**\n     * Navigates to the previous slide.\n     * @param {?=} source\n     * @return {?}\n     */\n    prev(source) {\n        this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT, source);\n    }\n    /**\n     * Navigates to the next slide.\n     * @param {?=} source\n     * @return {?}\n     */\n    next(source) {\n        this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT, source);\n    }\n    /**\n     * Pauses cycling through the slides.\n     * @return {?}\n     */\n    pause() { this._pause$.next(true); }\n    /**\n     * Restarts cycling through the slides from left to right.\n     * @return {?}\n     */\n    cycle() { this._pause$.next(false); }\n    /**\n     * @private\n     * @param {?} slideIdx\n     * @param {?} direction\n     * @param {?=} source\n     * @return {?}\n     */\n    _cycleToSelected(slideIdx, direction, source) {\n        /** @type {?} */\n        let selectedSlide = this._getSlideById(slideIdx);\n        if (selectedSlide && selectedSlide.id !== this.activeId) {\n            this.slide.emit({ prev: this.activeId, current: selectedSlide.id, direction: direction, paused: this._pause$.value, source });\n            this.activeId = selectedSlide.id;\n        }\n        // we get here after the interval fires or any external API call like next(), prev() or select()\n        this._cd.markForCheck();\n    }\n    /**\n     * @private\n     * @param {?} currentActiveSlideId\n     * @param {?} nextActiveSlideId\n     * @return {?}\n     */\n    _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n        /** @type {?} */\n        const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n        /** @type {?} */\n        const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n        return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n    }\n    /**\n     * @private\n     * @param {?} slideId\n     * @return {?}\n     */\n    _getSlideById(slideId) { return this.slides.find((/**\n     * @param {?} slide\n     * @return {?}\n     */\n    slide => slide.id === slideId)); }\n    /**\n     * @private\n     * @param {?} slideId\n     * @return {?}\n     */\n    _getSlideIdxById(slideId) {\n        return this.slides.toArray().indexOf(this._getSlideById(slideId));\n    }\n    /**\n     * @private\n     * @param {?} currentSlideId\n     * @return {?}\n     */\n    _getNextSlide(currentSlideId) {\n        /** @type {?} */\n        const slideArr = this.slides.toArray();\n        /** @type {?} */\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        /** @type {?} */\n        const isLastSlide = currentSlideIdx === slideArr.length - 1;\n        return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n            slideArr[currentSlideIdx + 1].id;\n    }\n    /**\n     * @private\n     * @param {?} currentSlideId\n     * @return {?}\n     */\n    _getPrevSlide(currentSlideId) {\n        /** @type {?} */\n        const slideArr = this.slides.toArray();\n        /** @type {?} */\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        /** @type {?} */\n        const isFirstSlide = currentSlideIdx === 0;\n        return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n            slideArr[currentSlideIdx - 1].id;\n    }\n}\nNgbCarousel.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-carousel',\n                exportAs: 'ngbCarousel',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'carousel slide',\n                    '[style.display]': '\"block\"',\n                    'tabIndex': '0',\n                    '(keydown.arrowLeft)': 'keyboard && prev(NgbSlideEventSource.ARROW_LEFT)',\n                    '(keydown.arrowRight)': 'keyboard && next(NgbSlideEventSource.ARROW_RIGHT)'\n                },\n                template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id, NgbSlideEventSource.INDICATOR)\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev(NgbSlideEventSource.ARROW_LEFT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next(NgbSlideEventSource.ARROW_RIGHT)\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n            }] }\n];\n/** @nocollapse */\nNgbCarousel.ctorParameters = () => [\n    { type: NgbCarouselConfig },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef }\n];\nNgbCarousel.propDecorators = {\n    slides: [{ type: ContentChildren, args: [NgbSlide,] }],\n    activeId: [{ type: Input }],\n    interval: [{ type: Input }],\n    wrap: [{ type: Input }],\n    keyboard: [{ type: Input }],\n    pauseOnHover: [{ type: Input }],\n    showNavigationArrows: [{ type: Input }],\n    showNavigationIndicators: [{ type: Input }],\n    slide: [{ type: Output }],\n    mouseEnter: [{ type: HostListener, args: ['mouseenter',] }],\n    mouseLeave: [{ type: HostListener, args: ['mouseleave',] }]\n};\n/** @enum {string} */\nconst NgbSlideEventDirection = {\n    LEFT: (/** @type {?} */ ('left')),\n    RIGHT: (/** @type {?} */ ('right')),\n};\n/** @enum {string} */\nconst NgbSlideEventSource = {\n    TIMER: 'timer',\n    ARROW_LEFT: 'arrowLeft',\n    ARROW_RIGHT: 'arrowRight',\n    INDICATOR: 'indicator',\n};\n/** @type {?} */\nconst NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbCarouselModule {\n}\nNgbCarouselModule.decorators = [\n    { type: NgModule, args: [{ declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\nclass NgbCollapse {\n    constructor() {\n        /**\n         * If `true`, will collapse the element or show it otherwise.\n         */\n        this.collapsed = false;\n    }\n}\nNgbCollapse.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngbCollapse]',\n                exportAs: 'ngbCollapse',\n                host: { '[class.collapse]': 'true', '[class.show]': '!collapsed' }\n            },] }\n];\nNgbCollapse.propDecorators = {\n    collapsed: [{ type: Input, args: ['ngbCollapse',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbCollapseModule {\n}\nNgbCollapseModule.decorators = [\n    { type: NgModule, args: [{ declarations: [NgbCollapse], exports: [NgbCollapse] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * \\@since 3.0.0\n */\nclass NgbDate {\n    /**\n     * A **static method** that creates a new date object from the `NgbDateStruct`,\n     *\n     * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n     *\n     * If the `date` is already of `NgbDate` type, the method will return the same object.\n     * @param {?} date\n     * @return {?}\n     */\n    static from(date) {\n        if (date instanceof NgbDate) {\n            return date;\n        }\n        return date ? new NgbDate(date.year, date.month, date.day) : null;\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} day\n     */\n    constructor(year, month, day) {\n        this.year = isInteger(year) ? year : null;\n        this.month = isInteger(month) ? month : null;\n        this.day = isInteger(day) ? day : null;\n    }\n    /**\n     * Checks if the current date is equal to another date.\n     * @param {?} other\n     * @return {?}\n     */\n    equals(other) {\n        return other && this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n    /**\n     * Checks if the current date is before another date.\n     * @param {?} other\n     * @return {?}\n     */\n    before(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    }\n    /**\n     * Checks if the current date is after another date.\n     * @param {?} other\n     * @return {?}\n     */\n    after(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} jsDate\n * @return {?}\n */\nfunction fromJSDate(jsDate) {\n    return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction toJSDate(date) {\n    /** @type {?} */\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n    return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n * @abstract\n */\nclass NgbCalendar {\n}\nNgbCalendar.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY },] }\n];\n/** @nocollapse */ NgbCalendar.ngInjectableDef = ɵɵdefineInjectable({ factory: NGB_DATEPICKER_CALENDAR_FACTORY, token: NgbCalendar, providedIn: \"root\" });\nclass NgbCalendarGregorian extends NgbCalendar {\n    /**\n     * @return {?}\n     */\n    getDaysPerWeek() { return 7; }\n    /**\n     * @return {?}\n     */\n    getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n    /**\n     * @return {?}\n     */\n    getWeeksPerMonth() { return 6; }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getNext(date, period = 'd', number = 1) {\n        /** @type {?} */\n        let jsDate = toJSDate(date);\n        switch (period) {\n            case 'y':\n                return new NgbDate(date.year + number, 1, 1);\n            case 'm':\n                jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                break;\n            default:\n                return date;\n        }\n        return fromJSDate(jsDate);\n    }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getWeekday(date) {\n        /** @type {?} */\n        let jsDate = toJSDate(date);\n        /** @type {?} */\n        let day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        /** @type {?} */\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        /** @type {?} */\n        let date = week[thursdayIndex];\n        /** @type {?} */\n        const jsDate = toJSDate(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        // Thursday\n        /** @type {?} */\n        const time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    /**\n     * @return {?}\n     */\n    getToday() { return fromJSDate(new Date()); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        /** @type {?} */\n        const jsDate = toJSDate(date);\n        return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day;\n    }\n}\nNgbCalendarGregorian.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nfunction isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nfunction isChangedMonth(prev, next) {\n    return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nfunction dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n/**\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n    }\n}\n/**\n * @param {?} date\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return minDate;\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return maxDate;\n    }\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} state\n * @return {?}\n */\nfunction isDateSelectable(date, state) {\n    const { minDate, maxDate, disabled, markDisabled } = state;\n    // clang-format off\n    return !(!isDefined(date) ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n    // clang-format on\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    /** @type {?} */\n    let months = calendar.getMonths(date.year);\n    if (minDate && date.year === minDate.year) {\n        /** @type {?} */\n        const index = months.findIndex((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => month === minDate.month));\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        /** @type {?} */\n        const index = months.findIndex((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => month === maxDate.month));\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\n/**\n * @param {?} date\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    /** @type {?} */\n    const start = minDate && minDate.year || date.year - 10;\n    /** @type {?} */\n    const end = maxDate && maxDate.year || date.year + 10;\n    return Array.from({ length: end - start + 1 }, (/**\n     * @param {?} e\n     * @param {?} i\n     * @return {?}\n     */\n    (e, i) => start + i));\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} maxDate\n * @return {?}\n */\nfunction nextMonthDisabled(calendar, date, maxDate) {\n    return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} minDate\n * @return {?}\n */\nfunction prevMonthDisabled(calendar, date, minDate) {\n    /** @type {?} */\n    const prevDate = calendar.getPrev(date, 'm');\n    return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n        prevDate.year < minDate.year && minDate.month === 1);\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} state\n * @param {?} i18n\n * @param {?} force\n * @return {?}\n */\nfunction buildMonths(calendar, date, state, i18n, force) {\n    const { displayMonths, months } = state;\n    // move old months to a temporary array\n    /** @type {?} */\n    const monthsToReuse = months.splice(0, months.length);\n    // generate new first dates, nullify or reuse months\n    /** @type {?} */\n    const firstDates = Array.from({ length: displayMonths }, (/**\n     * @param {?} _\n     * @param {?} i\n     * @return {?}\n     */\n    (_, i) => {\n        /** @type {?} */\n        const firstDate = calendar.getNext(date, 'm', i);\n        months[i] = null;\n        if (!force) {\n            /** @type {?} */\n            const reusedIndex = monthsToReuse.findIndex((/**\n             * @param {?} month\n             * @return {?}\n             */\n            month => month.firstDate.equals(firstDate)));\n            // move reused month back to months\n            if (reusedIndex !== -1) {\n                months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n            }\n        }\n        return firstDate;\n    }));\n    // rebuild nullified months\n    firstDates.forEach((/**\n     * @param {?} firstDate\n     * @param {?} i\n     * @return {?}\n     */\n    (firstDate, i) => {\n        if (months[i] === null) {\n            months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || (/** @type {?} */ ({})));\n        }\n    }));\n    return months;\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} state\n * @param {?} i18n\n * @param {?=} month\n * @return {?}\n */\nfunction buildMonth(calendar, date, state, i18n, month = (/** @type {?} */ ({}))) {\n    const { dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays } = state;\n    /** @type {?} */\n    const calendarToday = calendar.getToday();\n    month.firstDate = null;\n    month.lastDate = null;\n    month.number = date.month;\n    month.year = date.year;\n    month.weeks = month.weeks || [];\n    month.weekdays = month.weekdays || [];\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // month has weeks\n    for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        /** @type {?} */\n        let weekObject = month.weeks[week];\n        if (!weekObject) {\n            weekObject = month.weeks[week] = { number: 0, days: [], collapsed: true };\n        }\n        /** @type {?} */\n        const days = weekObject.days;\n        // week has days\n        for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0) {\n                month.weekdays[day] = calendar.getWeekday(date);\n            }\n            /** @type {?} */\n            const newDate = new NgbDate(date.year, date.month, date.day);\n            /** @type {?} */\n            const nextDate = calendar.getNext(newDate);\n            /** @type {?} */\n            const ariaLabel = i18n.getDayAriaLabel(newDate);\n            // marking date as disabled\n            /** @type {?} */\n            let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // today\n            /** @type {?} */\n            let today = newDate.equals(calendarToday);\n            // adding user-provided data to the context\n            /** @type {?} */\n            let contextUserData = dayTemplateData ? dayTemplateData(newDate, { month: month.number, year: month.year }) : undefined;\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            /** @type {?} */\n            let dayObject = days[day];\n            if (!dayObject) {\n                dayObject = days[day] = (/** @type {?} */ ({}));\n            }\n            dayObject.date = newDate;\n            dayObject.context = Object.assign(dayObject.context || {}, {\n                $implicit: newDate,\n                date: newDate,\n                data: contextUserData,\n                currentMonth: month.number, disabled,\n                focused: false,\n                selected: false, today\n            });\n            dayObject.tabindex = -1;\n            dayObject.ariaLabel = ariaLabel;\n            dayObject.hidden = false;\n            date = nextDate;\n        }\n        weekObject.number = calendar.getWeekNumber(days.map((/**\n         * @param {?} day\n         * @return {?}\n         */\n        day => day.date)), firstDayOfWeek);\n        // marking week as collapsed\n        weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n            days[days.length - 1].date.month !== month.number;\n    }\n    return month;\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} firstDayOfWeek\n * @return {?}\n */\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n    /** @type {?} */\n    const daysPerWeek = calendar.getDaysPerWeek();\n    /** @type {?} */\n    const firstMonthDate = new NgbDate(date.year, date.month, 1);\n    /** @type {?} */\n    const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} locale\n * @return {?}\n */\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n    return new NgbDatepickerI18nDefault(locale);\n}\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n * @abstract\n */\nclass NgbDatepickerI18n {\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * \\@since 3.0.0\n     * @param {?} date\n     * @return {?}\n     */\n    getDayNumerals(date) { return `${date.day}`; }\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * \\@since 3.0.0\n     * @param {?} weekNumber\n     * @return {?}\n     */\n    getWeekNumerals(weekNumber) { return `${weekNumber}`; }\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * \\@since 3.0.0\n     * @param {?} year\n     * @return {?}\n     */\n    getYearNumerals(year) { return `${year}`; }\n}\nNgbDatepickerI18n.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID] },] }\n];\n/** @nocollapse */ NgbDatepickerI18n.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbDatepickerI18n_Factory() { return NGB_DATEPICKER_18N_FACTORY(ɵɵinject(LOCALE_ID)); }, token: NgbDatepickerI18n, providedIn: \"root\" });\nclass NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n    /**\n     * @param {?} _locale\n     */\n    constructor(_locale) {\n        super();\n        this._locale = _locale;\n        /** @type {?} */\n        const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n        this._weekdaysShort = weekdaysStartingOnSunday.map((/**\n         * @param {?} day\n         * @param {?} index\n         * @return {?}\n         */\n        (day, index) => weekdaysStartingOnSunday[(index + 1) % 7]));\n        this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n        this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n    }\n    /**\n     * @param {?} weekday\n     * @return {?}\n     */\n    getWeekdayShortName(weekday) { return this._weekdaysShort[weekday - 1]; }\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    getMonthShortName(month) { return this._monthsShort[month - 1]; }\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    getMonthFullName(month) { return this._monthsFull[month - 1]; }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayAriaLabel(date) {\n        /** @type {?} */\n        const jsDate = new Date(date.year, date.month - 1, date.day);\n        return formatDate(jsDate, 'fullDate', this._locale);\n    }\n}\nNgbDatepickerI18nDefault.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNgbDatepickerI18nDefault.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbDatepickerService {\n    /**\n     * @param {?} _calendar\n     * @param {?} _i18n\n     */\n    constructor(_calendar, _i18n) {\n        this._calendar = _calendar;\n        this._i18n = _i18n;\n        this._model$ = new Subject();\n        this._select$ = new Subject();\n        this._state = {\n            disabled: false,\n            displayMonths: 1,\n            firstDayOfWeek: 1,\n            focusVisible: false,\n            months: [],\n            navigation: 'select',\n            outsideDays: 'visible',\n            prevDisabled: false,\n            nextDisabled: false,\n            selectBoxes: { years: [], months: [] },\n            selectedDate: null\n        };\n    }\n    /**\n     * @return {?}\n     */\n    get model$() { return this._model$.pipe(filter((/**\n     * @param {?} model\n     * @return {?}\n     */\n    model => model.months.length > 0))); }\n    /**\n     * @return {?}\n     */\n    get select$() { return this._select$.pipe(filter((/**\n     * @param {?} date\n     * @return {?}\n     */\n    date => date !== null))); }\n    /**\n     * @param {?} dayTemplateData\n     * @return {?}\n     */\n    set dayTemplateData(dayTemplateData) {\n        if (this._state.dayTemplateData !== dayTemplateData) {\n            this._nextState({ dayTemplateData });\n        }\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) {\n        if (this._state.disabled !== disabled) {\n            this._nextState({ disabled });\n        }\n    }\n    /**\n     * @param {?} displayMonths\n     * @return {?}\n     */\n    set displayMonths(displayMonths) {\n        displayMonths = toInteger(displayMonths);\n        if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            this._nextState({ displayMonths });\n        }\n    }\n    /**\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    set firstDayOfWeek(firstDayOfWeek) {\n        firstDayOfWeek = toInteger(firstDayOfWeek);\n        if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            this._nextState({ firstDayOfWeek });\n        }\n    }\n    /**\n     * @param {?} focusVisible\n     * @return {?}\n     */\n    set focusVisible(focusVisible) {\n        if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            this._nextState({ focusVisible });\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    set maxDate(date) {\n        /** @type {?} */\n        const maxDate = this.toValidDate(date, null);\n        if (isChangedDate(this._state.maxDate, maxDate)) {\n            this._nextState({ maxDate });\n        }\n    }\n    /**\n     * @param {?} markDisabled\n     * @return {?}\n     */\n    set markDisabled(markDisabled) {\n        if (this._state.markDisabled !== markDisabled) {\n            this._nextState({ markDisabled });\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    set minDate(date) {\n        /** @type {?} */\n        const minDate = this.toValidDate(date, null);\n        if (isChangedDate(this._state.minDate, minDate)) {\n            this._nextState({ minDate });\n        }\n    }\n    /**\n     * @param {?} navigation\n     * @return {?}\n     */\n    set navigation(navigation) {\n        if (this._state.navigation !== navigation) {\n            this._nextState({ navigation });\n        }\n    }\n    /**\n     * @param {?} outsideDays\n     * @return {?}\n     */\n    set outsideDays(outsideDays) {\n        if (this._state.outsideDays !== outsideDays) {\n            this._nextState({ outsideDays });\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    focus(date) {\n        if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n            this._nextState({ focusDate: date });\n        }\n    }\n    /**\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    focusMove(period, number) {\n        this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n    }\n    /**\n     * @return {?}\n     */\n    focusSelect() {\n        if (isDateSelectable(this._state.focusDate, this._state)) {\n            this.select(this._state.focusDate, { emitEvent: true });\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    open(date) {\n        /** @type {?} */\n        const firstDate = this.toValidDate(date, this._calendar.getToday());\n        if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n            this._nextState({ firstDate });\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?=} options\n     * @return {?}\n     */\n    select(date, options = {}) {\n        /** @type {?} */\n        const selectedDate = this.toValidDate(date, null);\n        if (!this._state.disabled) {\n            if (isChangedDate(this._state.selectedDate, selectedDate)) {\n                this._nextState({ selectedDate });\n            }\n            if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n                this._select$.next(selectedDate);\n            }\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    toValidDate(date, defaultValue) {\n        /** @type {?} */\n        const ngbDate = NgbDate.from(date);\n        if (defaultValue === undefined) {\n            defaultValue = this._calendar.getToday();\n        }\n        return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    }\n    /**\n     * @private\n     * @param {?} patch\n     * @return {?}\n     */\n    _nextState(patch) {\n        /** @type {?} */\n        const newState = this._updateState(patch);\n        this._patchContexts(newState);\n        this._state = newState;\n        this._model$.next(this._state);\n    }\n    /**\n     * @private\n     * @param {?} state\n     * @return {?}\n     */\n    _patchContexts(state) {\n        const { months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays } = state;\n        state.months.forEach((/**\n         * @param {?} month\n         * @return {?}\n         */\n        month => {\n            month.weeks.forEach((/**\n             * @param {?} week\n             * @return {?}\n             */\n            week => {\n                week.days.forEach((/**\n                 * @param {?} day\n                 * @return {?}\n                 */\n                day => {\n                    // patch focus flag\n                    if (focusDate) {\n                        day.context.focused = focusDate.equals(day.date) && focusVisible;\n                    }\n                    // calculating tabindex\n                    day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n                    // override context disabled\n                    if (disabled === true) {\n                        day.context.disabled = true;\n                    }\n                    // patch selection flag\n                    if (selectedDate !== undefined) {\n                        day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n                    }\n                    // visibility\n                    if (month.number !== day.date.month) {\n                        day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                            (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                                day.date.before(months[displayMonths - 1].lastDate));\n                    }\n                }));\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?} patch\n     * @return {?}\n     */\n    _updateState(patch) {\n        // patching fields\n        /** @type {?} */\n        const state = Object.assign({}, this._state, patch);\n        /** @type {?} */\n        let startDate = state.firstDate;\n        // min/max dates changed\n        if ('minDate' in patch || 'maxDate' in patch) {\n            checkMinBeforeMax(state.minDate, state.maxDate);\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n        }\n        // disabled\n        if ('disabled' in patch) {\n            state.focusVisible = false;\n        }\n        // initial rebuild via 'select()'\n        if ('selectedDate' in patch && this._state.months.length === 0) {\n            startDate = state.selectedDate;\n        }\n        // terminate early if only focus visibility was changed\n        if ('focusVisible' in patch) {\n            return state;\n        }\n        // focus date changed\n        if ('focusDate' in patch) {\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n            // nothing to rebuild if only focus changed and it is still visible\n            if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n                !state.focusDate.after(state.lastDate)) {\n                return state;\n            }\n        }\n        // first date changed\n        if ('firstDate' in patch) {\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.firstDate;\n        }\n        // rebuilding months\n        if (startDate) {\n            /** @type {?} */\n            const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n                'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n            /** @type {?} */\n            const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n            // updating months and boundary dates\n            state.months = months;\n            state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n            state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n            // reset selected date if 'markDisabled' returns true\n            if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n                state.selectedDate = null;\n            }\n            // adjusting focus after months were built\n            if ('firstDate' in patch) {\n                if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n                    state.focusDate.after(state.lastDate)) {\n                    state.focusDate = startDate;\n                }\n            }\n            // adjusting months/years for the select box navigation\n            /** @type {?} */\n            const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n            /** @type {?} */\n            const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n            if (state.navigation === 'select') {\n                // years ->  boundaries (min/max were changed)\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                    state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n                }\n                // months -> when current year or boundaries change\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                    state.selectBoxes.months =\n                        generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n                }\n            }\n            else {\n                state.selectBoxes = { years: [], months: [] };\n            }\n            // updating navigation arrows -> boundaries change (min/max) or month/year changes\n            if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n                state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n            }\n        }\n        return state;\n    }\n}\nNgbDatepickerService.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNgbDatepickerService.ctorParameters = () => [\n    { type: NgbCalendar },\n    { type: NgbDatepickerI18n }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst Key = {\n    Tab: 9,\n    Enter: 13,\n    Escape: 27,\n    Space: 32,\n    PageUp: 33,\n    PageDown: 34,\n    End: 35,\n    Home: 36,\n    ArrowLeft: 37,\n    ArrowUp: 38,\n    ArrowRight: 39,\n    ArrowDown: 40,\n};\nKey[Key.Tab] = 'Tab';\nKey[Key.Enter] = 'Enter';\nKey[Key.Escape] = 'Escape';\nKey[Key.Space] = 'Space';\nKey[Key.PageUp] = 'PageUp';\nKey[Key.PageDown] = 'PageDown';\nKey[Key.End] = 'End';\nKey[Key.Home] = 'Home';\nKey[Key.ArrowLeft] = 'ArrowLeft';\nKey[Key.ArrowUp] = 'ArrowUp';\nKey[Key.ArrowRight] = 'ArrowRight';\nKey[Key.ArrowDown] = 'ArrowDown';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbDatepickerKeyMapService {\n    /**\n     * @param {?} _service\n     * @param {?} _calendar\n     */\n    constructor(_service, _calendar) {\n        this._service = _service;\n        this._calendar = _calendar;\n        _service.model$.subscribe((/**\n         * @param {?} model\n         * @return {?}\n         */\n        model => {\n            this._minDate = model.minDate;\n            this._maxDate = model.maxDate;\n            this._firstViewDate = model.firstDate;\n            this._lastViewDate = model.lastDate;\n        }));\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    processKey(event) {\n        // tslint:disable-next-line:deprecation\n        switch (event.which) {\n            case Key.PageUp:\n                this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n                break;\n            case Key.PageDown:\n                this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n                break;\n            case Key.End:\n                this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n                break;\n            case Key.Home:\n                this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n                break;\n            case Key.ArrowLeft:\n                this._service.focusMove('d', -1);\n                break;\n            case Key.ArrowUp:\n                this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n                break;\n            case Key.ArrowRight:\n                this._service.focusMove('d', 1);\n                break;\n            case Key.ArrowDown:\n                this._service.focusMove('d', this._calendar.getDaysPerWeek());\n                break;\n            case Key.Enter:\n            case Key.Space:\n                this._service.focusSelect();\n                break;\n            default:\n                return;\n        }\n        // note 'return' in default case\n        event.preventDefault();\n        event.stopPropagation();\n    }\n}\nNgbDatepickerKeyMapService.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNgbDatepickerKeyMapService.ctorParameters = () => [\n    { type: NgbDatepickerService },\n    { type: NgbCalendar }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst NavigationEvent = {\n    PREV: 0,\n    NEXT: 1,\n};\nNavigationEvent[NavigationEvent.PREV] = 'PREV';\nNavigationEvent[NavigationEvent.NEXT] = 'NEXT';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nclass NgbDatepickerConfig {\n    constructor() {\n        this.displayMonths = 1;\n        this.firstDayOfWeek = 1;\n        this.navigation = 'select';\n        this.outsideDays = 'visible';\n        this.showWeekdays = true;\n        this.showWeekNumbers = false;\n    }\n}\nNgbDatepickerConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbDatepickerConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbDatepickerConfig_Factory() { return new NgbDatepickerConfig(); }, token: NgbDatepickerConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n    return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n * @abstract\n * @template D\n */\nclass NgbDateAdapter {\n}\nNgbDateAdapter.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY },] }\n];\n/** @nocollapse */ NgbDateAdapter.ngInjectableDef = ɵɵdefineInjectable({ factory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY, token: NgbDateAdapter, providedIn: \"root\" });\nclass NgbDateStructAdapter extends NgbDateAdapter {\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param {?} date\n     * @return {?}\n     */\n    fromModel(date) {\n        return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n            { year: date.year, month: date.month, day: date.day } :\n            null;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param {?} date\n     * @return {?}\n     */\n    toModel(date) {\n        return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n            { year: date.year, month: date.month, day: date.day } :\n            null;\n    }\n}\nNgbDateStructAdapter.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgbDatepicker)),\n    multi: true\n};\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\nclass NgbDatepicker {\n    /**\n     * @param {?} _keyMapService\n     * @param {?} _service\n     * @param {?} _calendar\n     * @param {?} i18n\n     * @param {?} config\n     * @param {?} _cd\n     * @param {?} _elementRef\n     * @param {?} _ngbDateAdapter\n     * @param {?} _ngZone\n     */\n    constructor(_keyMapService, _service, _calendar, i18n, config, _cd, _elementRef, _ngbDateAdapter, _ngZone) {\n        this._keyMapService = _keyMapService;\n        this._service = _service;\n        this._calendar = _calendar;\n        this.i18n = i18n;\n        this._cd = _cd;\n        this._elementRef = _elementRef;\n        this._ngbDateAdapter = _ngbDateAdapter;\n        this._ngZone = _ngZone;\n        this._destroyed$ = new Subject();\n        /**\n         * An event emitted right before the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         */\n        this.select = new EventEmitter();\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n            'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n            .forEach((/**\n         * @param {?} input\n         * @return {?}\n         */\n        input => this[input] = config[input]));\n        _service.select$.pipe(takeUntil(this._destroyed$)).subscribe((/**\n         * @param {?} date\n         * @return {?}\n         */\n        date => { this.select.emit(date); }));\n        _service.model$.pipe(takeUntil(this._destroyed$)).subscribe((/**\n         * @param {?} model\n         * @return {?}\n         */\n        model => {\n            /** @type {?} */\n            const newDate = model.firstDate;\n            /** @type {?} */\n            const oldDate = this.model ? this.model.firstDate : null;\n            /** @type {?} */\n            let navigationPrevented = false;\n            // emitting navigation event if the first month changes\n            if (!newDate.equals(oldDate)) {\n                this.navigate.emit({\n                    current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                    next: { year: newDate.year, month: newDate.month },\n                    preventDefault: (/**\n                     * @return {?}\n                     */\n                    () => navigationPrevented = true)\n                });\n                // can't prevent the very first navigation\n                if (navigationPrevented && oldDate !== null) {\n                    this._service.open(oldDate);\n                    return;\n                }\n            }\n            /** @type {?} */\n            const newSelectedDate = model.selectedDate;\n            /** @type {?} */\n            const newFocusedDate = model.focusDate;\n            /** @type {?} */\n            const oldFocusedDate = this.model ? this.model.focusDate : null;\n            this.model = model;\n            // handling selection change\n            if (isChangedDate(newSelectedDate, this._controlValue)) {\n                this._controlValue = newSelectedDate;\n                this.onTouched();\n                this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n            }\n            // handling focus change\n            if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n                this.focus();\n            }\n            _cd.markForCheck();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const elementToFocus = this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n            if (elementToFocus) {\n                elementToFocus.focus();\n            }\n        }));\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     * @param {?=} date\n     * @return {?}\n     */\n    navigateTo(date) {\n        this._service.open(NgbDate.from(date ? date.day ? (/** @type {?} */ (date)) : Object.assign({}, date, { day: 1 }) : null));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const focusIns$ = fromEvent(this._monthsEl.nativeElement, 'focusin');\n            /** @type {?} */\n            const focusOuts$ = fromEvent(this._monthsEl.nativeElement, 'focusout');\n            // we're changing 'focusVisible' only when entering or leaving months view\n            // and ignoring all focus events where both 'target' and 'related' target are day cells\n            merge(focusIns$, focusOuts$)\n                .pipe(filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ target, relatedTarget }) => !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day')))), takeUntil(this._destroyed$))\n                .subscribe((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ({ type }) => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._service.focusVisible = type === 'focusin'))));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this._destroyed$.next(); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.model === undefined) {\n            ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n                'outsideDays']\n                .forEach((/**\n             * @param {?} input\n             * @return {?}\n             */\n            input => this._service[input] = this[input]));\n            this.navigateTo(this.startDate);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n            'outsideDays']\n            .filter((/**\n         * @param {?} input\n         * @return {?}\n         */\n        input => input in changes))\n            .forEach((/**\n         * @param {?} input\n         * @return {?}\n         */\n        input => this._service[input] = this[input]));\n        if ('startDate' in changes) {\n            const { currentValue, previousValue } = changes.startDate;\n            if (isChangedMonth(previousValue, currentValue)) {\n                this.navigateTo(this.startDate);\n            }\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    onDateSelect(date) {\n        this._service.focus(date);\n        this._service.select(date, { emitEvent: true });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) { this._keyMapService.processKey(event); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    onNavigateDateSelect(date) { this._service.open(date); }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onNavigateEvent(event) {\n        switch (event) {\n            case NavigationEvent.PREV:\n                this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                break;\n            case NavigationEvent.NEXT:\n                this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                break;\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) { this._service.disabled = isDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n        this._service.select(this._controlValue);\n    }\n}\nNgbDatepicker.decorators = [\n    { type: Component, args: [{\n                exportAs: 'ngbDatepicker',\n                selector: 'ngb-datepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div #months class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name\">\n            {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n                providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService],\n                styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month-view{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem;background-color:#f8f9fa}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center;background-color:#f8f9fa}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"]\n            }] }\n];\n/** @nocollapse */\nNgbDatepicker.ctorParameters = () => [\n    { type: NgbDatepickerKeyMapService },\n    { type: NgbDatepickerService },\n    { type: NgbCalendar },\n    { type: NgbDatepickerI18n },\n    { type: NgbDatepickerConfig },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: NgbDateAdapter },\n    { type: NgZone }\n];\nNgbDatepicker.propDecorators = {\n    _monthsEl: [{ type: ViewChild, args: ['months', { static: true },] }],\n    dayTemplate: [{ type: Input }],\n    dayTemplateData: [{ type: Input }],\n    displayMonths: [{ type: Input }],\n    firstDayOfWeek: [{ type: Input }],\n    footerTemplate: [{ type: Input }],\n    markDisabled: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    minDate: [{ type: Input }],\n    navigation: [{ type: Input }],\n    outsideDays: [{ type: Input }],\n    showWeekdays: [{ type: Input }],\n    showWeekNumbers: [{ type: Input }],\n    startDate: [{ type: Input }],\n    navigate: [{ type: Output }],\n    select: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbDatepickerMonthView {\n    /**\n     * @param {?} i18n\n     */\n    constructor(i18n) {\n        this.i18n = i18n;\n        this.select = new EventEmitter();\n    }\n    /**\n     * @param {?} day\n     * @return {?}\n     */\n    doSelect(day) {\n        if (!day.context.disabled && !day.hidden) {\n            this.select.emit(day.date);\n        }\n    }\n}\nNgbDatepickerMonthView.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-datepicker-month-view',\n                host: { 'role': 'grid' },\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `,\n                styles: [\"ngb-datepicker-month-view{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}\"]\n            }] }\n];\n/** @nocollapse */\nNgbDatepickerMonthView.ctorParameters = () => [\n    { type: NgbDatepickerI18n }\n];\nNgbDatepickerMonthView.propDecorators = {\n    dayTemplate: [{ type: Input }],\n    month: [{ type: Input }],\n    showWeekdays: [{ type: Input }],\n    showWeekNumbers: [{ type: Input }],\n    select: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbDatepickerNavigation {\n    /**\n     * @param {?} i18n\n     */\n    constructor(i18n) {\n        this.i18n = i18n;\n        this.navigation = NavigationEvent;\n        this.months = [];\n        this.navigate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n}\nNgbDatepickerNavigation.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-datepicker-navigation',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `,\n                styles: [\"ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}\"]\n            }] }\n];\n/** @nocollapse */\nNgbDatepickerNavigation.ctorParameters = () => [\n    { type: NgbDatepickerI18n }\n];\nNgbDatepickerNavigation.propDecorators = {\n    date: [{ type: Input }],\n    disabled: [{ type: Input }],\n    months: [{ type: Input }],\n    showSelect: [{ type: Input }],\n    prevDisabled: [{ type: Input }],\n    nextDisabled: [{ type: Input }],\n    selectBoxes: [{ type: Input }],\n    navigate: [{ type: Output }],\n    select: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst isContainedIn = (/**\n * @param {?} element\n * @param {?=} array\n * @return {?}\n */\n(element, array) => array ? array.some((/**\n * @param {?} item\n * @return {?}\n */\nitem => item.contains(element))) : false);\n/** @type {?} */\nconst matchesSelectorIfAny = (/**\n * @param {?} element\n * @param {?=} selector\n * @return {?}\n */\n(element, selector) => !selector || closest(element, selector) != null);\n// we'll have to use 'touch' events instead of 'mouse' events on iOS and add a more significant delay\n// to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\n/** @type {?} */\nlet iOS = false;\nif (typeof navigator !== 'undefined') {\n    iOS = !!navigator.userAgent && /iPad|iPhone|iPod/.test(navigator.userAgent);\n}\n/**\n * @param {?} zone\n * @param {?} document\n * @param {?} type\n * @param {?} close\n * @param {?} closed$\n * @param {?} insideElements\n * @param {?=} ignoreElements\n * @param {?=} insideSelector\n * @return {?}\n */\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n    // closing on ESC and outside clicks\n    if (type) {\n        zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const shouldCloseOnClick = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                /** @type {?} */\n                const element = (/** @type {?} */ (event.target));\n                if ((event instanceof MouseEvent && event.button === 2) || isContainedIn(element, ignoreElements)) {\n                    return false;\n                }\n                if (type === 'inside') {\n                    return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n                }\n                else if (type === 'outside') {\n                    return !isContainedIn(element, insideElements);\n                }\n                else /* if (type === true) */ {\n                    return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n                }\n            });\n            /** @type {?} */\n            const escapes$ = fromEvent(document, 'keydown')\n                .pipe(takeUntil(closed$), \n            // tslint:disable-next-line:deprecation\n            filter((/**\n             * @param {?} e\n             * @return {?}\n             */\n            e => e.which === Key.Escape)));\n            // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown/touchstart',\n            // because on 'mouseup/touchend' DOM nodes might be detached\n            /** @type {?} */\n            const mouseDowns$ = fromEvent(document, iOS ? 'touchstart' : 'mousedown')\n                .pipe(map(shouldCloseOnClick), takeUntil(closed$));\n            /** @type {?} */\n            const closeableClicks$ = (/** @type {?} */ (fromEvent(document, iOS ? 'touchend' : 'mouseup')\n                .pipe(withLatestFrom(mouseDowns$), filter((/**\n             * @param {?} __0\n             * @return {?}\n             */\n            ([_, shouldClose]) => shouldClose)), delay(iOS ? 16 : 0), takeUntil(closed$))));\n            race([escapes$, closeableClicks$]).subscribe((/**\n             * @return {?}\n             */\n            () => zone.run(close)));\n        }));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n    'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n    'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n * @param {?} element\n * @return {?}\n */\nfunction getFocusableBoundaryElements(element) {\n    /** @type {?} */\n    const list = Array.from((/** @type {?} */ (element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR))))\n        .filter((/**\n     * @param {?} el\n     * @return {?}\n     */\n    el => el.tabIndex !== -1));\n    return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * \\@param element The element around which focus will be trapped inside\n * \\@param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * \\@param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n * @type {?}\n */\nconst ngbFocusTrap = (/**\n * @param {?} element\n * @param {?} stopFocusTrap$\n * @param {?=} refocusOnClick\n * @return {?}\n */\n(element, stopFocusTrap$, refocusOnClick = false) => {\n    // last focused element\n    /** @type {?} */\n    const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map((/**\n     * @param {?} e\n     * @return {?}\n     */\n    e => e.target)));\n    // 'tab' / 'shift+tab' stream\n    fromEvent(element, 'keydown')\n        .pipe(takeUntil(stopFocusTrap$), \n    // tslint:disable:deprecation\n    filter((/**\n     * @param {?} e\n     * @return {?}\n     */\n    e => e.which === Key.Tab)), \n    // tslint:enable:deprecation\n    withLatestFrom(lastFocusedElement$))\n        .subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ([tabEvent, focusedElement]) => {\n        const [first, last] = getFocusableBoundaryElements(element);\n        if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n            last.focus();\n            tabEvent.preventDefault();\n        }\n        if (focusedElement === last && !tabEvent.shiftKey) {\n            first.focus();\n            tabEvent.preventDefault();\n        }\n    }));\n    // inside click\n    if (refocusOnClick) {\n        fromEvent(element, 'click')\n            .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map((/**\n         * @param {?} arr\n         * @return {?}\n         */\n        arr => (/** @type {?} */ (arr[1])))))\n            .subscribe((/**\n         * @param {?} lastFocusedElement\n         * @return {?}\n         */\n        lastFocusedElement => lastFocusedElement.focus()));\n    }\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nclass Positioning {\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    getAllStyles(element) { return window.getComputedStyle(element); }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} prop\n     * @return {?}\n     */\n    getStyle(element, prop) { return this.getAllStyles(element)[prop]; }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    isStaticPositioned(element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    offsetParent(element) {\n        /** @type {?} */\n        let offsetParentEl = (/** @type {?} */ (element.offsetParent)) || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = (/** @type {?} */ (offsetParentEl.offsetParent));\n        }\n        return offsetParentEl || document.documentElement;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} round\n     * @return {?}\n     */\n    position(element, round = true) {\n        /** @type {?} */\n        let elPosition;\n        /** @type {?} */\n        let parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n            elPosition = {\n                top: elPosition.top,\n                bottom: elPosition.bottom,\n                left: elPosition.left,\n                right: elPosition.right,\n                height: elPosition.height,\n                width: elPosition.width\n            };\n        }\n        else {\n            /** @type {?} */\n            const offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} round\n     * @return {?}\n     */\n    offset(element, round = true) {\n        /** @type {?} */\n        const elBcr = element.getBoundingClientRect();\n        /** @type {?} */\n        const viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        /** @type {?} */\n        let elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    }\n    /*\n        Return false if the element to position is outside the viewport\n      */\n    /**\n     * @param {?} hostElement\n     * @param {?} targetElement\n     * @param {?} placement\n     * @param {?=} appendToBody\n     * @return {?}\n     */\n    positionElements(hostElement, targetElement, placement, appendToBody) {\n        const [placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n        /** @type {?} */\n        const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        /** @type {?} */\n        const targetElStyles = this.getAllStyles(targetElement);\n        /** @type {?} */\n        const marginTop = parseFloat(targetElStyles.marginTop);\n        /** @type {?} */\n        const marginBottom = parseFloat(targetElStyles.marginBottom);\n        /** @type {?} */\n        const marginLeft = parseFloat(targetElStyles.marginLeft);\n        /** @type {?} */\n        const marginRight = parseFloat(targetElStyles.marginRight);\n        /** @type {?} */\n        let topPosition = 0;\n        /** @type {?} */\n        let leftPosition = 0;\n        switch (placementPrimary) {\n            case 'top':\n                topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n                break;\n            case 'bottom':\n                topPosition = (hostElPosition.top + hostElPosition.height);\n                break;\n            case 'left':\n                leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n                break;\n            case 'right':\n                leftPosition = (hostElPosition.left + hostElPosition.width);\n                break;\n        }\n        switch (placementSecondary) {\n            case 'top':\n                topPosition = hostElPosition.top;\n                break;\n            case 'bottom':\n                topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n                break;\n            case 'left':\n                leftPosition = hostElPosition.left;\n                break;\n            case 'right':\n                leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n                break;\n            case 'center':\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n                    leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n                }\n                else {\n                    topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n                }\n                break;\n        }\n        /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n        // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n        targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n        // Check if the targetElement is inside the viewport\n        /** @type {?} */\n        const targetElBCR = targetElement.getBoundingClientRect();\n        /** @type {?} */\n        const html = document.documentElement;\n        /** @type {?} */\n        const windowHeight = window.innerHeight || html.clientHeight;\n        /** @type {?} */\n        const windowWidth = window.innerWidth || html.clientWidth;\n        return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n            targetElBCR.bottom <= windowHeight;\n    }\n}\n/** @type {?} */\nconst placementSeparator = /\\s+/;\n/** @type {?} */\nconst positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\n/**\n * @param {?} hostElement\n * @param {?} targetElement\n * @param {?} placement\n * @param {?=} appendToBody\n * @param {?=} baseClass\n * @return {?}\n */\nfunction positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {\n    /** @type {?} */\n    let placementVals = Array.isArray(placement) ? placement : (/** @type {?} */ (placement.split(placementSeparator)));\n    /** @type {?} */\n    const allowedPlacements = [\n        'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n        'right-top', 'right-bottom'\n    ];\n    /** @type {?} */\n    const classList = targetElement.classList;\n    /** @type {?} */\n    const addClassesToTarget = (/**\n     * @param {?} targetPlacement\n     * @return {?}\n     */\n    (targetPlacement) => {\n        const [primary, secondary] = targetPlacement.split('-');\n        /** @type {?} */\n        const classes = [];\n        if (baseClass) {\n            classes.push(`${baseClass}-${primary}`);\n            if (secondary) {\n                classes.push(`${baseClass}-${primary}-${secondary}`);\n            }\n            classes.forEach((/**\n             * @param {?} classname\n             * @return {?}\n             */\n            (classname) => { classList.add(classname); }));\n        }\n        return classes;\n    });\n    // Remove old placement classes to avoid issues\n    if (baseClass) {\n        allowedPlacements.forEach((/**\n         * @param {?} placementToRemove\n         * @return {?}\n         */\n        (placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); }));\n    }\n    // replace auto placement with other placements\n    /** @type {?} */\n    let hasAuto = placementVals.findIndex((/**\n     * @param {?} val\n     * @return {?}\n     */\n    val => val === 'auto'));\n    if (hasAuto >= 0) {\n        allowedPlacements.forEach((/**\n         * @param {?} obj\n         * @return {?}\n         */\n        function (obj) {\n            if (placementVals.find((/**\n             * @param {?} val\n             * @return {?}\n             */\n            val => val.search('^' + obj) !== -1)) == null) {\n                placementVals.splice(hasAuto++, 1, (/** @type {?} */ (obj)));\n            }\n        }));\n    }\n    // coordinates where to position\n    // Required for transform:\n    /** @type {?} */\n    const style = targetElement.style;\n    style.position = 'absolute';\n    style.top = '0';\n    style.left = '0';\n    style['will-change'] = 'transform';\n    /** @type {?} */\n    let testPlacement;\n    /** @type {?} */\n    let isInViewport = false;\n    for (testPlacement of placementVals) {\n        /** @type {?} */\n        let addedClasses = addClassesToTarget(testPlacement);\n        if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n            isInViewport = true;\n            break;\n        }\n        // Remove the baseClasses for further calculation\n        if (baseClass) {\n            addedClasses.forEach((/**\n             * @param {?} classname\n             * @return {?}\n             */\n            (classname) => { classList.remove(classname); }));\n        }\n    }\n    if (!isInViewport) {\n        // If nothing match, the first placement is the default one\n        testPlacement = placementVals[0];\n        addClassesToTarget(testPlacement);\n        positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n    }\n    return testPlacement;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n    return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n * @abstract\n */\nclass NgbDateParserFormatter {\n}\nNgbDateParserFormatter.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY },] }\n];\n/** @nocollapse */ NgbDateParserFormatter.ngInjectableDef = ɵɵdefineInjectable({ factory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY, token: NgbDateParserFormatter, providedIn: \"root\" });\nclass NgbDateISOParserFormatter extends NgbDateParserFormatter {\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        if (value) {\n            /** @type {?} */\n            const dateParts = value.trim().split('-');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return { year: toInteger(dateParts[0]), month: null, day: null };\n            }\n            else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null };\n            }\n            else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2]) };\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    format(date) {\n        return date ?\n            `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n            '';\n    }\n}\nNgbDateISOParserFormatter.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_DATEPICKER_VALUE_ACCESSOR$1 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgbInputDatepicker)),\n    multi: true\n};\n/** @type {?} */\nconst NGB_DATEPICKER_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgbInputDatepicker)),\n    multi: true\n};\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\nclass NgbInputDatepicker {\n    /**\n     * @param {?} _parserFormatter\n     * @param {?} _elRef\n     * @param {?} _vcRef\n     * @param {?} _renderer\n     * @param {?} _cfr\n     * @param {?} _ngZone\n     * @param {?} _service\n     * @param {?} _calendar\n     * @param {?} _dateAdapter\n     * @param {?} _document\n     * @param {?} _changeDetector\n     */\n    constructor(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, _ngZone, _service, _calendar, _dateAdapter, _document, _changeDetector) {\n        this._parserFormatter = _parserFormatter;\n        this._elRef = _elRef;\n        this._vcRef = _vcRef;\n        this._renderer = _renderer;\n        this._cfr = _cfr;\n        this._ngZone = _ngZone;\n        this._service = _service;\n        this._calendar = _calendar;\n        this._dateAdapter = _dateAdapter;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        this._cRef = null;\n        this._disabled = false;\n        /**\n         * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n         *\n         * * `true` - the popup will close on both date selection and outside click.\n         * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n         * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n         * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n         *\n         * \\@since 3.0.0\n         */\n        this.autoClose = true;\n        /**\n         * The preferred placement of the datepicker popup.\n         *\n         * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n         * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n         * `\"right-bottom\"`\n         *\n         * Accepts an array of strings or a string with space separated possible values.\n         *\n         * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * \\@since 1.1.1\n         */\n        this.dateSelect = new EventEmitter();\n        /**\n         * Event emitted right after the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event fired after closing datepicker window.\n         *\n         * \\@since 4.2.0\n         */\n        this.closed = new EventEmitter();\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._validatorChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._zoneSubscription = _ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        () => this._updatePopupPosition()));\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value === '' || (value && value !== 'false');\n        if (this.isOpen()) {\n            this._cRef.instance.setDisabledState(this._disabled);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this._onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this._onTouched = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._validatorChange = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) { this.disabled = isDisabled; }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        /** @type {?} */\n        const value = c.value;\n        if (value === null || value === undefined) {\n            return null;\n        }\n        /** @type {?} */\n        const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        if (!this._calendar.isValid(ngbDate)) {\n            return { 'ngbDate': { invalid: c.value } };\n        }\n        if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n            return { 'ngbDate': { requiredBefore: this.minDate } };\n        }\n        if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n            return { 'ngbDate': { requiredAfter: this.maxDate } };\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        this._writeModelValue(this._model);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} updateView\n     * @return {?}\n     */\n    manualDateChange(value, updateView = false) {\n        /** @type {?} */\n        const inputValueChanged = value !== this._inputValue;\n        if (inputValueChanged) {\n            this._inputValue = value;\n            this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n        }\n        if (inputValueChanged || !updateView) {\n            this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n        }\n        if (updateView && this._model) {\n            this._writeModelValue(this._model);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    isOpen() { return !!this._cRef; }\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     * @return {?}\n     */\n    open() {\n        if (!this.isOpen()) {\n            /** @type {?} */\n            const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n            this._cRef = this._vcRef.createComponent(cf);\n            this._applyPopupStyling(this._cRef.location.nativeElement);\n            this._applyDatepickerInputs(this._cRef.instance);\n            this._subscribeForDatepickerOutputs(this._cRef.instance);\n            this._cRef.instance.ngOnInit();\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n            // date selection event handling\n            this._cRef.instance.registerOnChange((/**\n             * @param {?} selectedDate\n             * @return {?}\n             */\n            (selectedDate) => {\n                this.writeValue(selectedDate);\n                this._onChange(selectedDate);\n                this._onTouched();\n            }));\n            this._cRef.changeDetectorRef.detectChanges();\n            this._cRef.instance.setDisabledState(this.disabled);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n            }\n            // focus handling\n            ngbFocusTrap(this._cRef.location.nativeElement, this.closed, true);\n            this._cRef.instance.focus();\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, (/**\n             * @return {?}\n             */\n            () => this.close()), this.closed, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n        }\n    }\n    /**\n     * Closes the datepicker popup.\n     * @return {?}\n     */\n    close() {\n        if (this.isOpen()) {\n            this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n            this._cRef = null;\n            this.closed.emit();\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the datepicker popup.\n     * @return {?}\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     * @param {?=} date\n     * @return {?}\n     */\n    navigateTo(date) {\n        if (this.isOpen()) {\n            this._cRef.instance.navigateTo(date);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onBlur() { this._onTouched(); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['minDate'] || changes['maxDate']) {\n            this._validatorChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        this._zoneSubscription.unsubscribe();\n    }\n    /**\n     * @private\n     * @param {?} datepickerInstance\n     * @return {?}\n     */\n    _applyDatepickerInputs(datepickerInstance) {\n        ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n            'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n            .forEach((/**\n         * @param {?} optionName\n         * @return {?}\n         */\n        (optionName) => {\n            if (this[optionName] !== undefined) {\n                datepickerInstance[optionName] = this[optionName];\n            }\n        }));\n        datepickerInstance.startDate = this.startDate || this._model;\n    }\n    /**\n     * @private\n     * @param {?} nativeElement\n     * @return {?}\n     */\n    _applyPopupStyling(nativeElement) {\n        this._renderer.addClass(nativeElement, 'dropdown-menu');\n        this._renderer.addClass(nativeElement, 'show');\n        if (this.container === 'body') {\n            this._renderer.addClass(nativeElement, 'ngb-dp-body');\n        }\n    }\n    /**\n     * @private\n     * @param {?} datepickerInstance\n     * @return {?}\n     */\n    _subscribeForDatepickerOutputs(datepickerInstance) {\n        datepickerInstance.navigate.subscribe((/**\n         * @param {?} navigateEvent\n         * @return {?}\n         */\n        navigateEvent => this.navigate.emit(navigateEvent)));\n        datepickerInstance.select.subscribe((/**\n         * @param {?} date\n         * @return {?}\n         */\n        date => {\n            this.dateSelect.emit(date);\n            if (this.autoClose === true || this.autoClose === 'inside') {\n                this.close();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @param {?} model\n     * @return {?}\n     */\n    _writeModelValue(model) {\n        /** @type {?} */\n        const value = this._parserFormatter.format(model);\n        this._inputValue = value;\n        this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n        if (this.isOpen()) {\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n            this._onTouched();\n        }\n    }\n    /**\n     * @private\n     * @param {?} date\n     * @return {?}\n     */\n    _fromDateStruct(date) {\n        /** @type {?} */\n        const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n        return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updatePopupPosition() {\n        if (!this._cRef) {\n            return;\n        }\n        /** @type {?} */\n        let hostElement;\n        if (typeof this.positionTarget === 'string') {\n            hostElement = window.document.querySelector(this.positionTarget);\n        }\n        else if (this.positionTarget instanceof HTMLElement) {\n            hostElement = this.positionTarget;\n        }\n        else {\n            hostElement = this._elRef.nativeElement;\n        }\n        if (this.positionTarget && !hostElement) {\n            throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n        }\n        positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n    }\n}\nNgbInputDatepicker.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[ngbDatepicker]',\n                exportAs: 'ngbDatepicker',\n                host: {\n                    '(input)': 'manualDateChange($event.target.value)',\n                    '(change)': 'manualDateChange($event.target.value, true)',\n                    '(blur)': 'onBlur()',\n                    '[disabled]': 'disabled'\n                },\n                providers: [NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n            },] }\n];\n/** @nocollapse */\nNgbInputDatepicker.ctorParameters = () => [\n    { type: NgbDateParserFormatter },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: Renderer2 },\n    { type: ComponentFactoryResolver },\n    { type: NgZone },\n    { type: NgbDatepickerService },\n    { type: NgbCalendar },\n    { type: NgbDateAdapter },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\nNgbInputDatepicker.propDecorators = {\n    autoClose: [{ type: Input }],\n    dayTemplate: [{ type: Input }],\n    dayTemplateData: [{ type: Input }],\n    displayMonths: [{ type: Input }],\n    firstDayOfWeek: [{ type: Input }],\n    footerTemplate: [{ type: Input }],\n    markDisabled: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    navigation: [{ type: Input }],\n    outsideDays: [{ type: Input }],\n    placement: [{ type: Input }],\n    showWeekdays: [{ type: Input }],\n    showWeekNumbers: [{ type: Input }],\n    startDate: [{ type: Input }],\n    container: [{ type: Input }],\n    positionTarget: [{ type: Input }],\n    dateSelect: [{ type: Output }],\n    navigate: [{ type: Output }],\n    closed: [{ type: Output }],\n    disabled: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbDatepickerDayView {\n    /**\n     * @param {?} i18n\n     */\n    constructor(i18n) {\n        this.i18n = i18n;\n    }\n    /**\n     * @return {?}\n     */\n    isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\nNgbDatepickerDayView.decorators = [\n    { type: Component, args: [{\n                selector: '[ngbDatepickerDayView]',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    'class': 'btn-light',\n                    '[class.bg-primary]': 'selected',\n                    '[class.text-white]': 'selected',\n                    '[class.text-muted]': 'isMuted()',\n                    '[class.outside]': 'isMuted()',\n                    '[class.active]': 'focused'\n                },\n                template: `{{ i18n.getDayNumerals(date) }}`,\n                styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}\"]\n            }] }\n];\n/** @nocollapse */\nNgbDatepickerDayView.ctorParameters = () => [\n    { type: NgbDatepickerI18n }\n];\nNgbDatepickerDayView.propDecorators = {\n    currentMonth: [{ type: Input }],\n    date: [{ type: Input }],\n    disabled: [{ type: Input }],\n    focused: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbDatepickerNavigationSelect {\n    /**\n     * @param {?} i18n\n     */\n    constructor(i18n) {\n        this.i18n = i18n;\n        this.select = new EventEmitter();\n    }\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    changeMonth(month) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n    /**\n     * @param {?} year\n     * @return {?}\n     */\n    changeYear(year) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n}\nNgbDatepickerNavigationSelect.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-datepicker-navigation-select',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `,\n                styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}\"]\n            }] }\n];\n/** @nocollapse */\nNgbDatepickerNavigationSelect.ctorParameters = () => [\n    { type: NgbDatepickerI18n }\n];\nNgbDatepickerNavigationSelect.propDecorators = {\n    date: [{ type: Input }],\n    disabled: [{ type: Input }],\n    months: [{ type: Input }],\n    years: [{ type: Input }],\n    select: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nclass NgbCalendarHijri extends NgbCalendar {\n    /**\n     * @return {?}\n     */\n    getDaysPerWeek() { return 7; }\n    /**\n     * @return {?}\n     */\n    getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n    /**\n     * @return {?}\n     */\n    getWeeksPerMonth() { return 6; }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = this._setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this._setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this._setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getWeekday(date) {\n        /** @type {?} */\n        const day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        /** @type {?} */\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        /** @type {?} */\n        const date = week[thursdayIndex];\n        /** @type {?} */\n        const jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        // Thursday\n        /** @type {?} */\n        const time = jsDate.getTime();\n        /** @type {?} */\n        const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    }\n    /**\n     * @return {?}\n     */\n    getToday() { return this.fromGregorian(new Date()); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n            !isNaN(this.toGregorian(date).getTime());\n    }\n    /**\n     * @private\n     * @param {?} date\n     * @param {?} day\n     * @return {?}\n     */\n    _setDay(date, day) {\n        day = +day;\n        /** @type {?} */\n        let mDays = this.getDaysPerMonth(date.month, date.year);\n        if (day <= 0) {\n            while (day <= 0) {\n                date = this._setMonth(date, date.month - 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n                day += mDays;\n            }\n        }\n        else if (day > mDays) {\n            while (day > mDays) {\n                day -= mDays;\n                date = this._setMonth(date, date.month + 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n            }\n        }\n        date.day = day;\n        return date;\n    }\n    /**\n     * @private\n     * @param {?} date\n     * @param {?} month\n     * @return {?}\n     */\n    _setMonth(date, month) {\n        month = +month;\n        date.year = date.year + Math.floor((month - 1) / 12);\n        date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n        return date;\n    }\n    /**\n     * @private\n     * @param {?} date\n     * @param {?} year\n     * @return {?}\n     */\n    _setYear(date, year) {\n        date.year = +year;\n        return date;\n    }\n}\nNgbCalendarHijri.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if islamic year is a leap year\n * @param {?} hYear\n * @return {?}\n */\nfunction isIslamicLeapYear(hYear) {\n    return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n * @param {?} gDate\n * @return {?}\n */\nfunction isGregorianLeapYear(gDate) {\n    /** @type {?} */\n    const year = gDate.getFullYear();\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n * @param {?} hYear\n * @param {?} hMonth\n * @return {?}\n */\nfunction getIslamicMonthStart(hYear, hMonth) {\n    return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n * @param {?} year\n * @return {?}\n */\nfunction getIslamicYearStart(year) {\n    return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction mod(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n * @type {?}\n */\nconst GREGORIAN_EPOCH = 1721425.5;\n/** @type {?} */\nconst ISLAMIC_EPOCH = 1948439.5;\nclass NgbCalendarIslamicCivil extends NgbCalendarHijri {\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     * @param {?} gDate\n     * @return {?}\n     */\n    fromGregorian(gDate) {\n        /** @type {?} */\n        const gYear = gDate.getFullYear();\n        /** @type {?} */\n        const gMonth = gDate.getMonth();\n        /** @type {?} */\n        const gDay = gDate.getDate();\n        /** @type {?} */\n        let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n            -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n            Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n        julianDay = Math.floor(julianDay) + 0.5;\n        /** @type {?} */\n        const days = julianDay - ISLAMIC_EPOCH;\n        /** @type {?} */\n        const hYear = Math.floor((30 * days + 10646) / 10631.0);\n        /** @type {?} */\n        let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n        hMonth = Math.min(hMonth, 11);\n        /** @type {?} */\n        const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n        return new NgbDate(hYear, hMonth + 1, hDay);\n    }\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     * @param {?} hDate\n     * @return {?}\n     */\n    toGregorian(hDate) {\n        /** @type {?} */\n        const hYear = hDate.year;\n        /** @type {?} */\n        const hMonth = hDate.month - 1;\n        /** @type {?} */\n        const hDay = hDate.day;\n        /** @type {?} */\n        const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n        /** @type {?} */\n        const wjd = Math.floor(julianDay - 0.5) + 0.5;\n        /** @type {?} */\n        const depoch = wjd - GREGORIAN_EPOCH;\n        /** @type {?} */\n        const quadricent = Math.floor(depoch / 146097);\n        /** @type {?} */\n        const dqc = mod(depoch, 146097);\n        /** @type {?} */\n        const cent = Math.floor(dqc / 36524);\n        /** @type {?} */\n        const dcent = mod(dqc, 36524);\n        /** @type {?} */\n        const quad = Math.floor(dcent / 1461);\n        /** @type {?} */\n        const dquad = mod(dcent, 1461);\n        /** @type {?} */\n        const yindex = Math.floor(dquad / 365);\n        /** @type {?} */\n        let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n        if (!(cent === 4 || yindex === 4)) {\n            year++;\n        }\n        /** @type {?} */\n        const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400);\n        /** @type {?} */\n        const yearday = wjd - gYearStart;\n        /** @type {?} */\n        const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n        /** @type {?} */\n        const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n        /** @type {?} */\n        const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n        /** @type {?} */\n        const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n                1);\n        /** @type {?} */\n        const day = wjd - tjd2 + 1;\n        return new Date(year, month - 1, day);\n    }\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     * @param {?} month\n     * @param {?} year\n     * @return {?}\n     */\n    getDaysPerMonth(month, year) {\n        year = year + Math.floor(month / 13);\n        month = ((month - 1) % 12) + 1;\n        /** @type {?} */\n        let length = 29 + month % 2;\n        if (month === 12 && isIslamicLeapYear(year)) {\n            length++;\n        }\n        return length;\n    }\n}\nNgbCalendarIslamicCivil.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * @type {?}\n */\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\n/** @type {?} */\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\n/** @type {?} */\nconst HIJRI_BEGIN = 1300;\n/** @type {?} */\nconst HIJRI_END = 1600;\n/** @type {?} */\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n/** @type {?} */\nconst MONTH_LENGTH = [\n    // 1300-1304\n    '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n    // 1305-1309\n    '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n    // 1310-1314\n    '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n    // 1315-1319\n    '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n    // 1320-1324\n    '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n    // 1325-1329\n    '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n    // 1330-1334\n    '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n    // 1335-1339\n    '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n    // 1340-1344\n    '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n    // 1345-1349\n    '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n    // 1350-1354\n    '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n    // 1355-1359\n    '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n    // 1360-1364\n    '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n    // 1365-1369\n    '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n    // 1370-1374\n    '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n    // 1375-1379\n    '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n    // 1380-1384\n    '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n    // 1385-1389\n    '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n    // 1390-1394\n    '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n    // 1395-1399\n    '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n    // 1400-1404\n    '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n    // 1405-1409\n    '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n    // 1410-1414\n    '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n    // 1415-1419\n    '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n    // 1420-1424\n    '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n    // 1425-1429\n    '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n    // 1430-1434\n    '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n    // 1435-1439\n    '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n    // 1440-1444\n    '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n    // 1445-1449\n    '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n    // 1450-1454\n    '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n    // 1455-1459\n    '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n    // 1460-1464\n    '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n    // 1465-1469\n    '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n    // 1470-1474\n    '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n    // 1475-1479\n    '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n    // 1480-1484\n    '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n    // 1485-1489\n    '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n    // 1490-1494\n    '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n    // 1495-1499\n    '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n    // 1500-1504\n    '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n    // 1505-1509\n    '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n    // 1510-1514\n    '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n    // 1515-1519\n    '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n    // 1520-1524\n    '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n    // 1525-1529\n    '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n    // 1530-1534\n    '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n    // 1535-1539\n    '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n    // 1540-1544\n    '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n    // 1545-1549\n    '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n    // 1550-1554\n    '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n    // 1555-1559\n    '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n    // 1560-1564\n    '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n    // 1565-1569\n    '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n    // 1570-1574\n    '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n    // 1575-1579\n    '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n    // 1580-1584\n    '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n    // 1585-1589\n    '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n    // 1590-1594\n    '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n    // 1595-1599\n    '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n    // 1600\n    '001010011101'\n];\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nfunction getDaysDiff(date1, date2) {\n    // Ignores the time part in date1 and date2:\n    /** @type {?} */\n    const time1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    /** @type {?} */\n    const time2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    /** @type {?} */\n    const diff = Math.abs(time1 - time2);\n    return Math.round(diff / ONE_DAY);\n}\nclass NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n    /**\n     * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n     * `gdate` is s JS Date to be converted to Hijri.\n     * @param {?} gDate\n     * @return {?}\n     */\n    fromGregorian(gDate) {\n        /** @type {?} */\n        let hDay = 1;\n        /** @type {?} */\n        let hMonth = 0;\n        /** @type {?} */\n        let hYear = 1300;\n        /** @type {?} */\n        let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n        if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n            /** @type {?} */\n            let year = 1300;\n            for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n                for (let j = 0; j < 12; j++) {\n                    /** @type {?} */\n                    let numOfDays = +MONTH_LENGTH[i][j] + 29;\n                    if (daysDiff <= numOfDays) {\n                        hDay = daysDiff + 1;\n                        if (hDay > numOfDays) {\n                            hDay = 1;\n                            j++;\n                        }\n                        if (j > 11) {\n                            j = 0;\n                            year++;\n                        }\n                        hMonth = j;\n                        hYear = year;\n                        return new NgbDate(hYear, hMonth + 1, hDay);\n                    }\n                    daysDiff = daysDiff - numOfDays;\n                }\n            }\n        }\n        else {\n            return super.fromGregorian(gDate);\n        }\n    }\n    /**\n     * Converts the current Hijri date to Gregorian.\n     * @param {?} hDate\n     * @return {?}\n     */\n    toGregorian(hDate) {\n        /** @type {?} */\n        const hYear = hDate.year;\n        /** @type {?} */\n        const hMonth = hDate.month - 1;\n        /** @type {?} */\n        const hDay = hDate.day;\n        /** @type {?} */\n        let gDate = new Date(GREGORIAN_FIRST_DATE);\n        /** @type {?} */\n        let dayDiff = hDay - 1;\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n                for (let m = 0; m < 12; m++) {\n                    dayDiff += +MONTH_LENGTH[y][m] + 29;\n                }\n            }\n            for (let m = 0; m < hMonth; m++) {\n                dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n            }\n            gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n        }\n        else {\n            gDate = super.toGregorian(hDate);\n        }\n        return gDate;\n    }\n    /**\n     * Returns the number of days in a specific Hijri hMonth.\n     * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n     * `hYear` is any Hijri hYear.\n     * @param {?} hMonth\n     * @param {?} hYear\n     * @return {?}\n     */\n    getDaysPerMonth(hMonth, hYear) {\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            /** @type {?} */\n            const pos = hYear - HIJRI_BEGIN;\n            return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n        }\n        return super.getDaysPerMonth(hMonth, hYear);\n    }\n}\nNgbCalendarIslamicUmalqura.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n * @param {?} jalaliDate\n * @return {?}\n */\nfunction toGregorian(jalaliDate) {\n    /** @type {?} */\n    let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n    /** @type {?} */\n    let date = julianToGregorian(jdn);\n    date.setHours(6, 30, 3, 200);\n    return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n * @param {?} gdate\n * @return {?}\n */\nfunction fromGregorian(gdate) {\n    /** @type {?} */\n    let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n    return julianToJalali(g2d);\n}\n/**\n * @param {?} date\n * @param {?} yearValue\n * @return {?}\n */\nfunction setJalaliYear(date, yearValue) {\n    date.year = +yearValue;\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} month\n * @return {?}\n */\nfunction setJalaliMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} day\n * @return {?}\n */\nfunction setJalaliDay(date, day) {\n    /** @type {?} */\n    let mDays = getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n        while (day <= 0) {\n            date = setJalaliMonth(date, date.month - 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n            day += mDays;\n        }\n    }\n    else if (day > mDays) {\n        while (day > mDays) {\n            day -= mDays;\n            date = setJalaliMonth(date, date.month + 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n        }\n    }\n    date.day = day;\n    return date;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction mod$1(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction div(a, b) {\n    return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\n/**\n * @param {?} jalaliYear\n * @return {?}\n */\nfunction jalCal(jalaliYear) {\n    // Jalali years starting the 33-year rule.\n    /** @type {?} */\n    let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n    /** @type {?} */\n    const breaksLength = breaks.length;\n    /** @type {?} */\n    const gYear = jalaliYear + 621;\n    /** @type {?} */\n    let leapJ = -14;\n    /** @type {?} */\n    let jp = breaks[0];\n    if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n        throw new Error('Invalid Jalali year ' + jalaliYear);\n    }\n    // Find the limiting years for the Jalali year jalaliYear.\n    /** @type {?} */\n    let jump;\n    for (let i = 1; i < breaksLength; i += 1) {\n        /** @type {?} */\n        const jm = breaks[i];\n        jump = jm - jp;\n        if (jalaliYear < jm) {\n            break;\n        }\n        leapJ = leapJ + div(jump, 33) * 8 + div(mod$1(jump, 33), 4);\n        jp = jm;\n    }\n    /** @type {?} */\n    let n = jalaliYear - jp;\n    // Find the number of leap years from AD 621 to the beginning\n    // of the current Jalali year in the Persian calendar.\n    leapJ = leapJ + div(n, 33) * 8 + div(mod$1(n, 33) + 3, 4);\n    if (mod$1(jump, 33) === 4 && jump - n === 4) {\n        leapJ += 1;\n    }\n    // And the same in the Gregorian calendar (until the year gYear).\n    /** @type {?} */\n    const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n    // Determine the Gregorian date of Farvardin the 1st.\n    /** @type {?} */\n    const march = 20 + leapJ - leapG;\n    // Find how many years have passed since the last leap year.\n    if (jump - n < 6) {\n        n = n - jump + div(jump + 4, 33) * 33;\n    }\n    /** @type {?} */\n    let leap = mod$1(mod$1(n + 1, 33) - 1, 4);\n    if (leap === -1) {\n        leap = 4;\n    }\n    return { leap: leap, gy: gYear, march: march };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\n/**\n * @param {?} julianDayNumber\n * @return {?}\n */\nfunction julianToGregorian(julianDayNumber) {\n    /** @type {?} */\n    let j = 4 * julianDayNumber + 139361631;\n    j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n    /** @type {?} */\n    const i = div(mod$1(j, 1461), 4) * 5 + 308;\n    /** @type {?} */\n    const gDay = div(mod$1(i, 153), 5) + 1;\n    /** @type {?} */\n    const gMonth = mod$1(div(i, 153), 12) + 1;\n    /** @type {?} */\n    const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\n/**\n * @param {?} gy\n * @param {?} gm\n * @param {?} gd\n * @return {?}\n */\nfunction gregorianToJulian(gy, gm, gd) {\n    /** @type {?} */\n    let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod$1(gm + 9, 12) + 2, 5) + gd - 34840408;\n    d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n    return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\n/**\n * @param {?} julianDayNumber\n * @return {?}\n */\nfunction julianToJalali(julianDayNumber) {\n    /** @type {?} */\n    let gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).\n    ;\n    /** @type {?} */\n    let jalaliYear = gy - 621;\n    /** @type {?} */\n    let r = jalCal(jalaliYear);\n    /** @type {?} */\n    let gregorianDay = gregorianToJulian(gy, 3, r.march);\n    /** @type {?} */\n    let jalaliDay;\n    /** @type {?} */\n    let jalaliMonth;\n    /** @type {?} */\n    let numberOfDays;\n    // Find number of days that passed since 1 Farvardin.\n    numberOfDays = julianDayNumber - gregorianDay;\n    if (numberOfDays >= 0) {\n        if (numberOfDays <= 185) {\n            // The first 6 months.\n            jalaliMonth = 1 + div(numberOfDays, 31);\n            jalaliDay = mod$1(numberOfDays, 31) + 1;\n            return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n        }\n        else {\n            // The remaining months.\n            numberOfDays -= 186;\n        }\n    }\n    else {\n        // Previous Jalali year.\n        jalaliYear -= 1;\n        numberOfDays += 179;\n        if (r.leap === 1) {\n            numberOfDays += 1;\n        }\n    }\n    jalaliMonth = 7 + div(numberOfDays, 30);\n    jalaliDay = mod$1(numberOfDays, 30) + 1;\n    return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\n/**\n * @param {?} jYear\n * @param {?} jMonth\n * @param {?} jDay\n * @return {?}\n */\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n    /** @type {?} */\n    let r = jalCal(jYear);\n    return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nfunction getDaysPerMonth(month, year) {\n    if (month <= 6) {\n        return 31;\n    }\n    if (month <= 11) {\n        return 30;\n    }\n    if (jalCal(year).leap === 0) {\n        return 30;\n    }\n    return 29;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbCalendarPersian extends NgbCalendar {\n    /**\n     * @return {?}\n     */\n    getDaysPerWeek() { return 7; }\n    /**\n     * @return {?}\n     */\n    getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n    /**\n     * @return {?}\n     */\n    getWeeksPerMonth() { return 6; }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = setJalaliYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setJalaliMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setJalaliDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getWeekday(date) {\n        /** @type {?} */\n        const day = toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        /** @type {?} */\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        /** @type {?} */\n        const date = week[thursdayIndex];\n        /** @type {?} */\n        const jsDate = toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        // Thursday\n        /** @type {?} */\n        const time = jsDate.getTime();\n        /** @type {?} */\n        const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n    /**\n     * @return {?}\n     */\n    getToday() { return fromGregorian(new Date()); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n            !isNaN(toGregorian(date).getTime());\n    }\n}\nNgbCalendarPersian.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst PARTS_PER_HOUR = 1080;\n/** @type {?} */\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\n/** @type {?} */\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\n/** @type {?} */\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\n/** @type {?} */\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\n/** @type {?} */\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\n/** @type {?} */\nconst GREGORIAN_EPOCH$1 = 1721425.5;\n/**\n * @param {?} year\n * @return {?}\n */\nfunction isGregorianLeapYear$1(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction numberOfFirstDayInYear(year) {\n    /** @type {?} */\n    let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n    /** @type {?} */\n    let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n    /** @type {?} */\n    let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n    /** @type {?} */\n    let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n    /** @type {?} */\n    let dayOfWeek = dayNumber % 7;\n    if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n        dayNumber++;\n        dayOfWeek = dayNumber % 7;\n    }\n    if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n        dayNumber += 2;\n    }\n    else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n        dayNumber++;\n    }\n    return dayNumber;\n}\n/**\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nfunction getDaysInGregorianMonth(month, year) {\n    /** @type {?} */\n    let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (isGregorianLeapYear$1(year)) {\n        days[1]++;\n    }\n    return days[month - 1];\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction getHebrewMonths(year) {\n    return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n * @param {?} year\n * @return {?}\n */\nfunction getDaysInHebrewYear(year) {\n    return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction isHebrewLeapYear(year) {\n    /** @type {?} */\n    let b = (year * 12 + 17) % 19;\n    return b >= ((b < 0) ? -7 : 12);\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nfunction getDaysInHebrewMonth(month, year) {\n    /** @type {?} */\n    let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n    /** @type {?} */\n    let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n    /** @type {?} */\n    let leapYear = isHebrewLeapYear(year);\n    /** @type {?} */\n    let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n        [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n    if (yearType > 0) {\n        daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n    }\n    if (yearType > 1) {\n        daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n    }\n    return daysInMonth[month - 1];\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction getDayNumberInHebrewYear(date) {\n    /** @type {?} */\n    let numberOfDay = 0;\n    for (let i = 1; i < date.month; i++) {\n        numberOfDay += getDaysInHebrewMonth(i, date.year);\n    }\n    return numberOfDay + date.day;\n}\n/**\n * @param {?} date\n * @param {?} val\n * @return {?}\n */\nfunction setHebrewMonth(date, val) {\n    /** @type {?} */\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getHebrewMonths(date.year) - date.month) {\n                val -= getHebrewMonths(date.year) - date.month + 1;\n                date.year++;\n                date.month = 1;\n            }\n            else {\n                date.month += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.month) {\n                date.year--;\n                val -= date.month;\n                date.month = getHebrewMonths(date.year);\n            }\n            else {\n                date.month -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} val\n * @return {?}\n */\nfunction setHebrewDay(date, val) {\n    /** @type {?} */\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n                val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n                date.year++;\n                date.month = 1;\n                date.day = 1;\n            }\n            else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n                val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n                date.month++;\n                date.day = 1;\n            }\n            else {\n                date.day += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.day) {\n                val -= date.day;\n                date.month--;\n                if (date.month === 0) {\n                    date.year--;\n                    date.month = getHebrewMonths(date.year);\n                }\n                date.day = getDaysInHebrewMonth(date.month, date.year);\n            }\n            else {\n                date.day -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n * @param {?} gdate\n * @return {?}\n */\nfunction fromGregorian$1(gdate) {\n    /** @type {?} */\n    const date = new Date(gdate);\n    /** @type {?} */\n    const gYear = date.getFullYear();\n    /** @type {?} */\n    const gMonth = date.getMonth();\n    /** @type {?} */\n    const gDay = date.getDate();\n    /** @type {?} */\n    let julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n        Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gYear) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay + 0.5);\n    /** @type {?} */\n    let daysSinceHebEpoch = julianDay - 347997;\n    /** @type {?} */\n    let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n    /** @type {?} */\n    let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n    /** @type {?} */\n    let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    /** @type {?} */\n    let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    while (dayOfYear < 1) {\n        hYear--;\n        firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n        dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    }\n    /** @type {?} */\n    let hMonth = 1;\n    /** @type {?} */\n    let hDay = dayOfYear;\n    while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n        hDay -= getDaysInHebrewMonth(hMonth, hYear);\n        hMonth++;\n    }\n    return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n * @param {?} hebrewDate\n * @return {?}\n */\nfunction toGregorian$1(hebrewDate) {\n    /** @type {?} */\n    const hYear = hebrewDate.year;\n    /** @type {?} */\n    const hMonth = hebrewDate.month;\n    /** @type {?} */\n    const hDay = hebrewDate.day;\n    /** @type {?} */\n    let days = numberOfFirstDayInYear(hYear);\n    for (let i = 1; i < hMonth; i++) {\n        days += getDaysInHebrewMonth(i, hYear);\n    }\n    days += hDay;\n    /** @type {?} */\n    let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n    /** @type {?} */\n    let after = diffDays >= 0;\n    if (!after) {\n        diffDays = -diffDays;\n    }\n    /** @type {?} */\n    let gYear = 1970;\n    /** @type {?} */\n    let gMonth = 1;\n    /** @type {?} */\n    let gDay = 1;\n    while (diffDays > 0) {\n        if (after) {\n            if (diffDays >= (isGregorianLeapYear$1(gYear) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear$1(gYear) ? 366 : 365;\n                gYear++;\n            }\n            else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                gMonth++;\n            }\n            else {\n                gDay += diffDays;\n                diffDays = 0;\n            }\n        }\n        else {\n            if (diffDays >= (isGregorianLeapYear$1(gYear - 1) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear$1(gYear - 1) ? 366 : 365;\n                gYear--;\n            }\n            else {\n                if (gMonth > 1) {\n                    gMonth--;\n                }\n                else {\n                    gMonth = 12;\n                    gYear--;\n                }\n                if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                    diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                }\n                else {\n                    gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n                    diffDays = 0;\n                }\n            }\n        }\n    }\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/**\n * @param {?} numerals\n * @return {?}\n */\nfunction hebrewNumerals(numerals) {\n    if (!numerals) {\n        return '';\n    }\n    /** @type {?} */\n    const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n    /** @type {?} */\n    const hArray10_19 = [\n        '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n        '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n    ];\n    /** @type {?} */\n    const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n    /** @type {?} */\n    const hArray100_900 = [\n        '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n        '\\u05ea\\u05ea\\u05e7'\n    ];\n    /** @type {?} */\n    const hArray1000_9000 = [\n        '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n        '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n    ];\n    /** @type {?} */\n    const geresh = '\\u05f3';\n    /** @type {?} */\n    const gershaim = '\\u05f4';\n    /** @type {?} */\n    let mem = 0;\n    /** @type {?} */\n    let result = [];\n    /** @type {?} */\n    let step = 0;\n    while (numerals > 0) {\n        /** @type {?} */\n        let m = numerals % 10;\n        if (step === 0) {\n            mem = m;\n        }\n        else if (step === 1) {\n            if (m !== 1) {\n                result.unshift(hArray20_90[m], hArray0_9[mem]);\n            }\n            else {\n                result.unshift(hArray10_19[mem]);\n            }\n        }\n        else if (step === 2) {\n            result.unshift(hArray100_900[m]);\n        }\n        else {\n            if (m !== 5) {\n                result.unshift(hArray1000_9000[m], geresh, ' ');\n            }\n            break;\n        }\n        numerals = Math.floor(numerals / 10);\n        if (step === 0 && numerals === 0) {\n            result.unshift(hArray0_9[m]);\n        }\n        step++;\n    }\n    result = result.join('').split('');\n    if (result.length === 1) {\n        result.push(geresh);\n    }\n    else if (result.length > 1) {\n        result.splice(result.length - 1, 0, gershaim);\n    }\n    return result.join('');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@since 3.2.0\n */\nclass NgbCalendarHebrew extends NgbCalendar {\n    /**\n     * @return {?}\n     */\n    getDaysPerWeek() { return 7; }\n    /**\n     * @param {?=} year\n     * @return {?}\n     */\n    getMonths(year) {\n        if (year && isHebrewLeapYear(year)) {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n        }\n        else {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getWeeksPerMonth() { return 6; }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        /** @type {?} */\n        let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n        b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n        b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n        return b && !isNaN(toGregorian$1(date).getTime());\n    }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date.year += number;\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setHebrewMonth(date, number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setHebrewDay(date, number);\n            default:\n                return date;\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getWeekday(date) {\n        /** @type {?} */\n        const day = toGregorian$1(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    getWeekNumber(week, firstDayOfWeek) {\n        /** @type {?} */\n        const date = week[week.length - 1];\n        return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    }\n    /**\n     * @return {?}\n     */\n    getToday() { return fromGregorian$1(new Date()); }\n    /**\n     * \\@since 3.4.0\n     * @param {?} date\n     * @return {?}\n     */\n    toGregorian(date) { return fromJSDate(toGregorian$1(date)); }\n    /**\n     * \\@since 3.4.0\n     * @param {?} date\n     * @return {?}\n     */\n    fromGregorian(date) { return fromGregorian$1(toJSDate(date)); }\n}\nNgbCalendarHebrew.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\n/** @type {?} */\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/** @type {?} */\nconst MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\n * \\@since 3.2.0\n */\nclass NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n    /**\n     * @param {?} month\n     * @param {?=} year\n     * @return {?}\n     */\n    getMonthShortName(month, year) { return this.getMonthFullName(month, year); }\n    /**\n     * @param {?} month\n     * @param {?=} year\n     * @return {?}\n     */\n    getMonthFullName(month, year) {\n        return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n    }\n    /**\n     * @param {?} weekday\n     * @return {?}\n     */\n    getWeekdayShortName(weekday) { return WEEKDAYS[weekday - 1]; }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayAriaLabel(date) {\n        return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayNumerals(date) { return hebrewNumerals(date.day); }\n    /**\n     * @param {?} weekNumber\n     * @return {?}\n     */\n    getWeekNumerals(weekNumber) { return hebrewNumerals(weekNumber); }\n    /**\n     * @param {?} year\n     * @return {?}\n     */\n    getYearNumerals(year) { return hebrewNumerals(year); }\n}\nNgbDatepickerI18nHebrew.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\nclass NgbDateNativeAdapter extends NgbDateAdapter {\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     * @param {?} date\n     * @return {?}\n     */\n    fromModel(date) {\n        return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n    }\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     * @param {?} date\n     * @return {?}\n     */\n    toModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n            null;\n    }\n    /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    _fromNativeDate(date) {\n        return { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n    }\n    /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    _toNativeDate(date) {\n        /** @type {?} */\n        const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n        // avoid 30 -> 1930 conversion\n        jsDate.setFullYear(date.year);\n        return jsDate;\n    }\n}\nNgbDateNativeAdapter.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * \\@since 3.2.0\n */\nclass NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n    /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    _fromNativeDate(date) {\n        return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\n    }\n    /**\n     * @protected\n     * @param {?} date\n     * @return {?}\n     */\n    _toNativeDate(date) {\n        /** @type {?} */\n        const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n        // avoid 30 -> 1930 conversion\n        jsDate.setUTCFullYear(date.year);\n        return jsDate;\n    }\n}\nNgbDateNativeUTCAdapter.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbDatepickerModule {\n}\nNgbDatepickerModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n                    NgbInputDatepicker\n                ],\n                exports: [NgbDatepicker, NgbInputDatepicker],\n                imports: [CommonModule, FormsModule],\n                entryComponents: [NgbDatepicker]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nclass NgbDropdownConfig {\n    constructor() {\n        this.autoClose = true;\n        this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    }\n}\nNgbDropdownConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbDropdownConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbDropdownConfig_Factory() { return new NgbDropdownConfig(); }, token: NgbDropdownConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbNavbar {\n}\nNgbNavbar.decorators = [\n    { type: Directive, args: [{ selector: '.navbar' },] }\n];\n/**\n * A directive you should put put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * \\@since 4.1.0\n */\nclass NgbDropdownItem {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this._disabled = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = (/** @type {?} */ (value)) === '' || value === true; // accept an empty attribute as true\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n}\nNgbDropdownItem.decorators = [\n    { type: Directive, args: [{ selector: '[ngbDropdownItem]', host: { 'class': 'dropdown-item', '[class.disabled]': 'disabled' } },] }\n];\n/** @nocollapse */\nNgbDropdownItem.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgbDropdownItem.propDecorators = {\n    disabled: [{ type: Input }]\n};\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\nclass NgbDropdownMenu {\n    /**\n     * @param {?} dropdown\n     */\n    constructor(dropdown) {\n        this.dropdown = dropdown;\n        this.placement = 'bottom';\n        this.isOpen = false;\n    }\n}\nNgbDropdownMenu.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngbDropdownMenu]',\n                host: {\n                    '[class.dropdown-menu]': 'true',\n                    '[class.show]': 'dropdown.isOpen()',\n                    '[attr.x-placement]': 'placement',\n                    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                    '(keydown.End)': 'dropdown.onKeyDown($event)',\n                    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n                    '(keydown.Space)': 'dropdown.onKeyDown($event)'\n                }\n            },] }\n];\n/** @nocollapse */\nNgbDropdownMenu.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => NgbDropdown)),] }] }\n];\nNgbDropdownMenu.propDecorators = {\n    menuItems: [{ type: ContentChildren, args: [NgbDropdownItem,] }]\n};\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * \\@since 1.1.0\n */\nclass NgbDropdownAnchor {\n    /**\n     * @param {?} dropdown\n     * @param {?} _elementRef\n     */\n    constructor(dropdown, _elementRef) {\n        this.dropdown = dropdown;\n        this._elementRef = _elementRef;\n        this.anchorEl = _elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    getNativeElement() { return this._elementRef.nativeElement; }\n}\nNgbDropdownAnchor.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngbDropdownAnchor]',\n                host: { 'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()' }\n            },] }\n];\n/** @nocollapse */\nNgbDropdownAnchor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => NgbDropdown)),] }] },\n    { type: ElementRef }\n];\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\nclass NgbDropdownToggle extends NgbDropdownAnchor {\n    /**\n     * @param {?} dropdown\n     * @param {?} elementRef\n     */\n    constructor(dropdown, elementRef) {\n        super(dropdown, elementRef);\n    }\n}\nNgbDropdownToggle.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngbDropdownToggle]',\n                host: {\n                    'class': 'dropdown-toggle',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'dropdown.isOpen()',\n                    '(click)': 'dropdown.toggle()',\n                    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                    '(keydown.End)': 'dropdown.onKeyDown($event)'\n                },\n                providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => NgbDropdownToggle)) }]\n            },] }\n];\n/** @nocollapse */\nNgbDropdownToggle.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => NgbDropdown)),] }] },\n    { type: ElementRef }\n];\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\nclass NgbDropdown {\n    /**\n     * @param {?} _changeDetector\n     * @param {?} config\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} ngbNavbar\n     */\n    constructor(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, ngbNavbar) {\n        this._changeDetector = _changeDetector;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._closed$ = new Subject();\n        /**\n         * Defines whether or not the dropdown menu is opened initially.\n         */\n        this._open = false;\n        /**\n         * An event fired when the dropdown is opened or closed.\n         *\n         * The event payload is a `boolean`:\n         * * `true` - the dropdown was opened\n         * * `false` - the dropdown was closed\n         */\n        this.openChange = new EventEmitter();\n        this.placement = config.placement;\n        this.container = config.container;\n        this.autoClose = config.autoClose;\n        this.display = ngbNavbar ? 'static' : 'dynamic';\n        this._zoneSubscription = _ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        () => { this._positionMenu(); }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._ngZone.onStable.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._applyPlacementClasses();\n            if (this._open) {\n                this._setCloseHandlers();\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.container && this._open) {\n            this._applyContainer(this.container);\n        }\n        if (changes.placement && !changes.placement.isFirstChange) {\n            this._applyPlacementClasses();\n        }\n    }\n    /**\n     * Checks if the dropdown menu is open.\n     * @return {?}\n     */\n    isOpen() { return this._open; }\n    /**\n     * Opens the dropdown menu.\n     * @return {?}\n     */\n    open() {\n        if (!this._open) {\n            this._open = true;\n            this._applyContainer(this.container);\n            this.openChange.emit(true);\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setCloseHandlers() {\n        /** @type {?} */\n        const anchor = this._anchor;\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, (/**\n         * @return {?}\n         */\n        () => this.close()), this._closed$, this._menu ? [this._menuElement.nativeElement] : [], anchor ? [anchor.getNativeElement()] : [], '.dropdown-item,.dropdown-divider');\n    }\n    /**\n     * Closes the dropdown menu.\n     * @return {?}\n     */\n    close() {\n        if (this._open) {\n            this._open = false;\n            this._resetContainer();\n            this._closed$.next();\n            this.openChange.emit(false);\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the dropdown menu.\n     * @return {?}\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._resetContainer();\n        this._closed$.next();\n        this._zoneSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        // tslint:disable-next-line:deprecation\n        /** @type {?} */\n        const key = event.which;\n        /** @type {?} */\n        const itemElements = this._getMenuElements();\n        /** @type {?} */\n        let position = -1;\n        /** @type {?} */\n        let isEventFromItems = false;\n        /** @type {?} */\n        const isEventFromToggle = this._isEventFromToggle(event);\n        if (!isEventFromToggle && itemElements.length) {\n            itemElements.forEach((/**\n             * @param {?} itemElement\n             * @param {?} index\n             * @return {?}\n             */\n            (itemElement, index) => {\n                if (itemElement.contains((/** @type {?} */ (event.target)))) {\n                    isEventFromItems = true;\n                }\n                if (itemElement === this._document.activeElement) {\n                    position = index;\n                }\n            }));\n        }\n        // closing on Enter / Space\n        if (key === Key.Space || key === Key.Enter) {\n            if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n                this.close();\n            }\n            return;\n        }\n        // opening / navigating\n        if (isEventFromToggle || isEventFromItems) {\n            this.open();\n            if (itemElements.length) {\n                switch (key) {\n                    case Key.ArrowDown:\n                        position = Math.min(position + 1, itemElements.length - 1);\n                        break;\n                    case Key.ArrowUp:\n                        if (this._isDropup() && position === -1) {\n                            position = itemElements.length - 1;\n                            break;\n                        }\n                        position = Math.max(position - 1, 0);\n                        break;\n                    case Key.Home:\n                        position = 0;\n                        break;\n                    case Key.End:\n                        position = itemElements.length - 1;\n                        break;\n                }\n                itemElements[position].focus();\n            }\n            event.preventDefault();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _isDropup() { return this._elementRef.nativeElement.classList.contains('dropup'); }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isEventFromToggle(event) {\n        return this._anchor.getNativeElement().contains((/** @type {?} */ (event.target)));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getMenuElements() {\n        /** @type {?} */\n        const menu = this._menu;\n        if (menu == null) {\n            return [];\n        }\n        return menu.menuItems.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => !item.disabled)).map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => item.elementRef.nativeElement));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _positionMenu() {\n        /** @type {?} */\n        const menu = this._menu;\n        if (this.isOpen() && menu) {\n            this._applyPlacementClasses(this.display === 'dynamic' ?\n                positionElements(this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement, this.container === 'body') :\n                this._getFirstPlacement(this.placement));\n        }\n    }\n    /**\n     * @private\n     * @param {?} placement\n     * @return {?}\n     */\n    _getFirstPlacement(placement) {\n        return Array.isArray(placement) ? placement[0] : (/** @type {?} */ (placement.split(' ')[0]));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetContainer() {\n        /** @type {?} */\n        const renderer = this._renderer;\n        /** @type {?} */\n        const menuElement = this._menuElement;\n        if (menuElement) {\n            /** @type {?} */\n            const dropdownElement = this._elementRef.nativeElement;\n            /** @type {?} */\n            const dropdownMenuElement = menuElement.nativeElement;\n            renderer.appendChild(dropdownElement, dropdownMenuElement);\n            renderer.removeStyle(dropdownMenuElement, 'position');\n            renderer.removeStyle(dropdownMenuElement, 'transform');\n        }\n        if (this._bodyContainer) {\n            renderer.removeChild(this._document.body, this._bodyContainer);\n            this._bodyContainer = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?=} container\n     * @return {?}\n     */\n    _applyContainer(container = null) {\n        this._resetContainer();\n        if (container === 'body') {\n            /** @type {?} */\n            const renderer = this._renderer;\n            /** @type {?} */\n            const dropdownMenuElement = this._menuElement.nativeElement;\n            /** @type {?} */\n            const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n            // Override some styles to have the positionning working\n            renderer.setStyle(bodyContainer, 'position', 'absolute');\n            renderer.setStyle(dropdownMenuElement, 'position', 'static');\n            renderer.setStyle(bodyContainer, 'z-index', '1050');\n            renderer.appendChild(bodyContainer, dropdownMenuElement);\n            renderer.appendChild(this._document.body, bodyContainer);\n        }\n    }\n    /**\n     * @private\n     * @param {?=} placement\n     * @return {?}\n     */\n    _applyPlacementClasses(placement) {\n        /** @type {?} */\n        const menu = this._menu;\n        if (menu) {\n            if (!placement) {\n                placement = this._getFirstPlacement(this.placement);\n            }\n            /** @type {?} */\n            const renderer = this._renderer;\n            /** @type {?} */\n            const dropdownElement = this._elementRef.nativeElement;\n            // remove the current placement classes\n            renderer.removeClass(dropdownElement, 'dropup');\n            renderer.removeClass(dropdownElement, 'dropdown');\n            menu.placement = this.display === 'static' ? null : placement;\n            /*\n                  * apply the new placement\n                  * in case of top use up-arrow or down-arrow otherwise\n                  */\n            /** @type {?} */\n            const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n            renderer.addClass(dropdownElement, dropdownClass);\n            /** @type {?} */\n            const bodyContainer = this._bodyContainer;\n            if (bodyContainer) {\n                renderer.removeClass(bodyContainer, 'dropup');\n                renderer.removeClass(bodyContainer, 'dropdown');\n                renderer.addClass(bodyContainer, dropdownClass);\n            }\n        }\n    }\n}\nNgbDropdown.decorators = [\n    { type: Directive, args: [{ selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: { '[class.show]': 'isOpen()' } },] }\n];\n/** @nocollapse */\nNgbDropdown.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NgbDropdownConfig },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgbNavbar, decorators: [{ type: Optional }] }\n];\nNgbDropdown.propDecorators = {\n    _menu: [{ type: ContentChild, args: [NgbDropdownMenu, { static: false },] }],\n    _menuElement: [{ type: ContentChild, args: [NgbDropdownMenu, { read: ElementRef, static: false },] }],\n    _anchor: [{ type: ContentChild, args: [NgbDropdownAnchor, { static: false },] }],\n    autoClose: [{ type: Input }],\n    _open: [{ type: Input, args: ['open',] }],\n    placement: [{ type: Input }],\n    container: [{ type: Input }],\n    display: [{ type: Input }],\n    openChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\nclass NgbDropdownModule {\n}\nNgbDropdownModule.decorators = [\n    { type: NgModule, args: [{ declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n *\n * \\@since 3.1.0\n */\nclass NgbModalConfig {\n    constructor() {\n        this.backdrop = true;\n        this.keyboard = true;\n    }\n}\nNgbModalConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbModalConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbModalConfig_Factory() { return new NgbModalConfig(); }, token: NgbModalConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ContentRef {\n    /**\n     * @param {?} nodes\n     * @param {?=} viewRef\n     * @param {?=} componentRef\n     */\n    constructor(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n}\n/**\n * @template T\n */\nclass PopupService {\n    /**\n     * @param {?} _type\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _applicationRef\n     */\n    constructor(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver, _applicationRef) {\n        this._type = _type;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._applicationRef = _applicationRef;\n    }\n    /**\n     * @param {?=} content\n     * @param {?=} context\n     * @return {?}\n     */\n    open(content, context) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, context);\n            this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), 0, this._injector, this._contentRef.nodes);\n        }\n        return this._windowRef;\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        if (this._windowRef) {\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n            this._windowRef = null;\n            if (this._contentRef.viewRef) {\n                this._applicationRef.detachView(this._contentRef.viewRef);\n                this._contentRef.viewRef.destroy();\n                this._contentRef = null;\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} content\n     * @param {?=} context\n     * @return {?}\n     */\n    _getContentRef(content, context) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            /** @type {?} */\n            const viewRef = content.createEmbeddedView(context);\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._renderer.createText(`${content}`)]]);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst noop = (/**\n * @return {?}\n */\n() => { });\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\nclass ScrollBar {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Detects if a scrollbar is present and if yes, already compensates for its\n     * removal by adding an equivalent padding on the right of the body.\n     *\n     * @return {?} a callback used to revert the compensation (noop if there was none,\n     * otherwise a function removing the padding)\n     */\n    compensate() { return !this._isPresent() ? noop : this._adjustBody(this._getWidth()); }\n    /**\n     * Adds a padding of the given width on the right of the body.\n     *\n     * @private\n     * @param {?} width\n     * @return {?} a callback used to revert the padding to its previous value\n     */\n    _adjustBody(width) {\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const userSetPadding = body.style.paddingRight;\n        /** @type {?} */\n        const paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);\n        body.style['padding-right'] = `${paddingAmount + width}px`;\n        return (/**\n         * @return {?}\n         */\n        () => body.style['padding-right'] = userSetPadding);\n    }\n    /**\n     * Tells whether a scrollbar is currently present on the body.\n     *\n     * @private\n     * @return {?} true if scrollbar is present, false otherwise\n     */\n    _isPresent() {\n        /** @type {?} */\n        const rect = this._document.body.getBoundingClientRect();\n        return rect.left + rect.right < window.innerWidth;\n    }\n    /**\n     * Calculates and returns the width of a scrollbar.\n     *\n     * @private\n     * @return {?} the width of a scrollbar on this page\n     */\n    _getWidth() {\n        /** @type {?} */\n        const measurer = this._document.createElement('div');\n        measurer.className = 'modal-scrollbar-measure';\n        /** @type {?} */\n        const body = this._document.body;\n        body.appendChild(measurer);\n        /** @type {?} */\n        const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n        body.removeChild(measurer);\n        return width;\n    }\n}\nScrollBar.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nScrollBar.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollBar.ngInjectableDef = ɵɵdefineInjectable({ factory: function ScrollBar_Factory() { return new ScrollBar(ɵɵinject(DOCUMENT)); }, token: ScrollBar, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbModalBackdrop {\n}\nNgbModalBackdrop.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-modal-backdrop',\n                template: '',\n                host: { '[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050' }\n            }] }\n];\nNgbModalBackdrop.propDecorators = {\n    backdropClass: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nclass NgbActiveModal {\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     * @param {?=} result\n     * @return {?}\n     */\n    close(result) { }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     * @param {?=} reason\n     * @return {?}\n     */\n    dismiss(reason) { }\n}\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nclass NgbModalRef {\n    /**\n     * @param {?} _windowCmptRef\n     * @param {?} _contentRef\n     * @param {?=} _backdropCmptRef\n     * @param {?=} _beforeDismiss\n     */\n    constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._windowCmptRef = _windowCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        _windowCmptRef.instance.dismissEvent.subscribe((/**\n         * @param {?} reason\n         * @return {?}\n         */\n        (reason) => { this.dismiss(reason); }));\n        this.result = new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        (resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        }));\n        this.result.then(null, (/**\n         * @return {?}\n         */\n        () => { }));\n    }\n    /**\n     * The instance of a component used for the modal content.\n     *\n     * When a `TemplateRef` is used as the content, will return `undefined`.\n     * @return {?}\n     */\n    get componentInstance() {\n        if (this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     * @param {?=} result\n     * @return {?}\n     */\n    close(result) {\n        if (this._windowCmptRef) {\n            this._resolve(result);\n            this._removeModalElements();\n        }\n    }\n    /**\n     * @private\n     * @param {?=} reason\n     * @return {?}\n     */\n    _dismiss(reason) {\n        this._reject(reason);\n        this._removeModalElements();\n    }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     * @param {?=} reason\n     * @return {?}\n     */\n    dismiss(reason) {\n        if (this._windowCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                /** @type {?} */\n                const dismiss = this._beforeDismiss();\n                if (dismiss && dismiss.then) {\n                    dismiss.then((/**\n                     * @param {?} result\n                     * @return {?}\n                     */\n                    result => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }), (/**\n                     * @return {?}\n                     */\n                    () => { }));\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _removeModalElements() {\n        /** @type {?} */\n        const windowNativeEl = this._windowCmptRef.location.nativeElement;\n        windowNativeEl.parentNode.removeChild(windowNativeEl);\n        this._windowCmptRef.destroy();\n        if (this._backdropCmptRef) {\n            /** @type {?} */\n            const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n            backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n            this._backdropCmptRef.destroy();\n        }\n        if (this._contentRef && this._contentRef.viewRef) {\n            this._contentRef.viewRef.destroy();\n        }\n        this._windowCmptRef = null;\n        this._backdropCmptRef = null;\n        this._contentRef = null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst ModalDismissReasons = {\n    BACKDROP_CLICK: 0,\n    ESC: 1,\n};\nModalDismissReasons[ModalDismissReasons.BACKDROP_CLICK] = 'BACKDROP_CLICK';\nModalDismissReasons[ModalDismissReasons.ESC] = 'ESC';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbModalWindow {\n    /**\n     * @param {?} _document\n     * @param {?} _elRef\n     */\n    constructor(_document, _elRef) {\n        this._document = _document;\n        this._elRef = _elRef;\n        this.backdrop = true;\n        this.keyboard = true;\n        this.dismissEvent = new EventEmitter();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    backdropClick($event) {\n        if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n            this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    escKey($event) {\n        if (this.keyboard && !$event.defaultPrevented) {\n            this.dismiss(ModalDismissReasons.ESC);\n        }\n    }\n    /**\n     * @param {?} reason\n     * @return {?}\n     */\n    dismiss(reason) { this.dismissEvent.emit(reason); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() { this._elWithFocus = this._document.activeElement; }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this._elRef.nativeElement.contains(document.activeElement)) {\n            /** @type {?} */\n            const autoFocusable = (/** @type {?} */ (this._elRef.nativeElement.querySelector(`[ngbAutofocus]`)));\n            /** @type {?} */\n            const firstFocusable = getFocusableBoundaryElements(this._elRef.nativeElement)[0];\n            /** @type {?} */\n            const elementToFocus = autoFocusable || firstFocusable || this._elRef.nativeElement;\n            elementToFocus.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const elWithFocus = this._elWithFocus;\n        /** @type {?} */\n        let elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        elementToFocus.focus();\n        this._elWithFocus = null;\n    }\n}\nNgbModalWindow.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-modal-window',\n                host: {\n                    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n                    'role': 'dialog',\n                    'tabindex': '-1',\n                    '(keyup.esc)': 'escKey($event)',\n                    '(click)': 'backdropClick($event)',\n                    '[attr.aria-modal]': 'true',\n                    '[attr.aria-labelledby]': 'ariaLabelledBy',\n                },\n                template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '') +\n     (scrollable ? ' modal-dialog-scrollable' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\"ngb-modal-window .component-host-scrollable{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;overflow:hidden}\"]\n            }] }\n];\n/** @nocollapse */\nNgbModalWindow.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ElementRef }\n];\nNgbModalWindow.propDecorators = {\n    ariaLabelledBy: [{ type: Input }],\n    backdrop: [{ type: Input }],\n    centered: [{ type: Input }],\n    keyboard: [{ type: Input }],\n    scrollable: [{ type: Input }],\n    size: [{ type: Input }],\n    windowClass: [{ type: Input }],\n    dismissEvent: [{ type: Output, args: ['dismiss',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbModalStack {\n    /**\n     * @param {?} _applicationRef\n     * @param {?} _injector\n     * @param {?} _document\n     * @param {?} _scrollBar\n     * @param {?} _rendererFactory\n     */\n    constructor(_applicationRef, _injector, _document, _scrollBar, _rendererFactory) {\n        this._applicationRef = _applicationRef;\n        this._injector = _injector;\n        this._document = _document;\n        this._scrollBar = _scrollBar;\n        this._rendererFactory = _rendererFactory;\n        this._activeWindowCmptHasChanged = new Subject();\n        this._ariaHiddenValues = new Map();\n        this._backdropAttributes = ['backdropClass'];\n        this._modalRefs = [];\n        this._windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'scrollable', 'size', 'windowClass'];\n        this._windowCmpts = [];\n        // Trap focus on active WindowCmpt\n        this._activeWindowCmptHasChanged.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._windowCmpts.length) {\n                /** @type {?} */\n                const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n                ngbFocusTrap(activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n                this._revertAriaHidden();\n                this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n            }\n        }));\n    }\n    /**\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} options\n     * @return {?}\n     */\n    open(moduleCFR, contentInjector, content, options) {\n        /** @type {?} */\n        const containerEl = isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n        /** @type {?} */\n        const renderer = this._rendererFactory.createRenderer(null, null);\n        /** @type {?} */\n        const revertPaddingForScrollBar = this._scrollBar.compensate();\n        /** @type {?} */\n        const removeBodyClass = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this._modalRefs.length) {\n                renderer.removeClass(this._document.body, 'modal-open');\n                this._revertAriaHidden();\n            }\n        });\n        if (!containerEl) {\n            throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n        }\n        /** @type {?} */\n        const activeModal = new NgbActiveModal();\n        /** @type {?} */\n        const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal, options);\n        /** @type {?} */\n        let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n        /** @type {?} */\n        let windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n        /** @type {?} */\n        let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerModalRef(ngbModalRef);\n        this._registerWindowCmpt(windowCmptRef);\n        ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n        ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n        activeModal.close = (/**\n         * @param {?} result\n         * @return {?}\n         */\n        (result) => { ngbModalRef.close(result); });\n        activeModal.dismiss = (/**\n         * @param {?} reason\n         * @return {?}\n         */\n        (reason) => { ngbModalRef.dismiss(reason); });\n        this._applyWindowOptions(windowCmptRef.instance, options);\n        if (this._modalRefs.length === 1) {\n            renderer.addClass(this._document.body, 'modal-open');\n        }\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            this._applyBackdropOptions(backdropCmptRef.instance, options);\n        }\n        return ngbModalRef;\n    }\n    /**\n     * @param {?=} reason\n     * @return {?}\n     */\n    dismissAll(reason) { this._modalRefs.forEach((/**\n     * @param {?} ngbModalRef\n     * @return {?}\n     */\n    ngbModalRef => ngbModalRef.dismiss(reason))); }\n    /**\n     * @return {?}\n     */\n    hasOpenModals() { return this._modalRefs.length > 0; }\n    /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} containerEl\n     * @return {?}\n     */\n    _attachBackdrop(moduleCFR, containerEl) {\n        /** @type {?} */\n        let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n        /** @type {?} */\n        let backdropCmptRef = backdropFactory.create(this._injector);\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    }\n    /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} containerEl\n     * @param {?} contentRef\n     * @return {?}\n     */\n    _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n        /** @type {?} */\n        let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n        /** @type {?} */\n        let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n        this._applicationRef.attachView(windowCmptRef.hostView);\n        containerEl.appendChild(windowCmptRef.location.nativeElement);\n        return windowCmptRef;\n    }\n    /**\n     * @private\n     * @param {?} windowInstance\n     * @param {?} options\n     * @return {?}\n     */\n    _applyWindowOptions(windowInstance, options) {\n        this._windowAttributes.forEach((/**\n         * @param {?} optionName\n         * @return {?}\n         */\n        (optionName) => {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        }));\n    }\n    /**\n     * @private\n     * @param {?} backdropInstance\n     * @param {?} options\n     * @return {?}\n     */\n    _applyBackdropOptions(backdropInstance, options) {\n        this._backdropAttributes.forEach((/**\n         * @param {?} optionName\n         * @return {?}\n         */\n        (optionName) => {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        }));\n    }\n    /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} activeModal\n     * @param {?} options\n     * @return {?}\n     */\n    _getContentRef(moduleCFR, contentInjector, content, activeModal, options) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeModal);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(moduleCFR, contentInjector, content, activeModal, options);\n        }\n    }\n    /**\n     * @private\n     * @param {?} content\n     * @param {?} activeModal\n     * @return {?}\n     */\n    _createFromTemplateRef(content, activeModal) {\n        /** @type {?} */\n        const context = {\n            $implicit: activeModal,\n            /**\n             * @param {?} result\n             * @return {?}\n             */\n            close(result) { activeModal.close(result); },\n            /**\n             * @param {?} reason\n             * @return {?}\n             */\n            dismiss(reason) { activeModal.dismiss(reason); }\n        };\n        /** @type {?} */\n        const viewRef = content.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    /**\n     * @private\n     * @param {?} content\n     * @return {?}\n     */\n    _createFromString(content) {\n        /** @type {?} */\n        const component = this._document.createTextNode(`${content}`);\n        return new ContentRef([[component]]);\n    }\n    /**\n     * @private\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} context\n     * @param {?} options\n     * @return {?}\n     */\n    _createFromComponent(moduleCFR, contentInjector, content, context, options) {\n        /** @type {?} */\n        const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n        /** @type {?} */\n        const modalContentInjector = Injector.create({ providers: [{ provide: NgbActiveModal, useValue: context }], parent: contentInjector });\n        /** @type {?} */\n        const componentRef = contentCmptFactory.create(modalContentInjector);\n        /** @type {?} */\n        const componentNativeEl = componentRef.location.nativeElement;\n        if (options.scrollable) {\n            ((/** @type {?} */ (componentNativeEl))).classList.add('component-host-scrollable');\n        }\n        this._applicationRef.attachView(componentRef.hostView);\n        // FIXME: we should here get rid of the component nativeElement\n        // and use `[Array.from(componentNativeEl.childNodes)]` instead and remove the above CSS class.\n        return new ContentRef([[componentNativeEl]], componentRef.hostView, componentRef);\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setAriaHidden(element) {\n        /** @type {?} */\n        const parent = element.parentElement;\n        if (parent && element !== this._document.body) {\n            Array.from(parent.children).forEach((/**\n             * @param {?} sibling\n             * @return {?}\n             */\n            sibling => {\n                if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n                    this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }));\n            this._setAriaHidden(parent);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _revertAriaHidden() {\n        this._ariaHiddenValues.forEach((/**\n         * @param {?} value\n         * @param {?} element\n         * @return {?}\n         */\n        (value, element) => {\n            if (value) {\n                element.setAttribute('aria-hidden', value);\n            }\n            else {\n                element.removeAttribute('aria-hidden');\n            }\n        }));\n        this._ariaHiddenValues.clear();\n    }\n    /**\n     * @private\n     * @param {?} ngbModalRef\n     * @return {?}\n     */\n    _registerModalRef(ngbModalRef) {\n        /** @type {?} */\n        const unregisterModalRef = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const index = this._modalRefs.indexOf(ngbModalRef);\n            if (index > -1) {\n                this._modalRefs.splice(index, 1);\n            }\n        });\n        this._modalRefs.push(ngbModalRef);\n        ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    }\n    /**\n     * @private\n     * @param {?} ngbWindowCmpt\n     * @return {?}\n     */\n    _registerWindowCmpt(ngbWindowCmpt) {\n        this._windowCmpts.push(ngbWindowCmpt);\n        this._activeWindowCmptHasChanged.next();\n        ngbWindowCmpt.onDestroy((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n            if (index > -1) {\n                this._windowCmpts.splice(index, 1);\n                this._activeWindowCmptHasChanged.next();\n            }\n        }));\n    }\n}\nNgbModalStack.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nNgbModalStack.ctorParameters = () => [\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ScrollBar },\n    { type: RendererFactory2 }\n];\n/** @nocollapse */ NgbModalStack.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbModalStack_Factory() { return new NgbModalStack(ɵɵinject(ApplicationRef), ɵɵinject(INJECTOR), ɵɵinject(DOCUMENT), ɵɵinject(ScrollBar), ɵɵinject(RendererFactory2)); }, token: NgbModalStack, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\nclass NgbModal {\n    /**\n     * @param {?} _moduleCFR\n     * @param {?} _injector\n     * @param {?} _modalStack\n     * @param {?} _config\n     */\n    constructor(_moduleCFR, _injector, _modalStack, _config) {\n        this._moduleCFR = _moduleCFR;\n        this._injector = _injector;\n        this._modalStack = _modalStack;\n        this._config = _config;\n    }\n    /**\n     * Opens a new modal window with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n     * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n     *\n     * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    open(content, options = {}) {\n        /** @type {?} */\n        const combinedOptions = Object.assign({}, this._config, options);\n        return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n    }\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * \\@since 3.1.0\n     * @param {?=} reason\n     * @return {?}\n     */\n    dismissAll(reason) { this._modalStack.dismissAll(reason); }\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * \\@since 3.3.0\n     * @return {?}\n     */\n    hasOpenModals() { return this._modalStack.hasOpenModals(); }\n}\nNgbModal.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nNgbModal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: Injector },\n    { type: NgbModalStack },\n    { type: NgbModalConfig }\n];\n/** @nocollapse */ NgbModal.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbModal_Factory() { return new NgbModal(ɵɵinject(ComponentFactoryResolver), ɵɵinject(INJECTOR), ɵɵinject(NgbModalStack), ɵɵinject(NgbModalConfig)); }, token: NgbModal, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbModalModule {\n}\nNgbModalModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NgbModalBackdrop, NgbModalWindow],\n                entryComponents: [NgbModalBackdrop, NgbModalWindow],\n                providers: [NgbModal]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nclass NgbPaginationConfig {\n    constructor() {\n        this.disabled = false;\n        this.boundaryLinks = false;\n        this.directionLinks = true;\n        this.ellipses = true;\n        this.maxSize = 0;\n        this.pageSize = 10;\n        this.rotate = false;\n    }\n}\nNgbPaginationConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbPaginationConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbPaginationConfig_Factory() { return new NgbPaginationConfig(); }, token: NgbPaginationConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A directive to match the 'ellipsis' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationEllipsis {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationEllipsis.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbPaginationEllipsis]' },] }\n];\n/** @nocollapse */\nNgbPaginationEllipsis.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A directive to match the 'first' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationFirst {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationFirst.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbPaginationFirst]' },] }\n];\n/** @nocollapse */\nNgbPaginationFirst.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A directive to match the 'last' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationLast {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationLast.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbPaginationLast]' },] }\n];\n/** @nocollapse */\nNgbPaginationLast.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A directive to match the 'next' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationNext {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationNext.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbPaginationNext]' },] }\n];\n/** @nocollapse */\nNgbPaginationNext.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A directive to match the page 'number' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationNumber {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationNumber.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbPaginationNumber]' },] }\n];\n/** @nocollapse */\nNgbPaginationNumber.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A directive to match the 'previous' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationPrevious {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationPrevious.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbPaginationPrevious]' },] }\n];\n/** @nocollapse */\nNgbPaginationPrevious.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\nclass NgbPagination {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        this.pageCount = 0;\n        this.pages = [];\n        /**\n         *  The current page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.page = 1;\n        /**\n         *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n         *\n         *  Event payload is the number of the newly selected page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.pageChange = new EventEmitter(true);\n        this.disabled = config.disabled;\n        this.boundaryLinks = config.boundaryLinks;\n        this.directionLinks = config.directionLinks;\n        this.ellipses = config.ellipses;\n        this.maxSize = config.maxSize;\n        this.pageSize = config.pageSize;\n        this.rotate = config.rotate;\n        this.size = config.size;\n    }\n    /**\n     * @return {?}\n     */\n    hasPrevious() { return this.page > 1; }\n    /**\n     * @return {?}\n     */\n    hasNext() { return this.page < this.pageCount; }\n    /**\n     * @return {?}\n     */\n    nextDisabled() { return !this.hasNext() || this.disabled; }\n    /**\n     * @return {?}\n     */\n    previousDisabled() { return !this.hasPrevious() || this.disabled; }\n    /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    selectPage(pageNumber) { this._updatePages(pageNumber); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) { this._updatePages(this.page); }\n    /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    isEllipsis(pageNumber) { return pageNumber === -1; }\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     * @private\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    _applyEllipses(start, end) {\n        if (this.ellipses) {\n            if (start > 0) {\n                if (start > 1) {\n                    this.pages.unshift(-1);\n                }\n                this.pages.unshift(1);\n            }\n            if (end < this.pageCount) {\n                if (end < (this.pageCount - 1)) {\n                    this.pages.push(-1);\n                }\n                this.pages.push(this.pageCount);\n            }\n        }\n    }\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     * @private\n     * @return {?}\n     */\n    _applyRotation() {\n        /** @type {?} */\n        let start = 0;\n        /** @type {?} */\n        let end = this.pageCount;\n        /** @type {?} */\n        let leftOffset = Math.floor(this.maxSize / 2);\n        /** @type {?} */\n        let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n        if (this.page <= leftOffset) {\n            // very beginning, no rotation -> [0..maxSize]\n            end = this.maxSize;\n        }\n        else if (this.pageCount - this.page < leftOffset) {\n            // very end, no rotation -> [len-maxSize..len]\n            start = this.pageCount - this.maxSize;\n        }\n        else {\n            // rotate\n            start = this.page - leftOffset - 1;\n            end = this.page + rightOffset;\n        }\n        return [start, end];\n    }\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     * @private\n     * @return {?}\n     */\n    _applyPagination() {\n        /** @type {?} */\n        let page = Math.ceil(this.page / this.maxSize) - 1;\n        /** @type {?} */\n        let start = page * this.maxSize;\n        /** @type {?} */\n        let end = start + this.maxSize;\n        return [start, end];\n    }\n    /**\n     * @private\n     * @param {?} newPageNo\n     * @return {?}\n     */\n    _setPageInRange(newPageNo) {\n        /** @type {?} */\n        const prevPageNo = this.page;\n        this.page = getValueInRange(newPageNo, this.pageCount, 1);\n        if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n            this.pageChange.emit(this.page);\n        }\n    }\n    /**\n     * @private\n     * @param {?} newPage\n     * @return {?}\n     */\n    _updatePages(newPage) {\n        this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n        if (!isNumber(this.pageCount)) {\n            this.pageCount = 0;\n        }\n        // fill-in model needed to render pages\n        this.pages.length = 0;\n        for (let i = 1; i <= this.pageCount; i++) {\n            this.pages.push(i);\n        }\n        // set page within 1..max range\n        this._setPageInRange(newPage);\n        // apply maxSize if necessary\n        if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n            /** @type {?} */\n            let start = 0;\n            /** @type {?} */\n            let end = this.pageCount;\n            // either paginating or rotating page numbers\n            if (this.rotate) {\n                [start, end] = this._applyRotation();\n            }\n            else {\n                [start, end] = this._applyPagination();\n            }\n            this.pages = this.pages.slice(start, end);\n            // adding ellipses\n            this._applyEllipses(start, end);\n        }\n    }\n}\nNgbPagination.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-pagination',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'role': 'navigation' },\n                template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n            }] }\n];\n/** @nocollapse */\nNgbPagination.ctorParameters = () => [\n    { type: NgbPaginationConfig }\n];\nNgbPagination.propDecorators = {\n    tplEllipsis: [{ type: ContentChild, args: [NgbPaginationEllipsis, { static: false },] }],\n    tplFirst: [{ type: ContentChild, args: [NgbPaginationFirst, { static: false },] }],\n    tplLast: [{ type: ContentChild, args: [NgbPaginationLast, { static: false },] }],\n    tplNext: [{ type: ContentChild, args: [NgbPaginationNext, { static: false },] }],\n    tplNumber: [{ type: ContentChild, args: [NgbPaginationNumber, { static: false },] }],\n    tplPrevious: [{ type: ContentChild, args: [NgbPaginationPrevious, { static: false },] }],\n    disabled: [{ type: Input }],\n    boundaryLinks: [{ type: Input }],\n    directionLinks: [{ type: Input }],\n    ellipses: [{ type: Input }],\n    rotate: [{ type: Input }],\n    collectionSize: [{ type: Input }],\n    maxSize: [{ type: Input }],\n    page: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageChange: [{ type: Output }],\n    size: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DIRECTIVES = [\n    NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n    NgbPaginationPrevious\n];\nclass NgbPaginationModule {\n}\nNgbPaginationModule.decorators = [\n    { type: NgModule, args: [{ declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Trigger {\n    /**\n     * @param {?} open\n     * @param {?=} close\n     */\n    constructor(open, close) {\n        this.open = open;\n        this.close = close;\n        if (!close) {\n            this.close = open;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n/** @type {?} */\nconst DEFAULT_ALIASES = {\n    'hover': ['mouseenter', 'mouseleave'],\n    'focus': ['focusin', 'focusout'],\n};\n/**\n * @param {?} triggers\n * @param {?=} aliases\n * @return {?}\n */\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n    /** @type {?} */\n    const trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    /** @type {?} */\n    const parsedTriggers = trimmedTriggers.split(/\\s+/).map((/**\n     * @param {?} trigger\n     * @return {?}\n     */\n    trigger => trigger.split(':'))).map((/**\n     * @param {?} triggerPair\n     * @return {?}\n     */\n    (triggerPair) => {\n        /** @type {?} */\n        let alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    }));\n    /** @type {?} */\n    const manualTriggers = parsedTriggers.filter((/**\n     * @param {?} triggerPair\n     * @return {?}\n     */\n    triggerPair => triggerPair.isManual()));\n    if (manualTriggers.length > 1) {\n        throw 'Triggers parse error: only one manual trigger is allowed';\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n    }\n    return parsedTriggers;\n}\n/**\n * @param {?} renderer\n * @param {?} nativeElement\n * @param {?} triggers\n * @param {?} isOpenedFn\n * @return {?}\n */\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n    return new Observable((/**\n     * @param {?} subscriber\n     * @return {?}\n     */\n    subscriber => {\n        /** @type {?} */\n        const listeners = [];\n        /** @type {?} */\n        const openFn = (/**\n         * @return {?}\n         */\n        () => subscriber.next(true));\n        /** @type {?} */\n        const closeFn = (/**\n         * @return {?}\n         */\n        () => subscriber.next(false));\n        /** @type {?} */\n        const toggleFn = (/**\n         * @return {?}\n         */\n        () => subscriber.next(!isOpenedFn()));\n        triggers.forEach((/**\n         * @param {?} trigger\n         * @return {?}\n         */\n        (trigger) => {\n            if (trigger.open === trigger.close) {\n                listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n            }\n            else {\n                listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n            }\n        }));\n        return (/**\n         * @return {?}\n         */\n        () => { listeners.forEach((/**\n         * @param {?} unsubscribeFn\n         * @return {?}\n         */\n        unsubscribeFn => unsubscribeFn())); });\n    }));\n}\n/** @type {?} */\nconst delayOrNoop = (/**\n * @template T\n * @param {?} time\n * @return {?}\n */\n(time) => time > 0 ? delay(time) : (/**\n * @param {?} a\n * @return {?}\n */\n(a) => a));\n/**\n * @param {?} openDelay\n * @param {?} closeDelay\n * @param {?} isOpenedFn\n * @return {?}\n */\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n    return (/**\n     * @param {?} input$\n     * @return {?}\n     */\n    (input$) => {\n        /** @type {?} */\n        let pending = null;\n        /** @type {?} */\n        const filteredInput$ = input$.pipe(map((/**\n         * @param {?} open\n         * @return {?}\n         */\n        open => ({ open }))), filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const currentlyOpen = isOpenedFn();\n            if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n                pending = event;\n                return true;\n            }\n            if (pending && pending.open !== event.open) {\n                pending = null;\n            }\n            return false;\n        })), share());\n        /** @type {?} */\n        const delayedOpen$ = filteredInput$.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.open)), delayOrNoop(openDelay));\n        /** @type {?} */\n        const delayedClose$ = filteredInput$.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => !event.open)), delayOrNoop(closeDelay));\n        return merge(delayedOpen$, delayedClose$)\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n            }\n            return false;\n        })), map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.open)));\n    });\n}\n/**\n * @param {?} renderer\n * @param {?} nativeElement\n * @param {?} triggers\n * @param {?} isOpenedFn\n * @param {?} openFn\n * @param {?} closeFn\n * @param {?=} openDelay\n * @param {?=} closeDelay\n * @return {?}\n */\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn, openDelay = 0, closeDelay = 0) {\n    /** @type {?} */\n    const parsedTriggers = parseTriggers(triggers);\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /** @type {?} */\n    const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n        .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n        .subscribe((/**\n     * @param {?} open\n     * @return {?}\n     */\n    open => (open ? openFn() : closeFn())));\n    return (/**\n     * @return {?}\n     */\n    () => subscription.unsubscribe());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nclass NgbPopoverConfig {\n    constructor() {\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.triggers = 'click';\n        this.disablePopover = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n}\nNgbPopoverConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbPopoverConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbPopoverConfig_Factory() { return new NgbPopoverConfig(); }, token: NgbPopoverConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$3 = 0;\nclass NgbPopoverWindow {\n    /**\n     * @return {?}\n     */\n    isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\nNgbPopoverWindow.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-popover-window',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: { '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id' },\n                template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n                styles: [\"ngb-popover-window.bs-popover-bottom>.arrow,ngb-popover-window.bs-popover-top>.arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left>.arrow,ngb-popover-window.bs-popover-top-left>.arrow{left:2em}ngb-popover-window.bs-popover-bottom-right>.arrow,ngb-popover-window.bs-popover-top-right>.arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left>.arrow,ngb-popover-window.bs-popover-right>.arrow{top:50%;margin-top:-.5rem}ngb-popover-window.bs-popover-left-top>.arrow,ngb-popover-window.bs-popover-right-top>.arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom>.arrow,ngb-popover-window.bs-popover-right-bottom>.arrow{top:auto;bottom:.7em}\"]\n            }] }\n];\nNgbPopoverWindow.propDecorators = {\n    title: [{ type: Input }],\n    id: [{ type: Input }],\n    popoverClass: [{ type: Input }],\n    context: [{ type: Input }]\n};\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\nclass NgbPopover {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} injector\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} config\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _changeDetector\n     * @param {?} _applicationRef\n     */\n    constructor(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, _applicationRef) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        this._applicationRef = _applicationRef;\n        /**\n         * An event emitted when the popover is shown. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the popover is hidden. Contains no payload.\n         */\n        this.hidden = new EventEmitter();\n        this._ngbPopoverWindowId = `ngb-popover-${nextId$3++}`;\n        this.autoClose = config.autoClose;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disablePopover = config.disablePopover;\n        this.popoverClass = config.popoverClass;\n        this.openDelay = config.openDelay;\n        this.closeDelay = config.closeDelay;\n        this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, _applicationRef);\n        this._zoneSubscription = _ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._windowRef) {\n                positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body', 'bs-popover');\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _isDisabled() {\n        if (this.disablePopover) {\n            return true;\n        }\n        if (!this.ngbPopover && !this.popoverTitle) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     * @param {?=} context\n     * @return {?}\n     */\n    open(context) {\n        if (!this._windowRef && !this._isDisabled()) {\n            this._windowRef = this._popupService.open(this.ngbPopover, context);\n            this._windowRef.instance.title = this.popoverTitle;\n            this._windowRef.instance.context = context;\n            this._windowRef.instance.popoverClass = this.popoverClass;\n            this._windowRef.instance.id = this._ngbPopoverWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening popover from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because popover won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the popover from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, (/**\n             * @return {?}\n             */\n            () => this.close()), this.hidden, [this._windowRef.location.nativeElement]);\n            this.shown.emit();\n        }\n    }\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     * @return {?}\n     */\n    close() {\n        if (this._windowRef) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     * @return {?}\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     * @return {?}\n     */\n    isOpen() { return this._windowRef != null; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // close popover if title and content become empty, or disablePopover set to true\n        if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\n            this.close();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n        this._zoneSubscription.unsubscribe();\n    }\n}\nNgbPopover.decorators = [\n    { type: Directive, args: [{ selector: '[ngbPopover]', exportAs: 'ngbPopover' },] }\n];\n/** @nocollapse */\nNgbPopover.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: Injector },\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: NgbPopoverConfig },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef },\n    { type: ApplicationRef }\n];\nNgbPopover.propDecorators = {\n    autoClose: [{ type: Input }],\n    ngbPopover: [{ type: Input }],\n    popoverTitle: [{ type: Input }],\n    placement: [{ type: Input }],\n    triggers: [{ type: Input }],\n    container: [{ type: Input }],\n    disablePopover: [{ type: Input }],\n    popoverClass: [{ type: Input }],\n    openDelay: [{ type: Input }],\n    closeDelay: [{ type: Input }],\n    shown: [{ type: Output }],\n    hidden: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbPopoverModule {\n}\nNgbPopoverModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NgbPopover, NgbPopoverWindow],\n                exports: [NgbPopover],\n                imports: [CommonModule],\n                entryComponents: [NgbPopoverWindow]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nclass NgbProgressbarConfig {\n    constructor() {\n        this.max = 100;\n        this.animated = false;\n        this.striped = false;\n        this.showValue = false;\n    }\n}\nNgbProgressbarConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbProgressbarConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbProgressbarConfig_Factory() { return new NgbProgressbarConfig(); }, token: NgbProgressbarConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\nclass NgbProgressbar {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        /**\n         * The current value for the progress bar.\n         *\n         * Should be in the `[0, max]` range.\n         */\n        this.value = 0;\n        this.max = config.max;\n        this.animated = config.animated;\n        this.striped = config.striped;\n        this.type = config.type;\n        this.showValue = config.showValue;\n        this.height = config.height;\n    }\n    /**\n     * @return {?}\n     */\n    getValue() { return getValueInRange(this.value, this.max); }\n    /**\n     * @return {?}\n     */\n    getPercentValue() { return 100 * this.getValue() / this.max; }\n}\nNgbProgressbar.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-progressbar',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nNgbProgressbar.ctorParameters = () => [\n    { type: NgbProgressbarConfig }\n];\nNgbProgressbar.propDecorators = {\n    max: [{ type: Input }],\n    animated: [{ type: Input }],\n    striped: [{ type: Input }],\n    showValue: [{ type: Input }],\n    type: [{ type: Input }],\n    value: [{ type: Input }],\n    height: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbProgressbarModule {\n}\nNgbProgressbarModule.decorators = [\n    { type: NgModule, args: [{ declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nclass NgbRatingConfig {\n    constructor() {\n        this.max = 10;\n        this.readonly = false;\n        this.resettable = false;\n    }\n}\nNgbRatingConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbRatingConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbRatingConfig_Factory() { return new NgbRatingConfig(); }, token: NgbRatingConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_RATING_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgbRating)),\n    multi: true\n};\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\nclass NgbRating {\n    /**\n     * @param {?} config\n     * @param {?} _changeDetectorRef\n     */\n    constructor(config, _changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.contexts = [];\n        this.disabled = false;\n        /**\n         * An event emitted when the user is hovering over a given rating.\n         *\n         * Event payload equals to the rating being hovered over.\n         */\n        this.hover = new EventEmitter();\n        /**\n         * An event emitted when the user stops hovering over a given rating.\n         *\n         * Event payload equals to the rating of the last item being hovered over.\n         */\n        this.leave = new EventEmitter();\n        /**\n         * An event emitted when the user selects a new rating.\n         *\n         * Event payload equals to the newly selected rating.\n         */\n        this.rateChange = new EventEmitter(true);\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.max = config.max;\n        this.readonly = config.readonly;\n    }\n    /**\n     * @return {?}\n     */\n    ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    enter(value) {\n        if (!this.readonly && !this.disabled) {\n            this._updateState(value);\n        }\n        this.hover.emit(value);\n    }\n    /**\n     * @return {?}\n     */\n    handleBlur() { this.onTouched(); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    handleClick(value) { this.update(this.resettable && this.rate === value ? 0 : value); }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeyDown(event) {\n        // tslint:disable-next-line:deprecation\n        switch (event.which) {\n            case Key.ArrowDown:\n            case Key.ArrowLeft:\n                this.update(this.rate - 1);\n                break;\n            case Key.ArrowUp:\n            case Key.ArrowRight:\n                this.update(this.rate + 1);\n                break;\n            case Key.Home:\n                this.update(0);\n                break;\n            case Key.End:\n                this.update(this.max);\n                break;\n            default:\n                return;\n        }\n        // note 'return' in default case\n        event.preventDefault();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['rate']) {\n            this.update(this.rate);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.contexts = Array.from({ length: this.max }, (/**\n         * @param {?} v\n         * @param {?} k\n         * @return {?}\n         */\n        (v, k) => ({ fill: 0, index: k })));\n        this._updateState(this.rate);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @return {?}\n     */\n    reset() {\n        this.leave.emit(this.nextRate);\n        this._updateState(this.rate);\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) { this.disabled = isDisabled; }\n    /**\n     * @param {?} value\n     * @param {?=} internalChange\n     * @return {?}\n     */\n    update(value, internalChange = true) {\n        /** @type {?} */\n        const newRate = getValueInRange(value, this.max, 0);\n        if (!this.readonly && !this.disabled && this.rate !== newRate) {\n            this.rate = newRate;\n            this.rateChange.emit(this.rate);\n        }\n        if (internalChange) {\n            this.onChange(this.rate);\n            this.onTouched();\n        }\n        this._updateState(this.rate);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.update(value, false);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _getFillValue(index) {\n        /** @type {?} */\n        const diff = this.nextRate - index;\n        if (diff >= 1) {\n            return 100;\n        }\n        if (diff < 1 && diff > 0) {\n            return parseInt((diff * 100).toFixed(2), 10);\n        }\n        return 0;\n    }\n    /**\n     * @private\n     * @param {?} nextValue\n     * @return {?}\n     */\n    _updateState(nextValue) {\n        this.nextRate = nextValue;\n        this.contexts.forEach((/**\n         * @param {?} context\n         * @param {?} index\n         * @return {?}\n         */\n        (context, index) => context.fill = this._getFillValue(index)));\n    }\n}\nNgbRating.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-rating',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'd-inline-flex',\n                    'tabindex': '0',\n                    'role': 'slider',\n                    'aria-valuemin': '0',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuenow]': 'nextRate',\n                    '[attr.aria-valuetext]': 'ariaValueText()',\n                    '[attr.aria-disabled]': 'readonly ? true : null',\n                    '(blur)': 'handleBlur()',\n                    '(keydown)': 'handleKeyDown($event)',\n                    '(mouseleave)': 'reset()'\n                },\n                template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n                providers: [NGB_RATING_VALUE_ACCESSOR]\n            }] }\n];\n/** @nocollapse */\nNgbRating.ctorParameters = () => [\n    { type: NgbRatingConfig },\n    { type: ChangeDetectorRef }\n];\nNgbRating.propDecorators = {\n    max: [{ type: Input }],\n    rate: [{ type: Input }],\n    readonly: [{ type: Input }],\n    resettable: [{ type: Input }],\n    starTemplate: [{ type: Input }],\n    starTemplateFromContent: [{ type: ContentChild, args: [TemplateRef, { static: false },] }],\n    hover: [{ type: Output }],\n    leave: [{ type: Output }],\n    rateChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbRatingModule {\n}\nNgbRatingModule.decorators = [\n    { type: NgModule, args: [{ declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\nclass NgbTabsetConfig {\n    constructor() {\n        this.justify = 'start';\n        this.orientation = 'horizontal';\n        this.type = 'tabs';\n    }\n}\nNgbTabsetConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbTabsetConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbTabsetConfig_Factory() { return new NgbTabsetConfig(); }, token: NgbTabsetConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$4 = 0;\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n */\nclass NgbTabTitle {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbTabTitle.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbTabTitle]' },] }\n];\n/** @nocollapse */\nNgbTabTitle.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A directive to wrap content to be displayed in a tab.\n */\nclass NgbTabContent {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbTabContent.decorators = [\n    { type: Directive, args: [{ selector: 'ng-template[ngbTabContent]' },] }\n];\n/** @nocollapse */\nNgbTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/**\n * A directive representing an individual tab.\n */\nclass NgbTab {\n    constructor() {\n        /**\n         * The tab identifier.\n         *\n         * Must be unique for the entire document for proper accessibility support.\n         */\n        this.id = `ngb-tab-${nextId$4++}`;\n        /**\n         * If `true`, the current tab is disabled and can't be toggled.\n         */\n        this.disabled = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    }\n}\nNgbTab.decorators = [\n    { type: Directive, args: [{ selector: 'ngb-tab' },] }\n];\nNgbTab.propDecorators = {\n    id: [{ type: Input }],\n    title: [{ type: Input }],\n    disabled: [{ type: Input }],\n    titleTpls: [{ type: ContentChildren, args: [NgbTabTitle, { descendants: false },] }],\n    contentTpls: [{ type: ContentChildren, args: [NgbTabContent, { descendants: false },] }]\n};\n/**\n * A component that makes it easy to create tabbed interface.\n */\nclass NgbTabset {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        /**\n         * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n         */\n        this.destroyOnHide = true;\n        /**\n         * A tab change event emitted right before the tab change happens.\n         *\n         * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n         */\n        this.tabChange = new EventEmitter();\n        this.type = config.type;\n        this.justify = config.justify;\n        this.orientation = config.orientation;\n    }\n    /**\n     * The horizontal alignment of the tabs with flexbox utilities.\n     * @param {?} className\n     * @return {?}\n     */\n    set justify(className) {\n        if (className === 'fill' || className === 'justified') {\n            this.justifyClass = `nav-${className}`;\n        }\n        else {\n            this.justifyClass = `justify-content-${className}`;\n        }\n    }\n    /**\n     * Selects the tab with the given id and shows its associated content panel.\n     *\n     * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n     * hidden depending on the `destroyOnHide` value.\n     * @param {?} tabId\n     * @return {?}\n     */\n    select(tabId) {\n        /** @type {?} */\n        let selectedTab = this._getTabById(tabId);\n        if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n            /** @type {?} */\n            let defaultPrevented = false;\n            this.tabChange.emit({ activeId: this.activeId, nextId: selectedTab.id, preventDefault: (/**\n                 * @return {?}\n                 */\n                () => { defaultPrevented = true; }) });\n            if (!defaultPrevented) {\n                this.activeId = selectedTab.id;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // auto-correct activeId that might have been set incorrectly as input\n        /** @type {?} */\n        let activeTab = this._getTabById(this.activeId);\n        this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n    }\n    /**\n     * @private\n     * @param {?} id\n     * @return {?}\n     */\n    _getTabById(id) {\n        /** @type {?} */\n        let tabsWithId = this.tabs.filter((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab.id === id));\n        return tabsWithId.length ? tabsWithId[0] : null;\n    }\n}\nNgbTabset.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-tabset',\n                exportAs: 'ngbTabset',\n                template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-selected]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n            }] }\n];\n/** @nocollapse */\nNgbTabset.ctorParameters = () => [\n    { type: NgbTabsetConfig }\n];\nNgbTabset.propDecorators = {\n    tabs: [{ type: ContentChildren, args: [NgbTab,] }],\n    activeId: [{ type: Input }],\n    destroyOnHide: [{ type: Input }],\n    justify: [{ type: Input }],\n    orientation: [{ type: Input }],\n    type: [{ type: Input }],\n    tabChange: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\nclass NgbTabsetModule {\n}\nNgbTabsetModule.decorators = [\n    { type: NgModule, args: [{ declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbTime {\n    /**\n     * @param {?=} hour\n     * @param {?=} minute\n     * @param {?=} second\n     */\n    constructor(hour, minute, second) {\n        this.hour = toInteger(hour);\n        this.minute = toInteger(minute);\n        this.second = toInteger(second);\n    }\n    /**\n     * @param {?=} step\n     * @return {?}\n     */\n    changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n    /**\n     * @param {?} hour\n     * @return {?}\n     */\n    updateHour(hour) {\n        if (isNumber(hour)) {\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n        }\n        else {\n            this.hour = NaN;\n        }\n    }\n    /**\n     * @param {?=} step\n     * @return {?}\n     */\n    changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n    /**\n     * @param {?} minute\n     * @return {?}\n     */\n    updateMinute(minute) {\n        if (isNumber(minute)) {\n            this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n            this.changeHour(Math.floor(minute / 60));\n        }\n        else {\n            this.minute = NaN;\n        }\n    }\n    /**\n     * @param {?=} step\n     * @return {?}\n     */\n    changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n    /**\n     * @param {?} second\n     * @return {?}\n     */\n    updateSecond(second) {\n        if (isNumber(second)) {\n            this.second = second < 0 ? 60 + second % 60 : second % 60;\n            this.changeMinute(Math.floor(second / 60));\n        }\n        else {\n            this.second = NaN;\n        }\n    }\n    /**\n     * @param {?=} checkSecs\n     * @return {?}\n     */\n    isValid(checkSecs = true) {\n        return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nclass NgbTimepickerConfig {\n    constructor() {\n        this.meridian = false;\n        this.spinners = true;\n        this.seconds = false;\n        this.hourStep = 1;\n        this.minuteStep = 1;\n        this.secondStep = 1;\n        this.disabled = false;\n        this.readonlyInputs = false;\n        this.size = 'medium';\n    }\n}\nNgbTimepickerConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbTimepickerConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbTimepickerConfig_Factory() { return new NgbTimepickerConfig(); }, token: NgbTimepickerConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n    return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * \\@since 2.2.0\n * @abstract\n * @template T\n */\nclass NgbTimeAdapter {\n}\nNgbTimeAdapter.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY },] }\n];\n/** @nocollapse */ NgbTimeAdapter.ngInjectableDef = ɵɵdefineInjectable({ factory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY, token: NgbTimeAdapter, providedIn: \"root\" });\nclass NgbTimeStructAdapter extends NgbTimeAdapter {\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     * @param {?} time\n     * @return {?}\n     */\n    fromModel(time) {\n        return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n            { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null } :\n            null;\n    }\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     * @param {?} time\n     * @return {?}\n     */\n    toModel(time) {\n        return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n            { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null } :\n            null;\n    }\n}\nNgbTimeStructAdapter.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} locale\n * @return {?}\n */\nfunction NGB_TIMEPICKER_I18N_FACTORY(locale) {\n    return new NgbTimepickerI18nDefault(locale);\n}\n/**\n * Type of the service supplying day periods (for example, 'AM' and 'PM') to NgbTimepicker component.\n * The default implementation of this service honors the Angular locale, and uses the registered locale data,\n * as explained in the Angular i18n guide.\n * @abstract\n */\nclass NgbTimepickerI18n {\n}\nNgbTimepickerI18n.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root', useFactory: NGB_TIMEPICKER_I18N_FACTORY, deps: [LOCALE_ID] },] }\n];\n/** @nocollapse */ NgbTimepickerI18n.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbTimepickerI18n_Factory() { return NGB_TIMEPICKER_I18N_FACTORY(ɵɵinject(LOCALE_ID)); }, token: NgbTimepickerI18n, providedIn: \"root\" });\nclass NgbTimepickerI18nDefault extends NgbTimepickerI18n {\n    /**\n     * @param {?} locale\n     */\n    constructor(locale) {\n        super();\n        this._periods = getLocaleDayPeriods(locale, FormStyle.Standalone, TranslationWidth.Narrow);\n    }\n    /**\n     * @return {?}\n     */\n    getMorningPeriod() { return this._periods[0]; }\n    /**\n     * @return {?}\n     */\n    getAfternoonPeriod() { return this._periods[1]; }\n}\nNgbTimepickerI18nDefault.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNgbTimepickerI18nDefault.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgbTimepicker)),\n    multi: true\n};\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\nclass NgbTimepicker {\n    /**\n     * @param {?} _config\n     * @param {?} _ngbTimeAdapter\n     * @param {?} _cd\n     * @param {?} i18n\n     */\n    constructor(_config, _ngbTimeAdapter, _cd, i18n) {\n        this._config = _config;\n        this._ngbTimeAdapter = _ngbTimeAdapter;\n        this._cd = _cd;\n        this.i18n = i18n;\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this.meridian = _config.meridian;\n        this.spinners = _config.spinners;\n        this.seconds = _config.seconds;\n        this.hourStep = _config.hourStep;\n        this.minuteStep = _config.minuteStep;\n        this.secondStep = _config.secondStep;\n        this.disabled = _config.disabled;\n        this.readonlyInputs = _config.readonlyInputs;\n        this.size = _config.size;\n    }\n    /**\n     * The number of hours to add/subtract when clicking hour spinners.\n     * @param {?} step\n     * @return {?}\n     */\n    set hourStep(step) {\n        this._hourStep = isInteger(step) ? step : this._config.hourStep;\n    }\n    /**\n     * @return {?}\n     */\n    get hourStep() { return this._hourStep; }\n    /**\n     * The number of minutes to add/subtract when clicking minute spinners.\n     * @param {?} step\n     * @return {?}\n     */\n    set minuteStep(step) {\n        this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n    }\n    /**\n     * @return {?}\n     */\n    get minuteStep() { return this._minuteStep; }\n    /**\n     * The number of seconds to add/subtract when clicking second spinners.\n     * @param {?} step\n     * @return {?}\n     */\n    set secondStep(step) {\n        this._secondStep = isInteger(step) ? step : this._config.secondStep;\n    }\n    /**\n     * @return {?}\n     */\n    get secondStep() { return this._secondStep; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        /** @type {?} */\n        const structValue = this._ngbTimeAdapter.fromModel(value);\n        this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n        if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n            this.model.second = 0;\n        }\n        this._cd.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) { this.disabled = isDisabled; }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    changeHour(step) {\n        this.model.changeHour(step);\n        this.propagateModelChange();\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    changeMinute(step) {\n        this.model.changeMinute(step);\n        this.propagateModelChange();\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    changeSecond(step) {\n        this.model.changeSecond(step);\n        this.propagateModelChange();\n    }\n    /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    updateHour(newVal) {\n        /** @type {?} */\n        const isPM = this.model.hour >= 12;\n        /** @type {?} */\n        const enteredHour = toInteger(newVal);\n        if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n            this.model.updateHour(enteredHour + 12);\n        }\n        else {\n            this.model.updateHour(enteredHour);\n        }\n        this.propagateModelChange();\n    }\n    /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    updateMinute(newVal) {\n        this.model.updateMinute(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    updateSecond(newVal) {\n        this.model.updateSecond(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    /**\n     * @return {?}\n     */\n    toggleMeridian() {\n        if (this.meridian) {\n            this.changeHour(12);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    formatHour(value) {\n        if (isNumber(value)) {\n            if (this.meridian) {\n                return padNumber(value % 12 === 0 ? 12 : value % 12);\n            }\n            else {\n                return padNumber(value % 24);\n            }\n        }\n        else {\n            return padNumber(NaN);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    formatMinSec(value) { return padNumber(value); }\n    /**\n     * @return {?}\n     */\n    get isSmallSize() { return this.size === 'small'; }\n    /**\n     * @return {?}\n     */\n    get isLargeSize() { return this.size === 'large'; }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n            this.model.second = 0;\n            this.propagateModelChange(false);\n        }\n    }\n    /**\n     * @private\n     * @param {?=} touched\n     * @return {?}\n     */\n    propagateModelChange(touched = true) {\n        if (touched) {\n            this.onTouched();\n        }\n        if (this.model.isValid(this.seconds)) {\n            this.onChange(this._ngbTimeAdapter.toModel({ hour: this.model.hour, minute: this.model.minute, second: this.model.second }));\n        }\n        else {\n            this.onChange(this._ngbTimeAdapter.toModel(null));\n        }\n    }\n}\nNgbTimepicker.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-timepicker',\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">{{ i18n.getAfternoonPeriod() }}</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">{{ i18n.getMorningPeriod() }}</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n                providers: [NGB_TIMEPICKER_VALUE_ACCESSOR],\n                styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:\\\"\\\";display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\"]\n            }] }\n];\n/** @nocollapse */\nNgbTimepicker.ctorParameters = () => [\n    { type: NgbTimepickerConfig },\n    { type: NgbTimeAdapter },\n    { type: ChangeDetectorRef },\n    { type: NgbTimepickerI18n }\n];\nNgbTimepicker.propDecorators = {\n    meridian: [{ type: Input }],\n    spinners: [{ type: Input }],\n    seconds: [{ type: Input }],\n    hourStep: [{ type: Input }],\n    minuteStep: [{ type: Input }],\n    secondStep: [{ type: Input }],\n    readonlyInputs: [{ type: Input }],\n    size: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbTimepickerModule {\n}\nNgbTimepickerModule.decorators = [\n    { type: NgModule, args: [{ declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configuration service for the NgbToast component. You can inject this service, typically in your root component,\n * and customize the values of its properties in order to provide default values for all the toasts used in the\n * application.\n *\n * \\@since 5.0.0\n */\nclass NgbToastConfig {\n    constructor() {\n        this.autohide = true;\n        this.delay = 500;\n        this.ariaLive = 'polite';\n    }\n}\nNgbToastConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbToastConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbToastConfig_Factory() { return new NgbToastConfig(); }, token: NgbToastConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This directive allows the usage of HTML markup or other directives\n * inside of the toast's header.\n *\n * \\@since 5.0.0\n */\nclass NgbToastHeader {\n}\nNgbToastHeader.decorators = [\n    { type: Directive, args: [{ selector: '[ngbToastHeader]' },] }\n];\n/**\n * Toasts provide feedback messages as notifications to the user.\n * Goal is to mimic the push notifications available both on mobile and desktop operating systems.\n *\n * \\@since 5.0.0\n */\nclass NgbToast {\n    /**\n     * @param {?} ariaLive\n     * @param {?} config\n     */\n    constructor(ariaLive, config) {\n        this.ariaLive = ariaLive;\n        /**\n         * A template like `<ng-template ngbToastHeader></ng-template>` can be\n         * used in the projected content to allow markup usage.\n         */\n        this.contentHeaderTpl = null;\n        /**\n         * An event fired immediately when toast's `hide()` method has been called.\n         * It can only occur in 2 different scenarios:\n         * - `autohide` timeout fires\n         * - user clicks on a closing cross (&times)\n         *\n         * Additionally this output is purely informative. The toast won't disappear. It's up to the user to take care of\n         * that.\n         */\n        this.hideOutput = new EventEmitter();\n        if (this.ariaLive == null) {\n            this.ariaLive = config.ariaLive;\n        }\n        this.delay = config.delay;\n        this.autohide = config.autohide;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() { this._init(); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('autohide' in changes) {\n            this._clearTimeout();\n            this._init();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        this._clearTimeout();\n        this.hideOutput.emit();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _init() {\n        if (this.autohide && !this._timeoutID) {\n            this._timeoutID = setTimeout((/**\n             * @return {?}\n             */\n            () => this.hide()), this.delay);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearTimeout() {\n        if (this._timeoutID) {\n            clearTimeout(this._timeoutID);\n            this._timeoutID = null;\n        }\n    }\n}\nNgbToast.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-toast',\n                exportAs: 'ngbToast',\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    'role': 'alert',\n                    '[attr.aria-live]': 'ariaLive',\n                    'aria-atomic': 'true',\n                    '[class.toast]': 'true',\n                    '[class.show]': 'true',\n                    '[class.autohide]': 'autohide',\n                },\n                template: `\n    <ng-template #headerTpl>\n      <strong class=\"mr-auto\">{{header}}</strong>\n    </ng-template>\n    <ng-template [ngIf]=\"contentHeaderTpl || header\">\n      <div class=\"toast-header\">\n        <ng-template [ngTemplateOutlet]=\"contentHeaderTpl || headerTpl\"></ng-template>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.toast.close-aria\" (click)=\"hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    </ng-template>\n    <div class=\"toast-body\">\n      <ng-content></ng-content>\n    </div>\n  `,\n                styles: [\".ngb-toasts{position:fixed;top:0;right:0;margin:.5em;z-index:1200}ngb-toast .toast-header .close{margin-left:auto;margin-bottom:.25rem}\"]\n            }] }\n];\n/** @nocollapse */\nNgbToast.ctorParameters = () => [\n    { type: String, decorators: [{ type: Attribute, args: ['aria-live',] }] },\n    { type: NgbToastConfig }\n];\nNgbToast.propDecorators = {\n    delay: [{ type: Input }],\n    autohide: [{ type: Input }],\n    header: [{ type: Input }],\n    contentHeaderTpl: [{ type: ContentChild, args: [NgbToastHeader, { read: TemplateRef, static: true },] }],\n    hideOutput: [{ type: Output, args: ['hide',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbToastModule {\n}\nNgbToastModule.decorators = [\n    { type: NgModule, args: [{ declarations: [NgbToast, NgbToastHeader], imports: [CommonModule], exports: [NgbToast, NgbToastHeader] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nclass NgbTooltipConfig {\n    constructor() {\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.triggers = 'hover focus';\n        this.disableTooltip = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n}\nNgbTooltipConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbTooltipConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbTooltipConfig_Factory() { return new NgbTooltipConfig(); }, token: NgbTooltipConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$5 = 0;\nclass NgbTooltipWindow {\n}\nNgbTooltipWindow.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-tooltip-window',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: { '[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id' },\n                template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n                styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}\"]\n            }] }\n];\nNgbTooltipWindow.propDecorators = {\n    id: [{ type: Input }],\n    tooltipClass: [{ type: Input }]\n};\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\nclass NgbTooltip {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} injector\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} config\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _changeDetector\n     * @param {?} _applicationRef\n     */\n    constructor(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, _applicationRef) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        this._applicationRef = _applicationRef;\n        /**\n         * An event emitted when the tooltip is shown. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the popover is hidden. Contains no payload.\n         */\n        this.hidden = new EventEmitter();\n        this._ngbTooltipWindowId = `ngb-tooltip-${nextId$5++}`;\n        this.autoClose = config.autoClose;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disableTooltip = config.disableTooltip;\n        this.tooltipClass = config.tooltipClass;\n        this.openDelay = config.openDelay;\n        this.closeDelay = config.closeDelay;\n        this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, _applicationRef);\n        this._zoneSubscription = _ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._windowRef) {\n                positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body', 'bs-tooltip');\n            }\n        }));\n    }\n    /**\n     * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n     *\n     * If the content if falsy, the tooltip won't open.\n     * @param {?} value\n     * @return {?}\n     */\n    set ngbTooltip(value) {\n        this._ngbTooltip = value;\n        if (!value && this._windowRef) {\n            this.close();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get ngbTooltip() { return this._ngbTooltip; }\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     * @param {?=} context\n     * @return {?}\n     */\n    open(context) {\n        if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n            this._windowRef = this._popupService.open(this._ngbTooltip, context);\n            this._windowRef.instance.tooltipClass = this.tooltipClass;\n            this._windowRef.instance.id = this._ngbTooltipWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because tooltip won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the tooltip from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, (/**\n             * @return {?}\n             */\n            () => this.close()), this.hidden, [this._windowRef.location.nativeElement]);\n            this.shown.emit();\n        }\n    }\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     * @return {?}\n     */\n    close() {\n        if (this._windowRef != null) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     * @return {?}\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     * @return {?}\n     */\n    isOpen() { return this._windowRef != null; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n        this._zoneSubscription.unsubscribe();\n    }\n}\nNgbTooltip.decorators = [\n    { type: Directive, args: [{ selector: '[ngbTooltip]', exportAs: 'ngbTooltip' },] }\n];\n/** @nocollapse */\nNgbTooltip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: Injector },\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: NgbTooltipConfig },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef },\n    { type: ApplicationRef }\n];\nNgbTooltip.propDecorators = {\n    autoClose: [{ type: Input }],\n    placement: [{ type: Input }],\n    triggers: [{ type: Input }],\n    container: [{ type: Input }],\n    disableTooltip: [{ type: Input }],\n    tooltipClass: [{ type: Input }],\n    openDelay: [{ type: Input }],\n    closeDelay: [{ type: Input }],\n    shown: [{ type: Output }],\n    hidden: [{ type: Output }],\n    ngbTooltip: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbTooltipModule {\n}\nNgbTooltipModule.decorators = [\n    { type: NgModule, args: [{ declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow] },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\nclass NgbHighlight {\n    constructor() {\n        /**\n         * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n         */\n        this.highlightClass = 'ngb-highlight';\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const result = toString(this.result);\n        /** @type {?} */\n        const terms = Array.isArray(this.term) ? this.term : [this.term];\n        /** @type {?} */\n        const escapedTerms = terms.map((/**\n         * @param {?} term\n         * @return {?}\n         */\n        term => regExpEscape(toString(term)))).filter((/**\n         * @param {?} term\n         * @return {?}\n         */\n        term => term));\n        this.parts = escapedTerms.length ? result.split(new RegExp(`(${escapedTerms.join('|')})`, 'gmi')) : [result];\n    }\n}\nNgbHighlight.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-highlight',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n                    `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n                    `</ng-template>`,\n                styles: [\".ngb-highlight{font-weight:700}\"]\n            }] }\n];\nNgbHighlight.propDecorators = {\n    highlightClass: [{ type: Input }],\n    result: [{ type: Input }],\n    term: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbTypeaheadWindow {\n    constructor() {\n        this.activeIdx = 0;\n        /**\n         * Flag indicating if the first row should be active initially\n         */\n        this.focusFirst = true;\n        /**\n         * A function used to format a given result before display. This function should return a formatted string without any\n         * HTML markup\n         */\n        this.formatter = toString;\n        /**\n         * Event raised when user selects a particular result row\n         */\n        this.selectEvent = new EventEmitter();\n        this.activeChangeEvent = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n    /**\n     * @return {?}\n     */\n    getActive() { return this.results[this.activeIdx]; }\n    /**\n     * @param {?} activeIdx\n     * @return {?}\n     */\n    markActive(activeIdx) {\n        this.activeIdx = activeIdx;\n        this._activeChanged();\n    }\n    /**\n     * @return {?}\n     */\n    next() {\n        if (this.activeIdx === this.results.length - 1) {\n            this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n        }\n        else {\n            this.activeIdx++;\n        }\n        this._activeChanged();\n    }\n    /**\n     * @return {?}\n     */\n    prev() {\n        if (this.activeIdx < 0) {\n            this.activeIdx = this.results.length - 1;\n        }\n        else if (this.activeIdx === 0) {\n            this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n        }\n        else {\n            this.activeIdx--;\n        }\n        this._activeChanged();\n    }\n    /**\n     * @return {?}\n     */\n    resetActive() {\n        this.activeIdx = this.focusFirst ? 0 : -1;\n        this._activeChanged();\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    select(item) { this.selectEvent.emit(item); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() { this.resetActive(); }\n    /**\n     * @private\n     * @return {?}\n     */\n    _activeChanged() {\n        this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    }\n}\nNgbTypeaheadWindow.decorators = [\n    { type: Component, args: [{\n                selector: 'ngb-typeahead-window',\n                exportAs: 'ngbTypeaheadWindow',\n                host: { '(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id' },\n                template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n            }] }\n];\nNgbTypeaheadWindow.propDecorators = {\n    id: [{ type: Input }],\n    focusFirst: [{ type: Input }],\n    results: [{ type: Input }],\n    term: [{ type: Input }],\n    formatter: [{ type: Input }],\n    resultTemplate: [{ type: Input }],\n    selectEvent: [{ type: Output, args: ['select',] }],\n    activeChangeEvent: [{ type: Output, args: ['activeChange',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', { providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY });\n/**\n * @return {?}\n */\nfunction ARIA_LIVE_DELAY_FACTORY() {\n    return 100;\n}\n/**\n * @param {?} document\n * @param {?=} lazyCreate\n * @return {?}\n */\nfunction getLiveElement(document, lazyCreate = false) {\n    /** @type {?} */\n    let element = (/** @type {?} */ (document.body.querySelector('#ngb-live')));\n    if (element == null && lazyCreate) {\n        element = document.createElement('div');\n        element.setAttribute('id', 'ngb-live');\n        element.setAttribute('aria-live', 'polite');\n        element.setAttribute('aria-atomic', 'true');\n        element.classList.add('sr-only');\n        document.body.appendChild(element);\n    }\n    return element;\n}\nclass Live {\n    /**\n     * @param {?} _document\n     * @param {?} _delay\n     */\n    constructor(_document, _delay) {\n        this._document = _document;\n        this._delay = _delay;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const element = getLiveElement(this._document);\n        if (element) {\n            element.parentElement.removeChild(element);\n        }\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    say(message) {\n        /** @type {?} */\n        const element = getLiveElement(this._document, true);\n        /** @type {?} */\n        const delay = this._delay;\n        element.textContent = '';\n        /** @type {?} */\n        const setText = (/**\n         * @return {?}\n         */\n        () => element.textContent = message);\n        if (delay === null) {\n            setText();\n        }\n        else {\n            setTimeout(setText, delay);\n        }\n    }\n}\nLive.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */\nLive.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ARIA_LIVE_DELAY,] }] }\n];\n/** @nocollapse */ Live.ngInjectableDef = ɵɵdefineInjectable({ factory: function Live_Factory() { return new Live(ɵɵinject(DOCUMENT), ɵɵinject(ARIA_LIVE_DELAY)); }, token: Live, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nclass NgbTypeaheadConfig {\n    constructor() {\n        this.editable = true;\n        this.focusFirst = true;\n        this.showHint = false;\n        this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    }\n}\nNgbTypeaheadConfig.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root' },] }\n];\n/** @nocollapse */ NgbTypeaheadConfig.ngInjectableDef = ɵɵdefineInjectable({ factory: function NgbTypeaheadConfig_Factory() { return new NgbTypeaheadConfig(); }, token: NgbTypeaheadConfig, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgbTypeahead)),\n    multi: true\n};\n/** @type {?} */\nlet nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\nclass NgbTypeahead {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} _injector\n     * @param {?} componentFactoryResolver\n     * @param {?} config\n     * @param {?} ngZone\n     * @param {?} _live\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _changeDetector\n     * @param {?} _applicationRef\n     */\n    constructor(_elementRef, _viewContainerRef, _renderer, _injector, componentFactoryResolver, config, ngZone, _live, _document, _ngZone, _changeDetector, _applicationRef) {\n        this._elementRef = _elementRef;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._injector = _injector;\n        this._live = _live;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._changeDetector = _changeDetector;\n        this._applicationRef = _applicationRef;\n        this._closed$ = new Subject();\n        /**\n         * The value for the `autocomplete` attribute for the `<input>` element.\n         *\n         * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n         *\n         * \\@since 2.1.0\n         */\n        this.autocomplete = 'off';\n        /**\n         * The preferred placement of the typeahead.\n         *\n         * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n         * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n         * `\"right-bottom\"`\n         *\n         * Accepts an array of strings or a string with space separated possible values.\n         *\n         * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = 'bottom-left';\n        /**\n         * An event emitted right before an item is selected from the result list.\n         *\n         * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n         */\n        this.selectItem = new EventEmitter();\n        this.popupId = `ngb-typeahead-${nextWindowId++}`;\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this.container = config.container;\n        this.editable = config.editable;\n        this.focusFirst = config.focusFirst;\n        this.showHint = config.showHint;\n        this.placement = config.placement;\n        this._valueChanges = fromEvent(_elementRef.nativeElement, 'input')\n            .pipe(map((/**\n         * @param {?} $event\n         * @return {?}\n         */\n        $event => ((/** @type {?} */ ($event.target))).value)));\n        this._resubscribeTypeahead = new BehaviorSubject(null);\n        this._popupService = new PopupService(NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver, _applicationRef);\n        this._zoneSubscription = ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.isPopupOpen()) {\n                positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body');\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const inputValues$ = this._valueChanges.pipe(tap((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._inputValueBackup = this.showHint ? value : null;\n            if (this.editable) {\n                this._onChange(value);\n            }\n        })));\n        /** @type {?} */\n        const results$ = inputValues$.pipe(this.ngbTypeahead);\n        /** @type {?} */\n        const processedResults$ = results$.pipe(tap((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.editable) {\n                this._onChange(undefined);\n            }\n        })));\n        /** @type {?} */\n        const userInput$ = this._resubscribeTypeahead.pipe(switchMap((/**\n         * @return {?}\n         */\n        () => processedResults$)));\n        this._subscription = this._subscribeToUserInput(userInput$);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._closePopup();\n        this._unsubscribeFromUserInput();\n        this._zoneSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this._onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this._onTouched = fn; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._writeInputValue(this._formatItemForInput(value));\n        if (this.showHint) {\n            this._inputValueBackup = value;\n        }\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * Dismisses typeahead popup window\n     * @return {?}\n     */\n    dismissPopup() {\n        if (this.isPopupOpen()) {\n            this._resubscribeTypeahead.next(null);\n            this._closePopup();\n            if (this.showHint && this._inputValueBackup !== null) {\n                this._writeInputValue(this._inputValueBackup);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Returns true if the typeahead popup window is displayed\n     * @return {?}\n     */\n    isPopupOpen() { return this._windowRef != null; }\n    /**\n     * @return {?}\n     */\n    handleBlur() {\n        this._resubscribeTypeahead.next(null);\n        this._onTouched();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeyDown(event) {\n        if (!this.isPopupOpen()) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        switch (event.which) {\n            case Key.ArrowDown:\n                event.preventDefault();\n                this._windowRef.instance.next();\n                this._showHint();\n                break;\n            case Key.ArrowUp:\n                event.preventDefault();\n                this._windowRef.instance.prev();\n                this._showHint();\n                break;\n            case Key.Enter:\n            case Key.Tab:\n                /** @type {?} */\n                const result = this._windowRef.instance.getActive();\n                if (isDefined(result)) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    this._selectResult(result);\n                }\n                this._closePopup();\n                break;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _openPopup() {\n        if (!this.isPopupOpen()) {\n            this._inputValueBackup = this._elementRef.nativeElement.value;\n            this._windowRef = this._popupService.open();\n            this._windowRef.instance.id = this.popupId;\n            this._windowRef.instance.selectEvent.subscribe((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => this._selectResultClosePopup(result)));\n            this._windowRef.instance.activeChangeEvent.subscribe((/**\n             * @param {?} activeId\n             * @return {?}\n             */\n            (activeId) => this.activeDescendant = activeId));\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            this._changeDetector.markForCheck();\n            ngbAutoClose(this._ngZone, this._document, 'outside', (/**\n             * @return {?}\n             */\n            () => this.dismissPopup()), this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _closePopup() {\n        this._closed$.next();\n        this._popupService.close();\n        this._windowRef = null;\n        this.activeDescendant = undefined;\n    }\n    /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    _selectResult(result) {\n        /** @type {?} */\n        let defaultPrevented = false;\n        this.selectItem.emit({ item: result, preventDefault: (/**\n             * @return {?}\n             */\n            () => { defaultPrevented = true; }) });\n        this._resubscribeTypeahead.next(null);\n        if (!defaultPrevented) {\n            this.writeValue(result);\n            this._onChange(result);\n        }\n    }\n    /**\n     * @private\n     * @param {?} result\n     * @return {?}\n     */\n    _selectResultClosePopup(result) {\n        this._selectResult(result);\n        this._closePopup();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _showHint() {\n        if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n            /** @type {?} */\n            const userInputLowerCase = this._inputValueBackup.toLowerCase();\n            /** @type {?} */\n            const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n            if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n                this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n                this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n            }\n            else {\n                this._writeInputValue(formattedVal);\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} item\n     * @return {?}\n     */\n    _formatItemForInput(item) {\n        return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _writeInputValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n    }\n    /**\n     * @private\n     * @param {?} userInput$\n     * @return {?}\n     */\n    _subscribeToUserInput(userInput$) {\n        return userInput$.subscribe((/**\n         * @param {?} results\n         * @return {?}\n         */\n        (results) => {\n            if (!results || results.length === 0) {\n                this._closePopup();\n            }\n            else {\n                this._openPopup();\n                this._windowRef.instance.focusFirst = this.focusFirst;\n                this._windowRef.instance.results = results;\n                this._windowRef.instance.term = this._elementRef.nativeElement.value;\n                if (this.resultFormatter) {\n                    this._windowRef.instance.formatter = this.resultFormatter;\n                }\n                if (this.resultTemplate) {\n                    this._windowRef.instance.resultTemplate = this.resultTemplate;\n                }\n                this._windowRef.instance.resetActive();\n                // The observable stream we are subscribing to might have async steps\n                // and if a component containing typeahead is using the OnPush strategy\n                // the change detection turn wouldn't be invoked automatically.\n                this._windowRef.changeDetectorRef.detectChanges();\n                this._showHint();\n            }\n            // live announcer\n            /** @type {?} */\n            const count = results ? results.length : 0;\n            this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribeFromUserInput() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._subscription = null;\n    }\n}\nNgbTypeahead.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[ngbTypeahead]',\n                exportAs: 'ngbTypeahead',\n                host: {\n                    '(blur)': 'handleBlur()',\n                    '[class.open]': 'isPopupOpen()',\n                    '(keydown)': 'handleKeyDown($event)',\n                    '[autocomplete]': 'autocomplete',\n                    'autocapitalize': 'off',\n                    'autocorrect': 'off',\n                    'role': 'combobox',\n                    'aria-multiline': 'false',\n                    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n                    '[attr.aria-activedescendant]': 'activeDescendant',\n                    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n                    '[attr.aria-expanded]': 'isPopupOpen()'\n                },\n                providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nNgbTypeahead.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: Renderer2 },\n    { type: Injector },\n    { type: ComponentFactoryResolver },\n    { type: NgbTypeaheadConfig },\n    { type: NgZone },\n    { type: Live },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ApplicationRef }\n];\nNgbTypeahead.propDecorators = {\n    autocomplete: [{ type: Input }],\n    container: [{ type: Input }],\n    editable: [{ type: Input }],\n    focusFirst: [{ type: Input }],\n    inputFormatter: [{ type: Input }],\n    ngbTypeahead: [{ type: Input }],\n    resultFormatter: [{ type: Input }],\n    resultTemplate: [{ type: Input }],\n    showHint: [{ type: Input }],\n    placement: [{ type: Input }],\n    selectItem: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NgbTypeaheadModule {\n}\nNgbTypeaheadModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n                exports: [NgbTypeahead, NgbHighlight],\n                imports: [CommonModule],\n                entryComponents: [NgbTypeaheadWindow]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_MODULES = [\n    NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n    NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n    NgbTabsetModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule\n];\nclass NgbModule {\n}\nNgbModule.decorators = [\n    { type: NgModule, args: [{ imports: NGB_MODULES, exports: NGB_MODULES },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ModalDismissReasons, NgbAccordion, NgbAccordionConfig, NgbAccordionModule, NgbActiveModal, NgbAlert, NgbAlertConfig, NgbAlertModule, NgbButtonLabel, NgbButtonsModule, NgbCalendar, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbCheckBox, NgbCollapse, NgbCollapseModule, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDatepicker, NgbDatepickerConfig, NgbDatepickerI18n, NgbDatepickerI18nHebrew, NgbDatepickerModule, NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbHighlight, NgbInputDatepicker, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef, NgbModule, NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle, NgbPopover, NgbPopoverConfig, NgbPopoverModule, NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule, NgbRadio, NgbRadioGroup, NgbRating, NgbRatingConfig, NgbRatingModule, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource, NgbTab, NgbTabContent, NgbTabTitle, NgbTabset, NgbTabsetConfig, NgbTabsetModule, NgbTimeAdapter, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerI18n, NgbTimepickerModule, NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule, NgbTooltip, NgbTooltipConfig, NgbTooltipModule, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule, NGB_CAROUSEL_DIRECTIVES as ɵa, NGB_DATEPICKER_CALENDAR_FACTORY as ɵb, ARIA_LIVE_DELAY as ɵba, ARIA_LIVE_DELAY_FACTORY as ɵbb, Live as ɵbc, NgbCalendarHijri as ɵbd, ContentRef as ɵbe, NgbDatepickerMonthView as ɵc, NgbDatepickerDayView as ɵd, NgbDatepickerNavigation as ɵe, NgbDatepickerNavigationSelect as ɵf, NGB_DATEPICKER_18N_FACTORY as ɵg, NgbDatepickerI18nDefault as ɵh, NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵi, NgbDateStructAdapter as ɵj, NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵk, NgbDateISOParserFormatter as ɵl, NgbNavbar as ɵm, NgbPopoverWindow as ɵn, NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵo, NgbTimeStructAdapter as ɵp, NGB_TIMEPICKER_I18N_FACTORY as ɵq, NgbTimepickerI18nDefault as ɵr, NgbTooltipWindow as ɵs, NgbTypeaheadWindow as ɵt, NgbDatepickerService as ɵu, NgbDatepickerKeyMapService as ɵv, NgbModalBackdrop as ɵw, NgbModalWindow as ɵx, NgbModalStack as ɵy, ScrollBar as ɵz };\n//# sourceMappingURL=ng-bootstrap.js.map\n","module.exports = \"<div *ngIf=\\\"displayLoader else cartTemplate\\\" class=\\\"biscuit-loader\\\"></div>\\n\\n<ng-template #cartTemplate>\\n  <div *ngIf=\\\"cartHasItems else epmtyCart\\\" class=\\\"card biscuit-info-card cart-header\\\">\\n    <h4>Your cart</h4>\\n  </div>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"flex\\\">\\n      <app-item *ngFor=\\\"let item of cartItems | keyvalue\\\"\\n                class=\\\"biscuit-card-cart text-align-center\\\"\\n                [_id]='item.value._id'\\n                [name]='item.value.name'\\n                [desc]='item.value.desc'\\n                [productType]='item.value.productType'\\n                [pictureURL]='item.value.pictureURL'\\n                [price]='item.value.price'\\n                [animalType]='item.value.animalType'\\n                [isInCart]=\\\"true\\\"\\n                (askIfDeleteItem)=\\\"askIfSeleteItem($event)\\\"\\n      ></app-item>\\n    </div>\\n    <div *ngIf=\\\"cartHasItems\\\" class=\\\"flex buttons\\\">\\n      <button [routerLink]=\\\"['/checkout']\\\" class=\\\"btn btn-primary btn-checkout\\\">Proceed to checkout</button>\\n      <button class=\\\"btn btn-danger\\\" (click)=\\\"clearCart()\\\">Clear cart</button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n\\n<ng-template #askIfDeleteItemTemplate let-modal>\\n  <div class=\\\"modal-header background-red\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Delete from cart</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body text-align-center\\\">\\n    <p>Are you sure you want to remove <B>\\\"{{askIfDeleteItemName}}\\\"</B> from cart ?</p>\\n  </div>\\n  <div class=\\\"modal-footer flex\\\">\\n    <button type=\\\"button\\\" ngbAutofocus class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.dismiss()\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close('Yes')\\\">YES</button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #deleteCartTemplate let-modal>\\n  <div class=\\\"modal-header background-red\\\">\\n    <h4 class=\\\"modal-title\\\">Delete cart</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body text-align-center\\\">\\n    <p>Are you sure you want to delete your cart ?</p>\\n  </div>\\n  <div class=\\\"modal-footer flex\\\">\\n    <button type=\\\"button\\\" ngbAutofocus class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.dismiss()\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close('Yes')\\\">YES</button>\\n  </div>\\n</ng-template>\\n\\n<ng-template #epmtyCart>\\n  <h2 class=\\\"empty-cart biscuit-info-card\\\"> Your cart is empty... Go and buy something for your pet !</h2>\\n</ng-template>\\n\\n\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {NgbModalModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { CartPageComponent } from './components/cart-page/cart-page.component';\nimport { SharedModule } from '../Shared/shared.module';\n\n@NgModule({\n  declarations: [CartPageComponent],\n  imports: [\n  CommonModule,\n    SharedModule,\n    NgbModalModule,\n    RouterModule.forChild([\n      { path: '' , component: CartPageComponent }\n    ])\n  ]\n})\nexport class CartModule { }\n","module.exports = \".flex {\\n  -webkit-box-pack: space-evenly;\\n          justify-content: space-evenly;\\n}\\n\\n.cart-header{\\n  left: 25%;\\n  width: 50%\\n}\\n\\n.biscuit-card-cart {\\n  margin-top: 100px;\\n}\\n\\n.biscuit-card {\\n  position: static;\\n  text-align: center;\\n  width: 100px;\\n  height: 200px;\\n}\\n\\n.flex-last{\\n  align-self: flex-end;\\n}\\n\\n.empty-cart {\\n  margin-top: 10%;\\n  border: 1px solid black;\\n  margin-right: 25%;\\n  margin-left: 25%;\\n  padding: 50px;\\n}\\n\\n.btn-checkout {\\n  margin: 0 20px;\\n}\\n\\n.buttons {\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  margin: 60px 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL0NhcnQvY29tcG9uZW50cy9jYXJ0LXBhZ2UvY2FydC1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4QkFBNkI7VUFBN0IsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsU0FBUztFQUNUO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxvQkFBb0I7QUFDdEI7O0FBQ0E7RUFDRSxlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsYUFBYTtBQUNmOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLHdCQUF1QjtVQUF2Qix1QkFBdUI7RUFDdkIsY0FBYztBQUNoQiIsImZpbGUiOiIuLi9DYXJ0L2NvbXBvbmVudHMvY2FydC1wYWdlL2NhcnQtcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZsZXgge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbn1cblxuLmNhcnQtaGVhZGVye1xuICBsZWZ0OiAyNSU7XG4gIHdpZHRoOiA1MCVcbn1cblxuLmJpc2N1aXQtY2FyZC1jYXJ0IHtcbiAgbWFyZ2luLXRvcDogMTAwcHg7XG59XG5cbi5iaXNjdWl0LWNhcmQge1xuICBwb3NpdGlvbjogc3RhdGljO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDBweDtcbiAgaGVpZ2h0OiAyMDBweDtcbn1cblxuLmZsZXgtbGFzdHtcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG59XG4uZW1wdHktY2FydCB7XG4gIG1hcmdpbi10b3A6IDEwJTtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gIG1hcmdpbi1yaWdodDogMjUlO1xuICBtYXJnaW4tbGVmdDogMjUlO1xuICBwYWRkaW5nOiA1MHB4O1xufVxuXG4uYnRuLWNoZWNrb3V0IHtcbiAgbWFyZ2luOiAwIDIwcHg7XG59XG5cbi5idXR0b25zIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbjogNjBweCAwO1xufVxuIl19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgbModalRef, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { CartService } from '../../../Shared/Services/cart.service';\nimport { HTTP_STATUS, SERVER } from 'src/app/Shared/enums';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-cart-page',\n  templateUrl: './cart-page.component.html',\n  styleUrls: ['./cart-page.component.css']\n})\nexport class CartPageComponent implements OnInit {\n  cartItems = [];\n  askIfDeleteItemName = '';\n  displayLoader = false;\n\n  @ViewChild('askIfDeleteItemTemplate', { static: true }) askIfDeleteItemTemplate: NgbModalRef;\n  @ViewChild('deleteCartTemplate', { static: true }) deleteCartTemplate: NgbModalRef;\n\n  constructor(private cartService: CartService, private modalService: NgbModal, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.post(`${SERVER.URL}/setstatusbyid/cart`, {}).subscribe();\n    this.fetchCart();\n  }\n\n  removeItem(itemId) {\n    this.cartService.deleteItem(itemId).subscribe(response => {\n      if (response.status === HTTP_STATUS.OK) {\n        console.log('item removed');\n        this.fetchCart();\n      }\n    });\n  }\n\n  clearCart() {\n    this.openModal(this.deleteCartTemplate).then(() => {\n      this.cartService.clearCart().subscribe(() => this.fetchCart());\n    });\n  }\n\n  openModal(modalTemplateRef: NgbModalRef) {\n    return this.modalService.open(modalTemplateRef, {\n      size: 'sm',\n      centered: true\n    }).result;\n  }\n\n  askIfSeleteItem(item) {\n    this.askIfDeleteItemName = item.name;\n    this.openModal(this.askIfDeleteItemTemplate).then(() => this.removeItem(item._id), () => { });\n  }\n\n  fetchCart() {\n    this.displayLoader = true;\n    this.cartService.getUserCart().subscribe(cart => {\n      this.cartItems = cart as Array<any>;\n      this.cartItems = this.cartService.removeDuplicates(this.cartItems);\n      this.displayLoader = false;\n    });\n  }\n\n  get cartHasItems() {\n    return Object.keys(this.cartItems).length;\n  }\n}\n"],"sourceRoot":""}